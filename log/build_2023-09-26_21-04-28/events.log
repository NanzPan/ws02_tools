[0.000000] (-) TimerEvent: {}
[0.000290] (cpp01_launch) JobQueued: {'identifier': 'cpp01_launch', 'dependencies': OrderedDict()}
[0.000824] (cpp02_rosbag2) JobQueued: {'identifier': 'cpp02_rosbag2', 'dependencies': OrderedDict()}
[0.000856] (kruisee_lidar) JobQueued: {'identifier': 'kruisee_lidar', 'dependencies': OrderedDict()}
[0.000873] (cpp01_launch) JobStarted: {'identifier': 'cpp01_launch'}
[0.007640] (cpp02_rosbag2) JobStarted: {'identifier': 'cpp02_rosbag2'}
[0.011306] (kruisee_lidar) JobStarted: {'identifier': 'kruisee_lidar'}
[0.017728] (cpp01_launch) JobProgress: {'identifier': 'cpp01_launch', 'progress': 'cmake'}
[0.018102] (cpp01_launch) JobProgress: {'identifier': 'cpp01_launch', 'progress': 'build'}
[0.018685] (cpp01_launch) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/pz10on/Work/ws02_tools/build/cpp01_launch', '--', '-j12', '-l12'], 'cwd': '/home/pz10on/Work/ws02_tools/build/cpp01_launch', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'pz10on'), ('LC_TIME', 'zh_CN.UTF-8'), ('XDG_SESSION_TYPE', 'x11'), ('GIT_ASKPASS', '/usr/share/code/resources/app/extensions/git/dist/askpass.sh'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/pz10on'), ('CHROME_DESKTOP', 'code-url-handler.desktop'), ('TERM_PROGRAM_VERSION', '1.73.1'), ('DESKTOP_SESSION', 'ubuntu'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/code.desktop'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('VSCODE_GIT_ASKPASS_MAIN', '/usr/share/code/resources/app/extensions/git/dist/askpass-main.js'), ('LC_MONETARY', 'zh_CN.UTF-8'), ('VSCODE_GIT_ASKPASS_NODE', '/usr/share/code/code'), ('MANAGERPID', '1727'), ('DBUS_STARTER_BUS_TYPE', 'session'), ('SYSTEMD_EXEC_PID', '2193'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus,guid=861efa825ff62dad0101a02565124f85'), ('COLORTERM', 'truecolor'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '5293'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'fcitx'), ('LOGNAME', 'pz10on'), ('JOURNAL_STREAM', '8:34255'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'pz10on'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/pz10on-laptop:@/tmp/.ICE-unix/2193,unix/pz10on-laptop:/tmp/.ICE-unix/2193'), ('INVOCATION_ID', 'b82c74bcb8d04df6ba758aa069c65840'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'zh_CN.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/8939da48_1abb_4f65_b67b_e9e1c4893187'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('GDK_BACKEND', 'x11'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'Unity'), ('LC_TELEPHONE', 'zh_CN.UTF-8'), ('XMODIFIERS', '@im=fcitx'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/1000/vscode-git-1ddad89994.sock'), ('GNOME_TERMINAL_SERVICE', ':1.227'), ('TERM_PROGRAM', 'vscode'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/humble'), ('ORIGINAL_XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('SHELL', '/bin/bash'), ('LC_NAME', 'zh_CN.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('NO_AT_BRIDGE', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'zh_CN.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('LC_IDENTIFICATION', 'zh_CN.UTF-8'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', '--ms-enable-electron-run-as-node'), ('QT_IM_MODULE', 'fcitx'), ('PWD', '/home/pz10on/Work/ws02_tools/build/cpp01_launch'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('CLUTTER_IM_MODULE', 'fcitx'), ('DBUS_STARTER_ADDRESS', 'unix:path=/run/user/1000/bus,guid=861efa825ff62dad0101a02565124f85'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'zh_CN.UTF-8'), ('LC_PAPER', 'zh_CN.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/opt/ros/humble')]), 'shell': False}
[0.021818] (cpp02_rosbag2) JobProgress: {'identifier': 'cpp02_rosbag2', 'progress': 'cmake'}
[0.022385] (cpp02_rosbag2) JobProgress: {'identifier': 'cpp02_rosbag2', 'progress': 'build'}
[0.022625] (cpp02_rosbag2) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/pz10on/Work/ws02_tools/build/cpp02_rosbag2', '--', '-j12', '-l12'], 'cwd': '/home/pz10on/Work/ws02_tools/build/cpp02_rosbag2', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'pz10on'), ('LC_TIME', 'zh_CN.UTF-8'), ('XDG_SESSION_TYPE', 'x11'), ('GIT_ASKPASS', '/usr/share/code/resources/app/extensions/git/dist/askpass.sh'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/pz10on'), ('CHROME_DESKTOP', 'code-url-handler.desktop'), ('TERM_PROGRAM_VERSION', '1.73.1'), ('DESKTOP_SESSION', 'ubuntu'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/code.desktop'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('VSCODE_GIT_ASKPASS_MAIN', '/usr/share/code/resources/app/extensions/git/dist/askpass-main.js'), ('LC_MONETARY', 'zh_CN.UTF-8'), ('VSCODE_GIT_ASKPASS_NODE', '/usr/share/code/code'), ('MANAGERPID', '1727'), ('DBUS_STARTER_BUS_TYPE', 'session'), ('SYSTEMD_EXEC_PID', '2193'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus,guid=861efa825ff62dad0101a02565124f85'), ('COLORTERM', 'truecolor'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '5293'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'fcitx'), ('LOGNAME', 'pz10on'), ('JOURNAL_STREAM', '8:34255'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'pz10on'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/pz10on-laptop:@/tmp/.ICE-unix/2193,unix/pz10on-laptop:/tmp/.ICE-unix/2193'), ('INVOCATION_ID', 'b82c74bcb8d04df6ba758aa069c65840'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'zh_CN.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/8939da48_1abb_4f65_b67b_e9e1c4893187'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('GDK_BACKEND', 'x11'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'Unity'), ('LC_TELEPHONE', 'zh_CN.UTF-8'), ('XMODIFIERS', '@im=fcitx'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/1000/vscode-git-1ddad89994.sock'), ('GNOME_TERMINAL_SERVICE', ':1.227'), ('TERM_PROGRAM', 'vscode'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/humble'), ('ORIGINAL_XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('SHELL', '/bin/bash'), ('LC_NAME', 'zh_CN.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('NO_AT_BRIDGE', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'zh_CN.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('LC_IDENTIFICATION', 'zh_CN.UTF-8'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', '--ms-enable-electron-run-as-node'), ('QT_IM_MODULE', 'fcitx'), ('PWD', '/home/pz10on/Work/ws02_tools/build/cpp02_rosbag2'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('CLUTTER_IM_MODULE', 'fcitx'), ('DBUS_STARTER_ADDRESS', 'unix:path=/run/user/1000/bus,guid=861efa825ff62dad0101a02565124f85'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'zh_CN.UTF-8'), ('LC_PAPER', 'zh_CN.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/opt/ros/humble')]), 'shell': False}
[0.025585] (kruisee_lidar) JobProgress: {'identifier': 'kruisee_lidar', 'progress': 'cmake'}
[0.025889] (kruisee_lidar) Command: {'cmd': ['/usr/bin/cmake', '/home/pz10on/Work/ws02_tools/src/kruisee_lidar', '-DCMAKE_INSTALL_PREFIX=/home/pz10on/Work/ws02_tools/install/kruisee_lidar'], 'cwd': '/home/pz10on/Work/ws02_tools/build/kruisee_lidar', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'pz10on'), ('LC_TIME', 'zh_CN.UTF-8'), ('XDG_SESSION_TYPE', 'x11'), ('GIT_ASKPASS', '/usr/share/code/resources/app/extensions/git/dist/askpass.sh'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/pz10on'), ('CHROME_DESKTOP', 'code-url-handler.desktop'), ('TERM_PROGRAM_VERSION', '1.73.1'), ('DESKTOP_SESSION', 'ubuntu'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/code.desktop'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('VSCODE_GIT_ASKPASS_MAIN', '/usr/share/code/resources/app/extensions/git/dist/askpass-main.js'), ('LC_MONETARY', 'zh_CN.UTF-8'), ('VSCODE_GIT_ASKPASS_NODE', '/usr/share/code/code'), ('MANAGERPID', '1727'), ('DBUS_STARTER_BUS_TYPE', 'session'), ('SYSTEMD_EXEC_PID', '2193'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus,guid=861efa825ff62dad0101a02565124f85'), ('COLORTERM', 'truecolor'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '5293'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'fcitx'), ('LOGNAME', 'pz10on'), ('JOURNAL_STREAM', '8:34255'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'pz10on'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/pz10on-laptop:@/tmp/.ICE-unix/2193,unix/pz10on-laptop:/tmp/.ICE-unix/2193'), ('INVOCATION_ID', 'b82c74bcb8d04df6ba758aa069c65840'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'zh_CN.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/8939da48_1abb_4f65_b67b_e9e1c4893187'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('GDK_BACKEND', 'x11'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'Unity'), ('LC_TELEPHONE', 'zh_CN.UTF-8'), ('XMODIFIERS', '@im=fcitx'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/1000/vscode-git-1ddad89994.sock'), ('GNOME_TERMINAL_SERVICE', ':1.227'), ('TERM_PROGRAM', 'vscode'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/humble'), ('ORIGINAL_XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('SHELL', '/bin/bash'), ('LC_NAME', 'zh_CN.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('NO_AT_BRIDGE', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'zh_CN.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('LC_IDENTIFICATION', 'zh_CN.UTF-8'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', '--ms-enable-electron-run-as-node'), ('QT_IM_MODULE', 'fcitx'), ('PWD', '/home/pz10on/Work/ws02_tools/build/kruisee_lidar'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('CLUTTER_IM_MODULE', 'fcitx'), ('DBUS_STARTER_ADDRESS', 'unix:path=/run/user/1000/bus,guid=861efa825ff62dad0101a02565124f85'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'zh_CN.UTF-8'), ('LC_PAPER', 'zh_CN.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/opt/ros/humble')]), 'shell': False}
[0.038734] (cpp01_launch) StdoutLine: {'line': b'-- Found ament_cmake: 1.3.5 (/opt/ros/humble/share/ament_cmake/cmake)\n'}
[0.053953] (cpp02_rosbag2) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target demo02_read.cpp\x1b[0m\n'}
[0.054128] (cpp02_rosbag2) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target demo01_writer.cpp\x1b[0m\n'}
[0.067066] (cpp02_rosbag2) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/demo01_writer.cpp.dir/src/demo01_writer.cpp.o\x1b[0m\n'}
[0.067254] (cpp02_rosbag2) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/demo02_read.cpp.dir/src/demo02_read.cpp.o\x1b[0m\n'}
[0.091022] (kruisee_lidar) StdoutLine: {'line': b'-- The C compiler identification is GNU 11.4.0\n'}
[0.099788] (-) TimerEvent: {}
[0.138313] (cpp01_launch) StdoutLine: {'line': b'-- Found rclcpp: 16.0.5 (/opt/ros/humble/share/rclcpp/cmake)\n'}
[0.142002] (kruisee_lidar) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 11.4.0\n'}
[0.147265] (kruisee_lidar) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.157131] (cpp01_launch) StdoutLine: {'line': b'-- Found rosidl_generator_c: 3.1.5 (/opt/ros/humble/share/rosidl_generator_c/cmake)\n'}
[0.158678] (cpp01_launch) StdoutLine: {'line': b'-- Found rosidl_adapter: 3.1.5 (/opt/ros/humble/share/rosidl_adapter/cmake)\n'}
[0.162685] (cpp01_launch) StdoutLine: {'line': b'-- Found rosidl_generator_cpp: 3.1.5 (/opt/ros/humble/share/rosidl_generator_cpp/cmake)\n'}
[0.169950] (cpp01_launch) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c\n'}
[0.180163] (cpp01_launch) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp\n'}
[0.193248] (kruisee_lidar) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.197995] (kruisee_lidar) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc - skipped\n'}
[0.198302] (kruisee_lidar) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.198697] (kruisee_lidar) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.199857] (-) TimerEvent: {}
[0.200650] (kruisee_lidar) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[0.220080] (cpp01_launch) StdoutLine: {'line': b'-- Found rmw_implementation_cmake: 6.1.1 (/opt/ros/humble/share/rmw_implementation_cmake/cmake)\n'}
[0.220840] (cpp01_launch) StdoutLine: {'line': b'-- Found rmw_fastrtps_cpp: 6.2.3 (/opt/ros/humble/share/rmw_fastrtps_cpp/cmake)\n'}
[0.254780] (kruisee_lidar) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[0.259638] (kruisee_lidar) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ - skipped\n'}
[0.259789] (kruisee_lidar) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[0.260073] (kruisee_lidar) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[0.262297] (kruisee_lidar) StdoutLine: {'line': b'-- Found ament_cmake: 1.3.5 (/opt/ros/humble/share/ament_cmake/cmake)\n'}
[0.295887] (cpp01_launch) StdoutLine: {'line': b"-- Using RMW implementation 'rmw_fastrtps_cpp' as default\n"}
[0.300014] (-) TimerEvent: {}
[0.379169] (kruisee_lidar) StdoutLine: {'line': b'-- Found Python3: /usr/bin/python3.10 (found version "3.10.12") found components: Interpreter \n'}
[0.400119] (-) TimerEvent: {}
[0.405102] (cpp01_launch) StdoutLine: {'line': b'-- Found ament_lint_auto: 0.12.7 (/opt/ros/humble/share/ament_lint_auto/cmake)\n'}
[0.438652] (kruisee_lidar) StdoutLine: {'line': b'-- Found rclcpp: 16.0.5 (/opt/ros/humble/share/rclcpp/cmake)\n'}
[0.455676] (cpp01_launch) StdoutLine: {'line': b"-- Added test 'flake8' to check Python code syntax and style conventions\n"}
[0.455844] (cpp01_launch) StdoutLine: {'line': b"-- Added test 'lint_cmake' to check CMake code style\n"}
[0.456071] (cpp01_launch) StdoutLine: {'line': b"-- Added test 'pep257' to check Python code against some of the docstring style conventions in PEP 257\n"}
[0.456731] (cpp01_launch) StdoutLine: {'line': b"-- Added test 'xmllint' to check XML markup files\n"}
[0.457222] (cpp01_launch) StdoutLine: {'line': b'-- Configuring done\n'}
[0.460380] (cpp01_launch) StdoutLine: {'line': b'-- Generating done\n'}
[0.461335] (cpp01_launch) StdoutLine: {'line': b'-- Build files have been written to: /home/pz10on/Work/ws02_tools/build/cpp01_launch\n'}
[0.464836] (kruisee_lidar) StdoutLine: {'line': b'-- Found rosidl_generator_c: 3.1.5 (/opt/ros/humble/share/rosidl_generator_c/cmake)\n'}
[0.467773] (kruisee_lidar) StdoutLine: {'line': b'-- Found rosidl_adapter: 3.1.5 (/opt/ros/humble/share/rosidl_adapter/cmake)\n'}
[0.473080] (kruisee_lidar) StdoutLine: {'line': b'-- Found rosidl_generator_cpp: 3.1.5 (/opt/ros/humble/share/rosidl_generator_cpp/cmake)\n'}
[0.480255] (cpp01_launch) CommandEnded: {'returncode': 0}
[0.482495] (kruisee_lidar) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c\n'}
[0.494397] (cpp01_launch) JobProgress: {'identifier': 'cpp01_launch', 'progress': 'install'}
[0.495414] (kruisee_lidar) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp\n'}
[0.500200] (-) TimerEvent: {}
[0.500902] (cpp01_launch) Command: {'cmd': ['/usr/bin/cmake', '--install', '/home/pz10on/Work/ws02_tools/build/cpp01_launch'], 'cwd': '/home/pz10on/Work/ws02_tools/build/cpp01_launch', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'pz10on'), ('LC_TIME', 'zh_CN.UTF-8'), ('XDG_SESSION_TYPE', 'x11'), ('GIT_ASKPASS', '/usr/share/code/resources/app/extensions/git/dist/askpass.sh'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/pz10on'), ('CHROME_DESKTOP', 'code-url-handler.desktop'), ('TERM_PROGRAM_VERSION', '1.73.1'), ('DESKTOP_SESSION', 'ubuntu'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/code.desktop'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('VSCODE_GIT_ASKPASS_MAIN', '/usr/share/code/resources/app/extensions/git/dist/askpass-main.js'), ('LC_MONETARY', 'zh_CN.UTF-8'), ('VSCODE_GIT_ASKPASS_NODE', '/usr/share/code/code'), ('MANAGERPID', '1727'), ('DBUS_STARTER_BUS_TYPE', 'session'), ('SYSTEMD_EXEC_PID', '2193'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus,guid=861efa825ff62dad0101a02565124f85'), ('COLORTERM', 'truecolor'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '5293'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'fcitx'), ('LOGNAME', 'pz10on'), ('JOURNAL_STREAM', '8:34255'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'pz10on'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/pz10on-laptop:@/tmp/.ICE-unix/2193,unix/pz10on-laptop:/tmp/.ICE-unix/2193'), ('INVOCATION_ID', 'b82c74bcb8d04df6ba758aa069c65840'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'zh_CN.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/8939da48_1abb_4f65_b67b_e9e1c4893187'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('GDK_BACKEND', 'x11'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'Unity'), ('LC_TELEPHONE', 'zh_CN.UTF-8'), ('XMODIFIERS', '@im=fcitx'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/1000/vscode-git-1ddad89994.sock'), ('GNOME_TERMINAL_SERVICE', ':1.227'), ('TERM_PROGRAM', 'vscode'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/humble'), ('ORIGINAL_XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('SHELL', '/bin/bash'), ('LC_NAME', 'zh_CN.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('NO_AT_BRIDGE', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'zh_CN.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('LC_IDENTIFICATION', 'zh_CN.UTF-8'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', '--ms-enable-electron-run-as-node'), ('QT_IM_MODULE', 'fcitx'), ('PWD', '/home/pz10on/Work/ws02_tools/build/cpp01_launch'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('CLUTTER_IM_MODULE', 'fcitx'), ('DBUS_STARTER_ADDRESS', 'unix:path=/run/user/1000/bus,guid=861efa825ff62dad0101a02565124f85'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'zh_CN.UTF-8'), ('LC_PAPER', 'zh_CN.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/opt/ros/humble')]), 'shell': False}
[0.506612] (cpp01_launch) StdoutLine: {'line': b'-- Install configuration: ""\n'}
[0.506738] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/launch\n'}
[0.506783] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/launch/py02_node_launch.py\n'}
[0.506833] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/launch/py06_group_launch.py\n'}
[0.506903] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/launch/py05_include_launch.py\n'}
[0.506968] (cpp01_launch) StdoutLine: {'line': b'-- Installing: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/launch/py07_event_launch.py\n'}
[0.507006] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/launch/py03_cmd_launch.py\n'}
[0.507051] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/launch/config\n'}
[0.507122] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/launch/config/haha.yaml\n'}
[0.507160] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/launch/py01_exer01_launch.py\n'}
[0.507205] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/launch/py04_param_launch.py\n'}
[0.507246] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/config\n'}
[0.507287] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/config/haha.yaml\n'}
[0.507355] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/ament_index/resource_index/package_run_dependencies/cpp01_launch\n'}
[0.507396] (cpp01_launch) StdoutLine: {'line': b'-- Installing: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/ament_index/resource_index/parent_prefix_path/cpp01_launch\n'}
[0.507472] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/environment/ament_prefix_path.sh\n'}
[0.507523] (cpp01_launch) StdoutLine: {'line': b'-- Installing: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/environment/ament_prefix_path.dsv\n'}
[0.507583] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/environment/path.sh\n'}
[0.507641] (cpp01_launch) StdoutLine: {'line': b'-- Installing: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/environment/path.dsv\n'}
[0.507684] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/local_setup.bash\n'}
[0.507725] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/local_setup.sh\n'}
[0.507763] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/local_setup.zsh\n'}
[0.507801] (cpp01_launch) StdoutLine: {'line': b'-- Installing: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/local_setup.dsv\n'}
[0.507840] (cpp01_launch) StdoutLine: {'line': b'-- Installing: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/package.dsv\n'}
[0.507879] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/ament_index/resource_index/packages/cpp01_launch\n'}
[0.507918] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/cmake/cpp01_launchConfig.cmake\n'}
[0.507956] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/cmake/cpp01_launchConfig-version.cmake\n'}
[0.508002] (cpp01_launch) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp01_launch/share/cpp01_launch/package.xml\n'}
[0.508966] (cpp01_launch) CommandEnded: {'returncode': 0}
[0.541010] (kruisee_lidar) StdoutLine: {'line': b'-- Found rmw_implementation_cmake: 6.1.1 (/opt/ros/humble/share/rmw_implementation_cmake/cmake)\n'}
[0.543230] (kruisee_lidar) StdoutLine: {'line': b'-- Found rmw_fastrtps_cpp: 6.2.3 (/opt/ros/humble/share/rmw_fastrtps_cpp/cmake)\n'}
[0.544754] (cpp01_launch) JobEnded: {'identifier': 'cpp01_launch', 'rc': 0}
[0.600319] (-) TimerEvent: {}
[0.606011] (kruisee_lidar) StdoutLine: {'line': b'-- Found OpenSSL: /usr/lib/x86_64-linux-gnu/libcrypto.so (found version "3.0.2")  \n'}
[0.626374] (kruisee_lidar) StdoutLine: {'line': b'-- Found FastRTPS: /opt/ros/humble/include  \n'}
[0.657204] (kruisee_lidar) StdoutLine: {'line': b"-- Using RMW implementation 'rmw_fastrtps_cpp' as default\n"}
[0.662947] (kruisee_lidar) StdoutLine: {'line': b'-- Looking for pthread.h\n'}
[0.700439] (-) TimerEvent: {}
[0.712172] (kruisee_lidar) StdoutLine: {'line': b'-- Looking for pthread.h - found\n'}
[0.712606] (kruisee_lidar) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\n'}
[0.765047] (kruisee_lidar) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\n'}
[0.766259] (kruisee_lidar) StdoutLine: {'line': b'-- Found Threads: TRUE  \n'}
[0.800543] (-) TimerEvent: {}
[0.900812] (-) TimerEvent: {}
[0.911270] (kruisee_lidar) StdoutLine: {'line': b'-- Found sensor_msgs: 4.2.3 (/opt/ros/humble/share/sensor_msgs/cmake)\n'}
[1.000923] (-) TimerEvent: {}
[1.052494] (kruisee_lidar) StdoutLine: {'line': b'-- Configuring done\n'}
[1.063798] (kruisee_lidar) StdoutLine: {'line': b'-- Generating done\n'}
[1.064730] (kruisee_lidar) StdoutLine: {'line': b'-- Build files have been written to: /home/pz10on/Work/ws02_tools/build/kruisee_lidar\n'}
[1.072057] (kruisee_lidar) CommandEnded: {'returncode': 0}
[1.072808] (kruisee_lidar) JobProgress: {'identifier': 'kruisee_lidar', 'progress': 'build'}
[1.072974] (kruisee_lidar) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/pz10on/Work/ws02_tools/build/kruisee_lidar', '--', '-j12', '-l12'], 'cwd': '/home/pz10on/Work/ws02_tools/build/kruisee_lidar', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'pz10on'), ('LC_TIME', 'zh_CN.UTF-8'), ('XDG_SESSION_TYPE', 'x11'), ('GIT_ASKPASS', '/usr/share/code/resources/app/extensions/git/dist/askpass.sh'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/pz10on'), ('CHROME_DESKTOP', 'code-url-handler.desktop'), ('TERM_PROGRAM_VERSION', '1.73.1'), ('DESKTOP_SESSION', 'ubuntu'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/code.desktop'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('VSCODE_GIT_ASKPASS_MAIN', '/usr/share/code/resources/app/extensions/git/dist/askpass-main.js'), ('LC_MONETARY', 'zh_CN.UTF-8'), ('VSCODE_GIT_ASKPASS_NODE', '/usr/share/code/code'), ('MANAGERPID', '1727'), ('DBUS_STARTER_BUS_TYPE', 'session'), ('SYSTEMD_EXEC_PID', '2193'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus,guid=861efa825ff62dad0101a02565124f85'), ('COLORTERM', 'truecolor'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '5293'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'fcitx'), ('LOGNAME', 'pz10on'), ('JOURNAL_STREAM', '8:34255'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'pz10on'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/pz10on-laptop:@/tmp/.ICE-unix/2193,unix/pz10on-laptop:/tmp/.ICE-unix/2193'), ('INVOCATION_ID', 'b82c74bcb8d04df6ba758aa069c65840'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'zh_CN.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/8939da48_1abb_4f65_b67b_e9e1c4893187'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('GDK_BACKEND', 'x11'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'Unity'), ('LC_TELEPHONE', 'zh_CN.UTF-8'), ('XMODIFIERS', '@im=fcitx'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/1000/vscode-git-1ddad89994.sock'), ('GNOME_TERMINAL_SERVICE', ':1.227'), ('TERM_PROGRAM', 'vscode'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/humble'), ('ORIGINAL_XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('SHELL', '/bin/bash'), ('LC_NAME', 'zh_CN.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('NO_AT_BRIDGE', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'zh_CN.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('LC_IDENTIFICATION', 'zh_CN.UTF-8'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', '--ms-enable-electron-run-as-node'), ('QT_IM_MODULE', 'fcitx'), ('PWD', '/home/pz10on/Work/ws02_tools/build/kruisee_lidar'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('CLUTTER_IM_MODULE', 'fcitx'), ('DBUS_STARTER_ADDRESS', 'unix:path=/run/user/1000/bus,guid=861efa825ff62dad0101a02565124f85'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'zh_CN.UTF-8'), ('LC_PAPER', 'zh_CN.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/opt/ros/humble')]), 'shell': False}
[1.101052] (-) TimerEvent: {}
[1.111202] (kruisee_lidar) StdoutLine: {'line': b'[  5%] \x1b[32mBuilding CXX object sdk_core/CMakeFiles/sdk_core.dir/common/loader.cc.o\x1b[0m\n'}
[1.111525] (kruisee_lidar) StdoutLine: {'line': b'[  7%] \x1b[32mBuilding CXX object sdk_core/CMakeFiles/sdk_core.dir/drivers/ethernet_win.cc.o\x1b[0m\n'}
[1.111689] (kruisee_lidar) StdoutLine: {'line': b'[  7%] \x1b[32mBuilding CXX object sdk_core/CMakeFiles/sdk_core.dir/common/configurator.cc.o\x1b[0m\n'}
[1.111792] (kruisee_lidar) StdoutLine: {'line': b'[  9%] \x1b[32mBuilding CXX object sdk_core/CMakeFiles/sdk_core.dir/drivers/uart_win.cc.o\x1b[0m\n'}
[1.111890] (kruisee_lidar) StdoutLine: {'line': b'[  9%] \x1b[32mBuilding CXX object sdk_core/CMakeFiles/sdk_core.dir/drivers/uart_unix.cc.o\x1b[0m\n'}
[1.111990] (kruisee_lidar) StdoutLine: {'line': b'[ 10%] \x1b[32mBuilding CXX object sdk_core/CMakeFiles/sdk_core.dir/drivers/protocol.cc.o\x1b[0m\n'}
[1.112098] (kruisee_lidar) StdoutLine: {'line': b'[ 12%] \x1b[32mBuilding CXX object sdk_core/CMakeFiles/sdk_core.dir/drivers/lidar.cc.o\x1b[0m\n'}
[1.114328] (kruisee_lidar) StdoutLine: {'line': b'[ 16%] \x1b[32mBuilding CXX object sdk_core/CMakeFiles/sdk_core.dir/drivers/ethernet_unix.cc.o\x1b[0m\n'}
[1.114669] (kruisee_lidar) StdoutLine: {'line': b'[ 16%] \x1b[32mBuilding CXX object sdk_core/CMakeFiles/sdk_core.dir/filters/search.cc.o\x1b[0m\n'}
[1.115732] (kruisee_lidar) StdoutLine: {'line': b'[ 18%] \x1b[32mBuilding CXX object sdk_core/CMakeFiles/sdk_core.dir/common/scripts.cc.o\x1b[0m\n'}
[1.119669] (kruisee_lidar) StdoutLine: {'line': b'[ 20%] \x1b[32mBuilding CXX object sdk_core/CMakeFiles/sdk_core.dir/filters/outlierfilter.cc.o\x1b[0m\n'}
[1.119984] (kruisee_lidar) StdoutLine: {'line': b'[ 21%] \x1b[32mBuilding CXX object sdk_core/CMakeFiles/sdk_core.dir/filters/smoother.cc.o\x1b[0m\n'}
[1.137250] (kruisee_lidar) StdoutLine: {'line': b'[ 23%] \x1b[32mBuilding CXX object sdk_core/CMakeFiles/sdk_core.dir/filters/trailingfilter.cc.o\x1b[0m\n'}
[1.173282] (kruisee_lidar) StdoutLine: {'line': b'[ 25%] \x1b[32mBuilding CXX object sdk_core/CMakeFiles/sdk_core.dir/sdkcore.cc.o\x1b[0m\n'}
[1.197662] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/all_indices.h:35\x1b[m\x1b[K,\n'}
[1.198291] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:45\x1b[m\x1b[K,\n'}
[1.198485] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.h:11\x1b[m\x1b[K,\n'}
[1.198626] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.cc:9\x1b[m\x1b[K:\n'}
[1.198750] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:327:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.198872] (kruisee_lidar) StderrLine: {'line': b'  327 | #pragma omp parallel num_threads(params.cores)\n'}
[1.198998] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.199110] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:330:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.199225] (kruisee_lidar) StderrLine: {'line': b'  330 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.199335] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.199446] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:342:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.199560] (kruisee_lidar) StderrLine: {'line': b'  342 | #pragma omp parallel num_threads(params.cores)\n'}
[1.199670] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.199776] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:345:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.199895] (kruisee_lidar) StderrLine: {'line': b'  345 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.200010] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.200152] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:415:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.200343] (kruisee_lidar) StderrLine: {'line': b'  415 | #pragma omp parallel num_threads(params.cores)\n'}
[1.200521] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.200673] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:418:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.200837] (kruisee_lidar) StderrLine: {'line': b'  418 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.201004] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.201154] (-) TimerEvent: {}
[1.201340] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:434:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.201503] (kruisee_lidar) StderrLine: {'line': b'  434 | #pragma omp parallel num_threads(params.cores)\n'}
[1.201647] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.201789] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:437:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.201907] (kruisee_lidar) StderrLine: {'line': b'  437 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.202004] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.202106] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:505:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.202230] (kruisee_lidar) StderrLine: {'line': b'  505 | #pragma omp parallel num_threads(params.cores)\n'}
[1.202345] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.202462] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:508:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.202603] (kruisee_lidar) StderrLine: {'line': b'  508 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.202727] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.202849] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:520:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.202967] (kruisee_lidar) StderrLine: {'line': b'  520 | #pragma omp parallel num_threads(params.cores)\n'}
[1.203085] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.203207] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:523:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.203336] (kruisee_lidar) StderrLine: {'line': b'  523 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.203460] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.203580] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:541:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.203713] (kruisee_lidar) StderrLine: {'line': b'  541 | #pragma omp parallel num_threads(params.cores)\n'}
[1.203835] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.203953] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:544:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.204079] (kruisee_lidar) StderrLine: {'line': b'  544 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.204202] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.204324] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:611:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.204440] (kruisee_lidar) StderrLine: {'line': b'  611 | #pragma omp parallel num_threads(params.cores)\n'}
[1.204553] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.204667] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:614:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.204785] (kruisee_lidar) StderrLine: {'line': b'  614 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.204899] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.205022] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:628:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.205149] (kruisee_lidar) StderrLine: {'line': b'  628 | #pragma omp parallel num_threads(params.cores)\n'}
[1.205269] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.205394] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:631:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.205531] (kruisee_lidar) StderrLine: {'line': b'  631 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.205657] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.205780] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:648:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.205912] (kruisee_lidar) StderrLine: {'line': b'  648 | #pragma omp parallel num_threads(params.cores)\n'}
[1.206048] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.206181] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:651:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.206330] (kruisee_lidar) StderrLine: {'line': b'  651 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.206464] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.206603] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/all_indices.h:35\x1b[m\x1b[K,\n'}
[1.206745] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:45\x1b[m\x1b[K,\n'}
[1.206882] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.h:11\x1b[m\x1b[K,\n'}
[1.207015] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/outlierfilter.cc:11\x1b[m\x1b[K:\n'}
[1.207130] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:327:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.207256] (kruisee_lidar) StderrLine: {'line': b'  327 | #pragma omp parallel num_threads(params.cores)\n'}
[1.207368] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.207481] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:330:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.207603] (kruisee_lidar) StderrLine: {'line': b'  330 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.207716] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.207828] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:342:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.207945] (kruisee_lidar) StderrLine: {'line': b'  342 | #pragma omp parallel num_threads(params.cores)\n'}
[1.208061] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.208175] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:345:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.208294] (kruisee_lidar) StderrLine: {'line': b'  345 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.208409] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.208517] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:415:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.208632] (kruisee_lidar) StderrLine: {'line': b'  415 | #pragma omp parallel num_threads(params.cores)\n'}
[1.208748] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.208862] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:418:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.208993] (kruisee_lidar) StderrLine: {'line': b'  418 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.209113] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.209229] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:434:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.209348] (kruisee_lidar) StderrLine: {'line': b'  434 | #pragma omp parallel num_threads(params.cores)\n'}
[1.209465] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.209581] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:437:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.209702] (kruisee_lidar) StderrLine: {'line': b'  437 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.209819] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.209942] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:505:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.210068] (kruisee_lidar) StderrLine: {'line': b'  505 | #pragma omp parallel num_threads(params.cores)\n'}
[1.210185] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.210344] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:508:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.210503] (kruisee_lidar) StderrLine: {'line': b'  508 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.210655] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.210812] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:520:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.210969] (kruisee_lidar) StderrLine: {'line': b'  520 | #pragma omp parallel num_threads(params.cores)\n'}
[1.211093] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.211221] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:523:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.211354] (kruisee_lidar) StderrLine: {'line': b'  523 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.211488] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.211616] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:541:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.211760] (kruisee_lidar) StderrLine: {'line': b'  541 | #pragma omp parallel num_threads(params.cores)\n'}
[1.211888] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.212010] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:544:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.212133] (kruisee_lidar) StderrLine: {'line': b'  544 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.212247] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.212367] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:611:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.212490] (kruisee_lidar) StderrLine: {'line': b'  611 | #pragma omp parallel num_threads(params.cores)\n'}
[1.212606] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.212720] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:614:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.212847] (kruisee_lidar) StderrLine: {'line': b'  614 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.212968] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.213070] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:628:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.213173] (kruisee_lidar) StderrLine: {'line': b'  628 | #pragma omp parallel num_threads(params.cores)\n'}
[1.213288] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.213403] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:631:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.213521] (kruisee_lidar) StderrLine: {'line': b'  631 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.213637] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.213753] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:648:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.213875] (kruisee_lidar) StderrLine: {'line': b'  648 | #pragma omp parallel num_threads(params.cores)\n'}
[1.213984] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.214100] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:651:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.214221] (kruisee_lidar) StderrLine: {'line': b'  651 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.214342] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.249153] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/all_indices.h:42\x1b[m\x1b[K,\n'}
[1.249596] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:45\x1b[m\x1b[K,\n'}
[1.249760] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.h:11\x1b[m\x1b[K,\n'}
[1.249910] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/outlierfilter.cc:11\x1b[m\x1b[K:\n'}
[1.250034] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:238:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.250162] (kruisee_lidar) StderrLine: {'line': b'  238 | #pragma omp parallel num_threads(params.cores)\n'}
[1.250285] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.250408] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:241:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.250535] (kruisee_lidar) StderrLine: {'line': b'  241 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.250668] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.250797] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:253:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.250935] (kruisee_lidar) StderrLine: {'line': b'  253 | #pragma omp parallel num_threads(params.cores)\n'}
[1.251062] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.251190] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:256:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.251358] (kruisee_lidar) StderrLine: {'line': b'  256 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.251526] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.251679] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:291:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.251847] (kruisee_lidar) StderrLine: {'line': b'  291 | #pragma omp parallel num_threads(params.cores)\n'}
[1.252013] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.252156] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:294:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.252314] (kruisee_lidar) StderrLine: {'line': b'  294 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.252464] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.252578] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:310:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.252702] (kruisee_lidar) StderrLine: {'line': b'  310 | #pragma omp parallel num_threads(params.cores)\n'}
[1.252817] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.252950] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:313:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.253121] (kruisee_lidar) StderrLine: {'line': b'  313 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.253272] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.275372] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/all_indices.h:42\x1b[m\x1b[K,\n'}
[1.275743] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:45\x1b[m\x1b[K,\n'}
[1.275917] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.h:11\x1b[m\x1b[K,\n'}
[1.276075] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.cc:9\x1b[m\x1b[K:\n'}
[1.276231] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:238:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.276410] (kruisee_lidar) StderrLine: {'line': b'  238 | #pragma omp parallel num_threads(params.cores)\n'}
[1.276568] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.276715] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:241:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.276866] (kruisee_lidar) StderrLine: {'line': b'  241 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.277029] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.277177] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:253:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.277372] (kruisee_lidar) StderrLine: {'line': b'  253 | #pragma omp parallel num_threads(params.cores)\n'}
[1.277552] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.277741] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:256:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.277950] (kruisee_lidar) StderrLine: {'line': b'  256 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.278120] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.278269] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:291:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.278434] (kruisee_lidar) StderrLine: {'line': b'  291 | #pragma omp parallel num_threads(params.cores)\n'}
[1.278586] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.278733] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:294:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.278885] (kruisee_lidar) StderrLine: {'line': b'  294 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.279033] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.279182] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:310:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.279332] (kruisee_lidar) StderrLine: {'line': b'  310 | #pragma omp parallel num_threads(params.cores)\n'}
[1.279477] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.279620] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:313:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.279767] (kruisee_lidar) StderrLine: {'line': b'  313 | #pragma omp for schedule(static) reduction(+:count)\n'}
[1.279886] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[1.301282] (-) TimerEvent: {}
[1.401684] (-) TimerEvent: {}
[1.500109] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/smoother.cc:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvirtual bool Smoother::Run(std::vector<float>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.500578] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/smoother.cc:68:30:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<float>::size_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\x07-Wsign-compare\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.500668] (kruisee_lidar) StderrLine: {'line': b'   68 |     if (level_ < 0 || \x1b[01;35m\x1b[Klevel_ > data_->size() / 2\x1b[m\x1b[K) {\n'}
[1.500731] (kruisee_lidar) StderrLine: {'line': b'      |                       \x1b[01;35m\x1b[K~~~~~~~^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.500879] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/smoother.cc:61:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kout\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.500952] (kruisee_lidar) StderrLine: {'line': b'   61 | bool Smoother::Run(\x1b[01;35m\x1b[Kstd::vector<float> &out\x1b[m\x1b[K)\n'}
[1.501014] (kruisee_lidar) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[1.501819] (-) TimerEvent: {}
[1.503039] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/smoother.cc:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvirtual bool Smoother::Run(std::vector<float>&, std::vector<float>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.503246] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/smoother.cc:218:52:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Ksize_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\x07-Wsign-compare\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.503379] (kruisee_lidar) StderrLine: {'line': b'  218 |                         for (size_t n = s_index; \x1b[01;35m\x1b[Kn < mid\x1b[m\x1b[K; n++) {\n'}
[1.503450] (kruisee_lidar) StderrLine: {'line': b'      |                                                  \x1b[01;35m\x1b[K~~^~~~~\x1b[m\x1b[K\n'}
[1.503566] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/smoother.cc:229:48:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Ksize_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\x07-Wsign-compare\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.503695] (kruisee_lidar) StderrLine: {'line': b'  229 |                         for (size_t n = mid; \x1b[01;35m\x1b[Kn < e_index+1\x1b[m\x1b[K; n++) {\n'}
[1.503763] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K~~^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.503828] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/smoother.cc:114:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused variable \xe2\x80\x98\x1b[01m\x1b[Klast\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable\x07-Wunused-variable\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.503898] (kruisee_lidar) StderrLine: {'line': b'  114 |         int \x1b[01;35m\x1b[Klast\x1b[m\x1b[K = -1;\n'}
[1.503963] (kruisee_lidar) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.504029] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/smoother.cc:94:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kout\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.504097] (kruisee_lidar) StderrLine: {'line': b'   94 | bool Smoother::Run(\x1b[01;35m\x1b[Kstd::vector<float> &out\x1b[m\x1b[K, std::vector<float> &inten)\n'}
[1.504167] (kruisee_lidar) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[1.504232] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/lidar.cc:9\x1b[m\x1b[K:\n'}
[1.504299] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/include/drivers/lidar.h:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KLidar::Lidar()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.504366] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/include/drivers/lidar.h:52:34:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLidar::caller_\x1b[m\x1b[K\xe2\x80\x99 will be initialized after [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.504434] (kruisee_lidar) StderrLine: {'line': b'   52 |     std::function<void(LScan &)> \x1b[01;35m\x1b[Kcaller_\x1b[m\x1b[K;\n'}
[1.504501] (kruisee_lidar) StderrLine: {'line': b'      |                                  \x1b[01;35m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.504566] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/include/drivers/lidar.h:51:30:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<IWorker> Lidar::dev_\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.504633] (kruisee_lidar) StderrLine: {'line': b'   51 |     std::unique_ptr<IWorker> \x1b[01;35m\x1b[Kdev_\x1b[m\x1b[K;\n'}
[1.504705] (kruisee_lidar) StderrLine: {'line': b'      |                              \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.504767] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/lidar.cc:49:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  when initialized here [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.504834] (kruisee_lidar) StderrLine: {'line': b'   49 | \x1b[01;35m\x1b[KLidar\x1b[m\x1b[K::Lidar()\n'}
[1.504899] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.505619] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/lidar.cc:50:110:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[KScripts::LidarAttribute::sync_interval\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmissing-field-initializers\x07-Wmissing-field-initializers\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.505806] (kruisee_lidar) StderrLine: {'line': b'   50 |     : caller_(nullptr), dev_(nullptr), xfer_(0), started_(false), last_angle_(0xA0), last_stamp_(INT32_MIN), \x1b[01;35m\x1b[Kattr_{INT16_MAX, 0}\x1b[m\x1b[K\n'}
[1.505919] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                                              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.506003] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/lidar.cc:50:110:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[KScripts::LidarAttribute::sync_timeout\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmissing-field-initializers\x07-Wmissing-field-initializers\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.529605] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/lidar.cc:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint Lidar::ParseAndPackage(Packet*, uint8_t*, bool)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.529871] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/lidar.cc:188:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<float>::size_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\x07-Wsign-compare\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.529966] (kruisee_lidar) StderrLine: {'line': b'  188 |         for (int i = 0; \x1b[01;35m\x1b[Ki < this->ranges_.size()\x1b[m\x1b[K; i++) {\n'}
[1.530036] (kruisee_lidar) StderrLine: {'line': b'      |                         \x1b[01;35m\x1b[K~~^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.536542] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/lidar.cc:184:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kenergetic\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.536789] (kruisee_lidar) StderrLine: {'line': b'  184 | int Lidar::ParseAndPackage(Packet *packet, uint8_t* buffer_end_pos, \x1b[01;35m\x1b[Kbool energetic\x1b[m\x1b[K)\n'}
[1.536872] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;35m\x1b[K~~~~~^~~~~~~~~\x1b[m\x1b[K\n'}
[1.539362] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/common/scripts.cc:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool Scripts::IsIPv4(const string&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.539652] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/common/scripts.cc:21:16:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kstd::__cxx11::basic_string<char>::size_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\x07-Wsign-compare\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.539755] (kruisee_lidar) StderrLine: {'line': b'   21 |     while (\x1b[01;35m\x1b[Kend < ip.length()\x1b[m\x1b[K) {\n'}
[1.539842] (kruisee_lidar) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K~~~~^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.539984] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/common/scripts.cc:39:17:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kstd::__cxx11::basic_string<char>::size_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\x07-Wsign-compare\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.540069] (kruisee_lidar) StderrLine: {'line': b'   39 |         if (\x1b[01;35m\x1b[Kend == ip.length()\x1b[m\x1b[K)\n'}
[1.540136] (kruisee_lidar) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.541543] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/uart_unix.cc:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kuint64_t get_time()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.541799] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/uart_unix.cc:28:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Ktimeval::tv_usec\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmissing-field-initializers\x07-Wmissing-field-initializers\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.541901] (kruisee_lidar) StderrLine: {'line': b'   28 |     struct timeval tv = {0\x1b[01;35m\x1b[K}\x1b[m\x1b[K;\n'}
[1.541976] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.565241] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/uart_unix.cc:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvirtual bool Uart::Launch(Handler, bool, int, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.565510] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/uart_unix.cc:67:55:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Ksync_interval\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.565614] (kruisee_lidar) StderrLine: {'line': b'   67 | bool Uart::Launch(Handler handler, bool detached, \x1b[01;35m\x1b[Kint sync_interval\x1b[m\x1b[K, int sync_timeout)\n'}
[1.565690] (kruisee_lidar) StderrLine: {'line': b'      |                                                   \x1b[01;35m\x1b[K~~~~^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.565839] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/uart_unix.cc:67:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Ksync_timeout\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.565920] (kruisee_lidar) StderrLine: {'line': b'   67 | bool Uart::Launch(Handler handler, bool detached, int sync_interval, \x1b[01;35m\x1b[Kint sync_timeout\x1b[m\x1b[K)\n'}
[1.565991] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;35m\x1b[K~~~~^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.566066] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/uart_unix.cc:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvirtual bool Uart::Write(const string&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.566192] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/uart_unix.cc:109:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kstd::__cxx11::basic_string<char>::size_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\x07-Wsign-compare\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.566269] (kruisee_lidar) StderrLine: {'line': b'  109 |     if (\x1b[01;35m\x1b[Kres != cmd.length()\x1b[m\x1b[K)\n'}
[1.566338] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;35m\x1b[K~~~~^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.566404] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/uart_unix.cc:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvirtual bool Uart::Write(unsigned char*, size_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.566473] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/uart_unix.cc:123:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Ksize_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\x07-Wsign-compare\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.566553] (kruisee_lidar) StderrLine: {'line': b'  123 |     if (\x1b[01;35m\x1b[Kres != len\x1b[m\x1b[K)\n'}
[1.566620] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;35m\x1b[K~~~~^~~~~~\x1b[m\x1b[K\n'}
[1.572361] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/params.h:33\x1b[m\x1b[K,\n'}
[1.572590] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:42\x1b[m\x1b[K,\n'}
[1.572668] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.h:11\x1b[m\x1b[K,\n'}
[1.572736] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/outlierfilter.cc:11\x1b[m\x1b[K:\n'}
[1.572799] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/any.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvirtual void flann::anyimpl::big_any_policy<T>::static_delete(void**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.572902] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/any.h:81:9:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kthis \xe2\x80\x98\x1b[01m\x1b[Kif\x1b[m\x1b[K\xe2\x80\x99 clause does not guard... [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmisleading-indentation\x07-Wmisleading-indentation\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.572988] (kruisee_lidar) StderrLine: {'line': b'   81 |         \x1b[01;35m\x1b[Kif\x1b[m\x1b[K (* x) delete (* reinterpret_cast<T**>(x)); *x = NULL;\n'}
[1.573076] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[1.573180] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/any.h:81:55:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K...this statement, but the latter is misleadingly indented as if it were guarded by the \xe2\x80\x98\x1b[01m\x1b[Kif\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.573317] (kruisee_lidar) StderrLine: {'line': b'   81 |         if (* x) delete (* reinterpret_cast<T**>(x)); \x1b[01;36m\x1b[K*\x1b[m\x1b[Kx = NULL;\n'}
[1.573445] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.573568] (kruisee_lidar) StdoutLine: {'line': b'[ 27%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/lapi.c.o\x1b[0m\n'}
[1.580975] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/ethernet_unix.cc:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kuint64_t get_time()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.581349] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/ethernet_unix.cc:33:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Ktimeval::tv_usec\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmissing-field-initializers\x07-Wmissing-field-initializers\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.581563] (kruisee_lidar) StderrLine: {'line': b'   33 |     struct timeval tv = {0\x1b[01;35m\x1b[K}\x1b[m\x1b[K;\n'}
[1.581699] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.599769] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/trailingfilter.cc:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool TrailingFilter::Run(const LScan&, std::vector<int>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.600148] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/trailingfilter.cc:50:32:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\x07-Wsign-compare\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.600312] (kruisee_lidar) StderrLine: {'line': b'   50 |     for (unsigned int i = 0; \x1b[01;35m\x1b[Ki < count\x1b[m\x1b[K; i++) {\n'}
[1.600432] (kruisee_lidar) StderrLine: {'line': b'      |                              \x1b[01;35m\x1b[K~~^~~~~~~\x1b[m\x1b[K\n'}
[1.600553] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/trailingfilter.cc:72:19:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\x07-Wsign-compare\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.600687] (kruisee_lidar) StderrLine: {'line': b'   72 |             if (\x1b[01;35m\x1b[Kj < i\x1b[m\x1b[K) {\n'}
[1.600817] (kruisee_lidar) StderrLine: {'line': b'      |                 \x1b[01;35m\x1b[K~~^~~\x1b[m\x1b[K\n'}
[1.600948] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/trailingfilter.cc:73:23:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\x07-Wsign-compare\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.601093] (kruisee_lidar) StderrLine: {'line': b'   73 |                 if (\x1b[01;35m\x1b[Kj == (i - 1)\x1b[m\x1b[K) {\n'}
[1.601220] (kruisee_lidar) StderrLine: {'line': b'      |                     \x1b[01;35m\x1b[K~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[1.601336] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/trailingfilter.cc:78:23:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\x07-Wsign-compare\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.601450] (kruisee_lidar) StderrLine: {'line': b'   78 |                 if (\x1b[01;35m\x1b[Kj == (i + 1)\x1b[m\x1b[K) {\n'}
[1.601568] (kruisee_lidar) StderrLine: {'line': b'      |                     \x1b[01;35m\x1b[K~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[1.601898] (-) TimerEvent: {}
[1.608441] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/ethernet_unix.cc:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid Ethernet::Handle(int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.608763] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/ethernet_unix.cc:344:54:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Ksize_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\x07-Wsign-compare\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.608976] (kruisee_lidar) StderrLine: {'line': b'  344 |                                 if(\x1b[01;35m\x1b[Kresponse.length() == udp_len\x1b[m\x1b[K)\n'}
[1.609138] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[1.609265] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/ethernet_unix.cc:378:53:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Ksize_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\x07-Wsign-compare\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.609390] (kruisee_lidar) StderrLine: {'line': b'  378 |                                 if(\x1b[01;35m\x1b[Krequest.length() == udp_len\x1b[m\x1b[K)\n'}
[1.609515] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[1.609639] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/ethernet_unix.cc:402:52:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Ksize_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\x07-Wsign-compare\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.609777] (kruisee_lidar) StderrLine: {'line': b'  402 |                                 if(\x1b[01;35m\x1b[Kresult.length() == udp_len\x1b[m\x1b[K)\n'}
[1.609898] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[1.610071] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/ethernet_unix.cc:427:54:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Ksize_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\x07-Wsign-compare\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.610193] (kruisee_lidar) StderrLine: {'line': b'  427 |                                 if(\x1b[01;35m\x1b[Kresponse.length() == udp_len\x1b[m\x1b[K)\n'}
[1.610302] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[1.612393] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/ethernet_unix.cc:498:36:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.612706] (kruisee_lidar) StderrLine: {'line': b'  498 |                 Write(iter->first, \x1b[01;35m\x1b[K"startlds$"\x1b[m\x1b[K, 9);\n'}
[1.612869] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;35m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.613008] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/ethernet_unix.cc:280:9:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused variable \xe2\x80\x98\x1b[01m\x1b[Ksync_flag\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable\x07-Wunused-variable\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.613133] (kruisee_lidar) StderrLine: {'line': b'  280 |     int \x1b[01;35m\x1b[Ksync_flag\x1b[m\x1b[K = -1;\n'}
[1.613253] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;35m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.627792] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/params.h:33\x1b[m\x1b[K,\n'}
[1.628139] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:42\x1b[m\x1b[K,\n'}
[1.628302] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.h:11\x1b[m\x1b[K,\n'}
[1.628456] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.cc:9\x1b[m\x1b[K:\n'}
[1.628589] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/any.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvirtual void flann::anyimpl::big_any_policy<T>::static_delete(void**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.628730] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/any.h:81:9:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kthis \xe2\x80\x98\x1b[01m\x1b[Kif\x1b[m\x1b[K\xe2\x80\x99 clause does not guard... [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmisleading-indentation\x07-Wmisleading-indentation\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.628862] (kruisee_lidar) StderrLine: {'line': b'   81 |         \x1b[01;35m\x1b[Kif\x1b[m\x1b[K (* x) delete (* reinterpret_cast<T**>(x)); *x = NULL;\n'}
[1.629002] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[1.629122] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/any.h:81:55:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K...this statement, but the latter is misleadingly indented as if it were guarded by the \xe2\x80\x98\x1b[01m\x1b[Kif\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.629220] (kruisee_lidar) StderrLine: {'line': b'   81 |         if (* x) delete (* reinterpret_cast<T**>(x)); \x1b[01;36m\x1b[K*\x1b[m\x1b[Kx = NULL;\n'}
[1.629442] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.702026] (-) TimerEvent: {}
[1.741772] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/trailingfilter.cc:123:22:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdandiao2\x1b[m\x1b[K\xe2\x80\x99 may be used uninitialized in this function [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmaybe-uninitialized\x07-Wmaybe-uninitialized\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.742061] (kruisee_lidar) StderrLine: {'line': b'  123 |         if (\x1b[01;35m\x1b[K(dandiao1*dandiao2)\x1b[m\x1b[K < 0) {\n'}
[1.742146] (kruisee_lidar) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[1.742353] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/trailingfilter.cc:123:22:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdandiao1\x1b[m\x1b[K\xe2\x80\x99 may be used uninitialized in this function [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmaybe-uninitialized\x07-Wmaybe-uninitialized\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.753298] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/kdtree_index.h:48\x1b[m\x1b[K,\n'}
[1.753527] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/all_indices.h:36\x1b[m\x1b[K,\n'}
[1.753614] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:45\x1b[m\x1b[K,\n'}
[1.753689] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.h:11\x1b[m\x1b[K,\n'}
[1.753761] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/outlierfilter.cc:11\x1b[m\x1b[K:\n'}
[1.753835] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/allocator.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid operator delete(void*, flann::PooledAllocator&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.753906] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/allocator.h:202:35:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kp\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.753990] (kruisee_lidar) StderrLine: {'line': b'  202 | inline void operator delete(\x1b[01;35m\x1b[Kvoid* p\x1b[m\x1b[K, flann::PooledAllocator& allocator)\n'}
[1.754067] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;35m\x1b[K~~~~~~^\x1b[m\x1b[K\n'}
[1.754133] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/allocator.h:202:62:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kallocator\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.754198] (kruisee_lidar) StderrLine: {'line': b'  202 | inline void operator delete(void* p, \x1b[01;35m\x1b[Kflann::PooledAllocator& allocator\x1b[m\x1b[K)\n'}
[1.754257] (kruisee_lidar) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~\x1b[m\x1b[K\n'}
[1.798892] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/kdtree_index.h:48\x1b[m\x1b[K,\n'}
[1.799119] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/all_indices.h:36\x1b[m\x1b[K,\n'}
[1.799213] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:45\x1b[m\x1b[K,\n'}
[1.799296] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.h:11\x1b[m\x1b[K,\n'}
[1.799363] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.cc:9\x1b[m\x1b[K:\n'}
[1.799436] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/allocator.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid operator delete(void*, flann::PooledAllocator&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.799502] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/allocator.h:202:35:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kp\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.799572] (kruisee_lidar) StderrLine: {'line': b'  202 | inline void operator delete(\x1b[01;35m\x1b[Kvoid* p\x1b[m\x1b[K, flann::PooledAllocator& allocator)\n'}
[1.799644] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;35m\x1b[K~~~~~~^\x1b[m\x1b[K\n'}
[1.799707] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/allocator.h:202:62:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kallocator\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.799775] (kruisee_lidar) StderrLine: {'line': b'  202 | inline void operator delete(void* p, \x1b[01;35m\x1b[Kflann::PooledAllocator& allocator\x1b[m\x1b[K)\n'}
[1.799838] (kruisee_lidar) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~\x1b[m\x1b[K\n'}
[1.802182] (-) TimerEvent: {}
[1.841682] (kruisee_lidar) StdoutLine: {'line': b'[ 29%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/lcode.c.o\x1b[0m\n'}
[1.872952] (kruisee_lidar) StdoutLine: {'line': b'[ 30%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/lctype.c.o\x1b[0m\n'}
[1.876885] (kruisee_lidar) StdoutLine: {'line': b'[ 32%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/ldebug.c.o\x1b[0m\n'}
[1.902304] (-) TimerEvent: {}
[1.952122] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.cc:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint Search::NearestKSearch(int, int, std::vector<int>&, std::vector<float>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.952516] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.cc:29:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<Point2D>::size_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\x07-Wsign-compare\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.952717] (kruisee_lidar) StderrLine: {'line': b'   29 |         if (\x1b[01;35m\x1b[Kk > cloud_->size()\x1b[m\x1b[K)\n'}
[1.952887] (kruisee_lidar) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K~~^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.996969] (kruisee_lidar) StdoutLine: {'line': b'[ 34%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/ldo.c.o\x1b[0m\n'}
[2.000995] (kruisee_lidar) StdoutLine: {'line': b'[ 36%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/ldump.c.o\x1b[0m\n'}
[2.002404] (-) TimerEvent: {}
[2.016909] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/string.h:535\x1b[m\x1b[K,\n'}
[2.017312] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/ethernet_unix.cc:15\x1b[m\x1b[K:\n'}
[2.017461] (kruisee_lidar) StderrLine: {'line': b'In function \xe2\x80\x98\x1b[01m\x1b[Kchar* strncpy(char*, const char*, size_t)\x1b[m\x1b[K\xe2\x80\x99,\n'}
[2.017585] (kruisee_lidar) StderrLine: {'line': b'    inlined from \xe2\x80\x98\x1b[01m\x1b[Kvoid Ethernet::Handle(int)\x1b[m\x1b[K\xe2\x80\x99 at \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/drivers/ethernet_unix.cc:313:24\x1b[m\x1b[K:\n'}
[2.017704] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/x86_64-linux-gnu/bits/string_fortified.h:95:34:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kchar* __builtin_strncpy(char*, const char*, long unsigned int)\x1b[m\x1b[K\xe2\x80\x99 specified bound 64 equals destination size [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wstringop-truncation\x07-Wstringop-truncation\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.017831] (kruisee_lidar) StderrLine: {'line': b'   95 |   return \x1b[01;35m\x1b[K__builtin___strncpy_chk (__dest, __src, __len,\x1b[m\x1b[K\n'}
[2.017959] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.018080] (kruisee_lidar) StderrLine: {'line': b'   96 | \x1b[01;35m\x1b[K                                  __glibc_objsize (__dest))\x1b[m\x1b[K;\n'}
[2.018185] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.081100] (kruisee_lidar) StdoutLine: {'line': b'[ 38%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/lfunc.c.o\x1b[0m\n'}
[2.102596] (-) TimerEvent: {}
[2.139202] (kruisee_lidar) StdoutLine: {'line': b'[ 40%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/lgc.c.o\x1b[0m\n'}
[2.163973] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/all_indices.h:35\x1b[m\x1b[K,\n'}
[2.164204] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:45\x1b[m\x1b[K,\n'}
[2.164285] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.h:11\x1b[m\x1b[K,\n'}
[2.164350] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/outlierfilter.cc:11\x1b[m\x1b[K:\n'}
[2.164413] (kruisee_lidar) StderrLine: {'line': b'/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid flann::NNIndex<Distance>::addPoints(const flann::Matrix<typename Distance::ElementType>&, float) [with Distance = OL2<float>; typename Distance::ElementType = float]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.164480] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:152:18:\x1b[m\x1b[K   required from here\n'}
[2.164542] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:152:55:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kpoints\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.164606] (kruisee_lidar) StderrLine: {'line': b'  152 |     virtual void addPoints(\x1b[01;35m\x1b[Kconst Matrix<ElementType>& points\x1b[m\x1b[K, float rebuild_threshold = 2)\n'}
[2.164687] (kruisee_lidar) StderrLine: {'line': b'      |                            \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\x1b[m\x1b[K\n'}
[2.164750] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:152:69:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krebuild_threshold\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.164821] (kruisee_lidar) StderrLine: {'line': b'  152 |     virtual void addPoints(const Matrix<ElementType>& points, \x1b[01;35m\x1b[Kfloat rebuild_threshold = 2\x1b[m\x1b[K)\n'}
[2.164889] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;35m\x1b[K~~~~~~^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.174664] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:39\x1b[m\x1b[K,\n'}
[2.174891] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/all_indices.h:35\x1b[m\x1b[K,\n'}
[2.174976] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:45\x1b[m\x1b[K,\n'}
[2.175044] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.h:11\x1b[m\x1b[K,\n'}
[2.175112] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/outlierfilter.cc:11\x1b[m\x1b[K:\n'}
[2.175178] (kruisee_lidar) StderrLine: {'line': b'/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/result_set.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid flann::KNNSimpleResultSet<DistanceType>::copy(size_t*, DistanceType*, size_t, bool) [with DistanceType = float; size_t = long unsigned int]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.175245] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:350:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kint flann::NNIndex<Distance>::knnSearch(const flann::Matrix<typename Distance::ElementType>&, flann::Matrix<long unsigned int>&, flann::Matrix<typename Distance::ResultType>&, size_t, const flann::SearchParams&) const [with Distance = OL2<float>; typename Distance::ElementType = float; typename Distance::ResultType = float; size_t = long unsigned int]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.175316] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:305:17:\x1b[m\x1b[K   required from here\n'}
[2.175380] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/result_set.h:180:79:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Ksorted\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.175450] (kruisee_lidar) StderrLine: {'line': b'  180 |     void copy(size_t* indices, DistanceType* dists, size_t num_elements, \x1b[01;35m\x1b[Kbool sorted = true\x1b[m\x1b[K)\n'}
[2.175514] (kruisee_lidar) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K~~~~~^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.176981] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:39\x1b[m\x1b[K,\n'}
[2.177356] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/all_indices.h:35\x1b[m\x1b[K,\n'}
[2.177532] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:45\x1b[m\x1b[K,\n'}
[2.177673] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.h:11\x1b[m\x1b[K,\n'}
[2.177822] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.cc:9\x1b[m\x1b[K:\n'}
[2.177978] (kruisee_lidar) StderrLine: {'line': b'/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/result_set.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid flann::KNNSimpleResultSet<DistanceType>::copy(size_t*, DistanceType*, size_t, bool) [with DistanceType = float; size_t = long unsigned int]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.178154] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:350:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kint flann::NNIndex<Distance>::knnSearch(const flann::Matrix<typename Distance::ElementType>&, flann::Matrix<long unsigned int>&, flann::Matrix<typename Distance::ResultType>&, size_t, const flann::SearchParams&) const [with Distance = OL2<float>; typename Distance::ElementType = float; typename Distance::ResultType = float; size_t = long unsigned int]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.178334] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:375:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kint flann::NNIndex<Distance>::knnSearch(const flann::Matrix<typename Distance::ElementType>&, flann::Matrix<int>&, flann::Matrix<typename Distance::ResultType>&, size_t, const flann::SearchParams&) const [with Distance = OL2<float>; typename Distance::ElementType = float; typename Distance::ResultType = float; size_t = long unsigned int]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.178498] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:260:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kint flann::Index<Distance>::knnSearch(const flann::Matrix<typename Distance::ElementType>&, flann::Matrix<int>&, flann::Matrix<typename Distance::ResultType>&, size_t, const flann::SearchParams&) const [with Distance = OL2<float>; typename Distance::ElementType = float; typename Distance::ResultType = float; size_t = long unsigned int]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.178643] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.cc:41:19:\x1b[m\x1b[K   required from here\n'}
[2.178787] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/result_set.h:180:79:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Ksorted\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.178939] (kruisee_lidar) StderrLine: {'line': b'  180 |     void copy(size_t* indices, DistanceType* dists, size_t num_elements, \x1b[01;35m\x1b[Kbool sorted = true\x1b[m\x1b[K)\n'}
[2.179090] (kruisee_lidar) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K~~~~~^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.202706] (-) TimerEvent: {}
[2.249746] (kruisee_lidar) StdoutLine: {'line': b'[ 41%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/llex.c.o\x1b[0m\n'}
[2.281299] (kruisee_lidar) StdoutLine: {'line': b'[ 43%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/lmem.c.o\x1b[0m\n'}
[2.297867] (kruisee_lidar) StderrLine: {'line': b'/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/result_set.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid flann::CountRadiusResultSet<DistanceType>::addPoint(DistanceType, size_t) [with DistanceType = float; size_t = long unsigned int]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.298111] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/result_set.h:683:10:\x1b[m\x1b[K   required from here\n'}
[2.298200] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/result_set.h:683:45:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kindex\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.298274] (kruisee_lidar) StderrLine: {'line': b'  683 |     void addPoint(DistanceType dist, \x1b[01;35m\x1b[Ksize_t index\x1b[m\x1b[K)\n'}
[2.298339] (kruisee_lidar) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[2.302827] (-) TimerEvent: {}
[2.323730] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/all_indices.h:43\x1b[m\x1b[K,\n'}
[2.324104] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:45\x1b[m\x1b[K,\n'}
[2.324235] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.h:11\x1b[m\x1b[K,\n'}
[2.324313] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.cc:9\x1b[m\x1b[K:\n'}
[2.324378] (kruisee_lidar) StderrLine: {'line': b'/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/autotuned_index.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid flann::AutotunedIndex<Distance>::findNeighbors(flann::ResultSet<typename Distance::ResultType>&, const ElementType*, const flann::SearchParams&) const [with Distance = OL2<float>; typename Distance::ResultType = float; flann::AutotunedIndex<Distance>::ElementType = float]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.324467] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/autotuned_index.h:294:10:\x1b[m\x1b[K   required from here\n'}
[2.324536] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/autotuned_index.h:294:49:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kresult\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.324612] (kruisee_lidar) StderrLine: {'line': b'  294 |     void findNeighbors(\x1b[01;35m\x1b[KResultSet<DistanceType>& result\x1b[m\x1b[K, const ElementType* vec, const SearchParams& searchParams) const\n'}
[2.324675] (kruisee_lidar) StderrLine: {'line': b'      |                        \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\x1b[m\x1b[K\n'}
[2.324741] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/autotuned_index.h:294:76:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kvec\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.324803] (kruisee_lidar) StderrLine: {'line': b'  294 |     void findNeighbors(ResultSet<DistanceType>& result, \x1b[01;35m\x1b[Kconst ElementType* vec\x1b[m\x1b[K, const SearchParams& searchParams) const\n'}
[2.324864] (kruisee_lidar) StderrLine: {'line': b'      |                                                         \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[2.324924] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/autotuned_index.h:294:101:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[KsearchParams\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.324994] (kruisee_lidar) StderrLine: {'line': b'  294 |     void findNeighbors(ResultSet<DistanceType>& result, const ElementType* vec, \x1b[01;35m\x1b[Kconst SearchParams& searchParams\x1b[m\x1b[K) const\n'}
[2.325050] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                 \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.335493] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/all_indices.h:37\x1b[m\x1b[K,\n'}
[2.335731] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:45\x1b[m\x1b[K,\n'}
[2.335814] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.h:11\x1b[m\x1b[K,\n'}
[2.335881] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.cc:9\x1b[m\x1b[K:\n'}
[2.335947] (kruisee_lidar) StderrLine: {'line': b'/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/kdtree_single_index.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid flann::KDTreeSingleIndex<Distance>::addPoints(const flann::Matrix<typename Distance::ElementType>&, float) [with Distance = OL2<float>; typename Distance::ElementType = float]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.336016] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/kdtree_single_index.h:143:10:\x1b[m\x1b[K   required from here\n'}
[2.336081] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/kdtree_single_index.h:143:61:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krebuild_threshold\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.336149] (kruisee_lidar) StderrLine: {'line': b'  143 |     void addPoints(const Matrix<ElementType>& points, \x1b[01;35m\x1b[Kfloat rebuild_threshold = 2\x1b[m\x1b[K)\n'}
[2.336214] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.336784] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/all_indices.h:40\x1b[m\x1b[K,\n'}
[2.336979] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:45\x1b[m\x1b[K,\n'}
[2.337049] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.h:11\x1b[m\x1b[K,\n'}
[2.337135] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.cc:9\x1b[m\x1b[K:\n'}
[2.337210] (kruisee_lidar) StderrLine: {'line': b'/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/linear_index.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid flann::LinearIndex<Distance>::addPoints(const flann::Matrix<typename Distance::ElementType>&, float) [with Distance = OL2<float>; typename Distance::ElementType = float]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.337292] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/linear_index.h:88:10:\x1b[m\x1b[K   required from here\n'}
[2.337385] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/linear_index.h:88:61:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krebuild_threshold\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.337471] (kruisee_lidar) StderrLine: {'line': b'   88 |     void addPoints(const Matrix<ElementType>& points, \x1b[01;35m\x1b[Kfloat rebuild_threshold = 2\x1b[m\x1b[K)\n'}
[2.337545] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.340138] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/all_indices.h:35\x1b[m\x1b[K,\n'}
[2.340388] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:45\x1b[m\x1b[K,\n'}
[2.340473] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.h:11\x1b[m\x1b[K,\n'}
[2.340535] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.cc:9\x1b[m\x1b[K:\n'}
[2.340601] (kruisee_lidar) StderrLine: {'line': b'/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid flann::NNIndex<Distance>::addPoints(const flann::Matrix<typename Distance::ElementType>&, float) [with Distance = OL2<float>; typename Distance::ElementType = float]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.340679] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:152:18:\x1b[m\x1b[K   required from here\n'}
[2.340741] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:152:55:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kpoints\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.340802] (kruisee_lidar) StderrLine: {'line': b'  152 |     virtual void addPoints(\x1b[01;35m\x1b[Kconst Matrix<ElementType>& points\x1b[m\x1b[K, float rebuild_threshold = 2)\n'}
[2.340873] (kruisee_lidar) StderrLine: {'line': b'      |                            \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\x1b[m\x1b[K\n'}
[2.340932] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:152:69:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krebuild_threshold\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.341019] (kruisee_lidar) StderrLine: {'line': b'  152 |     virtual void addPoints(const Matrix<ElementType>& points, \x1b[01;35m\x1b[Kfloat rebuild_threshold = 2\x1b[m\x1b[K)\n'}
[2.341085] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;35m\x1b[K~~~~~~^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.344170] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:39\x1b[m\x1b[K,\n'}
[2.344382] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/all_indices.h:35\x1b[m\x1b[K,\n'}
[2.344449] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:45\x1b[m\x1b[K,\n'}
[2.344516] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.h:11\x1b[m\x1b[K,\n'}
[2.344581] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/filters/search.cc:9\x1b[m\x1b[K:\n'}
[2.344763] (kruisee_lidar) StderrLine: {'line': b'/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/result_set.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid flann::UniqueResultSet<DistanceType>::copy(size_t*, DistanceType*, int, bool) [with DistanceType = float; size_t = long unsigned int]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.344837] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:246:26:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kint flann::LshIndex<Distance>::knnSearch(const flann::Matrix<typename Distance::ElementType>&, flann::Matrix<long unsigned int>&, flann::Matrix<typename Distance::ResultType>&, size_t, const flann::SearchParams&) const [with Distance = OL2<float>; typename Distance::ElementType = float; typename Distance::ResultType = float; size_t = long unsigned int]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.344913] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:224:9:\x1b[m\x1b[K   required from here\n'}
[2.344991] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/result_set.h:740:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Ksorted\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.345051] (kruisee_lidar) StderrLine: {'line': b'  740 |     void copy(size_t* indices, DistanceType* dist, int n_neighbors, \x1b[01;35m\x1b[Kbool sorted = true\x1b[m\x1b[K)\n'}
[2.345104] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;35m\x1b[K~~~~~^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.345159] (kruisee_lidar) StderrLine: {'line': b'/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/result_set.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid flann::KNNResultSet<DistanceType>::copy(size_t*, DistanceType*, size_t, bool) [with DistanceType = float; size_t = long unsigned int]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.345220] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:261:26:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kint flann::LshIndex<Distance>::knnSearch(const flann::Matrix<typename Distance::ElementType>&, flann::Matrix<long unsigned int>&, flann::Matrix<typename Distance::ResultType>&, size_t, const flann::SearchParams&) const [with Distance = OL2<float>; typename Distance::ElementType = float; typename Distance::ResultType = float; size_t = long unsigned int]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.345287] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:224:9:\x1b[m\x1b[K   required from here\n'}
[2.345345] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/result_set.h:279:79:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Ksorted\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.345410] (kruisee_lidar) StderrLine: {'line': b'  279 |     void copy(size_t* indices, DistanceType* dists, size_t num_elements, \x1b[01;35m\x1b[Kbool sorted = true\x1b[m\x1b[K)\n'}
[2.345651] (kruisee_lidar) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K~~~~~^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.365675] (kruisee_lidar) StdoutLine: {'line': b'[ 45%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/lobject.c.o\x1b[0m\n'}
[2.399691] (kruisee_lidar) StdoutLine: {'line': b'[ 47%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/lopcodes.c.o\x1b[0m\n'}
[2.402942] (-) TimerEvent: {}
[2.413684] (kruisee_lidar) StdoutLine: {'line': b'[ 49%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/loslib.c.o\x1b[0m\n'}
[2.434727] (kruisee_lidar) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/lparser.c.o\x1b[0m\n'}
[2.456837] (kruisee_lidar) StdoutLine: {'line': b'[ 52%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/lstate.c.o\x1b[0m\n'}
[2.478798] (kruisee_lidar) StdoutLine: {'line': b'[ 54%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/ltable.c.o\x1b[0m\n'}
[2.499802] (kruisee_lidar) StdoutLine: {'line': b'[ 56%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/lstring.c.o\x1b[0m\n'}
[2.503064] (-) TimerEvent: {}
[2.530571] (kruisee_lidar) StdoutLine: {'line': b'[ 58%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/ltm.c.o\x1b[0m\n'}
[2.573048] (kruisee_lidar) StdoutLine: {'line': b'[ 60%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/lundump.c.o\x1b[0m\n'}
[2.603182] (-) TimerEvent: {}
[2.656755] (kruisee_lidar) StdoutLine: {'line': b'[ 61%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/lvm.c.o\x1b[0m\n'}
[2.665355] (kruisee_lidar) StdoutLine: {'line': b'[ 65%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/lauxlib.c.o\x1b[0m\n'}
[2.665680] (kruisee_lidar) StdoutLine: {'line': b'[ 65%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/lzio.c.o\x1b[0m\n'}
[2.674711] (kruisee_lidar) StdoutLine: {'line': b'[ 67%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/lbaselib.c.o\x1b[0m\n'}
[2.703292] (-) TimerEvent: {}
[2.718187] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1146\x1b[m\x1b[K:\n'}
[2.718518] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[KluaV_execute\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.719206] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:28:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.719773] (kruisee_lidar) StderrLine: {'line': b'   28 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_MOVE,\n'}
[2.720708] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.720853] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:29:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.721021] (kruisee_lidar) StderrLine: {'line': b'   29 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_LOADI,\n'}
[2.721157] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.721281] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:30:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.721448] (kruisee_lidar) StderrLine: {'line': b'   30 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_LOADF,\n'}
[2.721584] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.721736] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:31:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.721856] (kruisee_lidar) StderrLine: {'line': b'   31 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_LOADK,\n'}
[2.722042] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.722169] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:32:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.722310] (kruisee_lidar) StderrLine: {'line': b'   32 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_LOADKX,\n'}
[2.722439] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.722513] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:33:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.722581] (kruisee_lidar) StderrLine: {'line': b'   33 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_LOADFALSE,\n'}
[2.722644] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.722716] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:34:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.722790] (kruisee_lidar) StderrLine: {'line': b'   34 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_LFALSESKIP,\n'}
[2.722857] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.722925] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:35:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.723000] (kruisee_lidar) StderrLine: {'line': b'   35 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_LOADTRUE,\n'}
[2.723068] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.723132] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:36:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.723197] (kruisee_lidar) StderrLine: {'line': b'   36 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_LOADNIL,\n'}
[2.723257] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.723323] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:37:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.723386] (kruisee_lidar) StderrLine: {'line': b'   37 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_GETUPVAL,\n'}
[2.723447] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.723508] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:38:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.723575] (kruisee_lidar) StderrLine: {'line': b'   38 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_SETUPVAL,\n'}
[2.723636] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.723702] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:39:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.723767] (kruisee_lidar) StderrLine: {'line': b'   39 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_GETTABUP,\n'}
[2.723830] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.723893] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:40:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.723966] (kruisee_lidar) StderrLine: {'line': b'   40 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_GETTABLE,\n'}
[2.724033] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.724096] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:41:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.724160] (kruisee_lidar) StderrLine: {'line': b'   41 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_GETI,\n'}
[2.724218] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.724278] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:42:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.724343] (kruisee_lidar) StderrLine: {'line': b'   42 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_GETFIELD,\n'}
[2.724409] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.724472] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:43:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.724547] (kruisee_lidar) StderrLine: {'line': b'   43 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_SETTABUP,\n'}
[2.724611] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.724671] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:44:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.724732] (kruisee_lidar) StderrLine: {'line': b'   44 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_SETTABLE,\n'}
[2.724807] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.724872] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:45:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.724936] (kruisee_lidar) StderrLine: {'line': b'   45 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_SETI,\n'}
[2.725012] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.725093] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:46:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.725177] (kruisee_lidar) StderrLine: {'line': b'   46 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_SETFIELD,\n'}
[2.725814] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.725905] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:47:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.726062] (kruisee_lidar) StderrLine: {'line': b'   47 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_NEWTABLE,\n'}
[2.726140] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.726224] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:48:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.726290] (kruisee_lidar) StderrLine: {'line': b'   48 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_SELF,\n'}
[2.726505] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.726621] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:49:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.726762] (kruisee_lidar) StderrLine: {'line': b'   49 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_ADDI,\n'}
[2.726832] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.726979] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:50:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.727049] (kruisee_lidar) StderrLine: {'line': b'   50 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_ADDK,\n'}
[2.727203] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.727274] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:51:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.727351] (kruisee_lidar) StderrLine: {'line': b'   51 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_SUBK,\n'}
[2.727413] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.727474] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:52:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.727548] (kruisee_lidar) StderrLine: {'line': b'   52 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_MULK,\n'}
[2.727619] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.727690] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:53:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.727764] (kruisee_lidar) StderrLine: {'line': b'   53 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_MODK,\n'}
[2.727828] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.727894] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:54:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.727970] (kruisee_lidar) StderrLine: {'line': b'   54 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_POWK,\n'}
[2.728042] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.728111] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:55:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.728184] (kruisee_lidar) StderrLine: {'line': b'   55 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_DIVK,\n'}
[2.728255] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.728324] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:56:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.728402] (kruisee_lidar) StderrLine: {'line': b'   56 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_IDIVK,\n'}
[2.728467] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.728534] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:57:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.728602] (kruisee_lidar) StderrLine: {'line': b'   57 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_BANDK,\n'}
[2.728669] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.728732] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:58:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.728801] (kruisee_lidar) StderrLine: {'line': b'   58 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_BORK,\n'}
[2.728860] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.728924] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:59:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.729017] (kruisee_lidar) StderrLine: {'line': b'   59 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_BXORK,\n'}
[2.729085] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.729155] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:60:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.729229] (kruisee_lidar) StderrLine: {'line': b'   60 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_SHRI,\n'}
[2.729300] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.729375] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:61:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.729462] (kruisee_lidar) StderrLine: {'line': b'   61 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_SHLI,\n'}
[2.729536] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.729608] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:62:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.729689] (kruisee_lidar) StderrLine: {'line': b'   62 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_ADD,\n'}
[2.729762] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.729834] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:63:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.729915] (kruisee_lidar) StderrLine: {'line': b'   63 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_SUB,\n'}
[2.729990] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.730064] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:64:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.730147] (kruisee_lidar) StderrLine: {'line': b'   64 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_MUL,\n'}
[2.730209] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.730270] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:65:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.730336] (kruisee_lidar) StderrLine: {'line': b'   65 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_MOD,\n'}
[2.730397] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.730462] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:66:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.730535] (kruisee_lidar) StderrLine: {'line': b'   66 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_POW,\n'}
[2.730596] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.730659] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:67:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.730730] (kruisee_lidar) StderrLine: {'line': b'   67 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_DIV,\n'}
[2.730790] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.730849] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:68:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.730915] (kruisee_lidar) StderrLine: {'line': b'   68 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_IDIV,\n'}
[2.731506] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.731683] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:69:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.731753] (kruisee_lidar) StderrLine: {'line': b'   69 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_BAND,\n'}
[2.731818] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.731878] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:70:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.731944] (kruisee_lidar) StderrLine: {'line': b'   70 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_BOR,\n'}
[2.732098] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.732169] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:71:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.732239] (kruisee_lidar) StderrLine: {'line': b'   71 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_BXOR,\n'}
[2.732310] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.732376] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:72:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.732446] (kruisee_lidar) StderrLine: {'line': b'   72 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_SHL,\n'}
[2.732515] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.732583] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:73:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.732658] (kruisee_lidar) StderrLine: {'line': b'   73 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_SHR,\n'}
[2.732735] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.732818] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:74:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.732890] (kruisee_lidar) StderrLine: {'line': b'   74 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_MMBIN,\n'}
[2.732973] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.733067] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:75:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.733147] (kruisee_lidar) StderrLine: {'line': b'   75 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_MMBINI,\n'}
[2.733224] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.733295] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:76:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.733371] (kruisee_lidar) StderrLine: {'line': b'   76 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_MMBINK,\n'}
[2.733431] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.733496] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:77:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.733573] (kruisee_lidar) StderrLine: {'line': b'   77 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_UNM,\n'}
[2.733646] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.733709] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:78:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.733778] (kruisee_lidar) StderrLine: {'line': b'   78 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_BNOT,\n'}
[2.733845] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.733906] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:79:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.733971] (kruisee_lidar) StderrLine: {'line': b'   79 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_NOT,\n'}
[2.734032] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.734092] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:80:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.734158] (kruisee_lidar) StderrLine: {'line': b'   80 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_LEN,\n'}
[2.734221] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.734285] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:81:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.734353] (kruisee_lidar) StderrLine: {'line': b'   81 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_CONCAT,\n'}
[2.734415] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.734480] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:82:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.734549] (kruisee_lidar) StderrLine: {'line': b'   82 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_CLOSE,\n'}
[2.734617] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.734679] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:83:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.734746] (kruisee_lidar) StderrLine: {'line': b'   83 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_TBC,\n'}
[2.734813] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.734876] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:84:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.734950] (kruisee_lidar) StderrLine: {'line': b'   84 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_JMP,\n'}
[2.735019] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.735088] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:85:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.735170] (kruisee_lidar) StderrLine: {'line': b'   85 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_EQ,\n'}
[2.735243] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.735315] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:86:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.735394] (kruisee_lidar) StderrLine: {'line': b'   86 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_LT,\n'}
[2.735466] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.735533] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:87:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.735612] (kruisee_lidar) StderrLine: {'line': b'   87 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_LE,\n'}
[2.735682] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.735749] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:88:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.741347] (kruisee_lidar) StderrLine: {'line': b'   88 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_EQK,\n'}
[2.741630] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.741814] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:89:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.744748] (kruisee_lidar) StderrLine: {'line': b'   89 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_EQI,\n'}
[2.744908] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.744975] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:90:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.745037] (kruisee_lidar) StderrLine: {'line': b'   90 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_LTI,\n'}
[2.745091] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.745141] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:91:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.745190] (kruisee_lidar) StderrLine: {'line': b'   91 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_LEI,\n'}
[2.745236] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.745281] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:92:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.745328] (kruisee_lidar) StderrLine: {'line': b'   92 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_GTI,\n'}
[2.745374] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.745421] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:93:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.745469] (kruisee_lidar) StderrLine: {'line': b'   93 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_GEI,\n'}
[2.745517] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.745563] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:94:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.745612] (kruisee_lidar) StderrLine: {'line': b'   94 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_TEST,\n'}
[2.745658] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.745704] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:95:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.745752] (kruisee_lidar) StderrLine: {'line': b'   95 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_TESTSET,\n'}
[2.745811] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.745856] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:96:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.746143] (kruisee_lidar) StderrLine: {'line': b'   96 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_CALL,\n'}
[2.746208] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.746262] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:97:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.746320] (kruisee_lidar) StderrLine: {'line': b'   97 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_TAILCALL,\n'}
[2.746375] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.746428] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:98:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.746485] (kruisee_lidar) StderrLine: {'line': b'   98 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_RETURN,\n'}
[2.746545] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.746600] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:99:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.746662] (kruisee_lidar) StderrLine: {'line': b'   99 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_RETURN0,\n'}
[2.746717] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.746918] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:100:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.746984] (kruisee_lidar) StderrLine: {'line': b'  100 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_RETURN1,\n'}
[2.747038] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.747091] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:101:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.747148] (kruisee_lidar) StderrLine: {'line': b'  101 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_FORLOOP,\n'}
[2.747204] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.747267] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:102:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.747319] (kruisee_lidar) StderrLine: {'line': b'  102 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_FORPREP,\n'}
[2.747366] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.747417] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:103:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.747467] (kruisee_lidar) StderrLine: {'line': b'  103 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_TFORPREP,\n'}
[2.747518] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.747569] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:104:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.747769] (kruisee_lidar) StderrLine: {'line': b'  104 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_TFORCALL,\n'}
[2.747823] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.747873] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:105:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.747923] (kruisee_lidar) StderrLine: {'line': b'  105 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_TFORLOOP,\n'}
[2.747970] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.748019] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:106:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.748068] (kruisee_lidar) StderrLine: {'line': b'  106 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_SETLIST,\n'}
[2.748114] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.748161] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:107:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.748217] (kruisee_lidar) StderrLine: {'line': b'  107 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_CLOSURE,\n'}
[2.748262] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.748307] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:108:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.748465] (kruisee_lidar) StderrLine: {'line': b'  108 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_VARARG,\n'}
[2.748518] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.748567] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:109:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.748626] (kruisee_lidar) StderrLine: {'line': b'  109 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_VARARGPREP,\n'}
[2.748677] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.748732] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:110:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking the address of a label is non-standard [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.748784] (kruisee_lidar) StderrLine: {'line': b'  110 | \x1b[01;35m\x1b[K&&\x1b[m\x1b[KL_OP_EXTRAARG\n'}
[2.748833] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[2.748883] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.748939] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.749300] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.749372] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1177:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.749444] (kruisee_lidar) StderrLine: {'line': b' 1177 |     \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K (GET_OPCODE(i)) {\n'}
[2.749517] (kruisee_lidar) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.749721] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.749787] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.749861] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.749927] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.749994] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.750074] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.750136] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1180:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.750197] (kruisee_lidar) StderrLine: {'line': b' 1180 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.750258] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.750321] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.750585] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.750646] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.750700] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.750761] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.750818] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.750878] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1185:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.751101] (kruisee_lidar) StderrLine: {'line': b' 1185 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.751172] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.751235] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.751315] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.751382] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.751446] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.751615] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.751680] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.751742] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1190:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.751807] (kruisee_lidar) StderrLine: {'line': b' 1190 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.751871] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.752030] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.752191] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.752263] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.752335] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.752420] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.752492] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.752564] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1195:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.752647] (kruisee_lidar) StderrLine: {'line': b' 1195 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.752837] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.752918] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.753008] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.753069] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.753133] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.753935] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.754141] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.754304] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1201:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.754518] (kruisee_lidar) StderrLine: {'line': b' 1201 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.754668] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.754897] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.755065] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.755301] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.755460] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.755617] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.755765] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.755940] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1205:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.756234] (kruisee_lidar) StderrLine: {'line': b' 1205 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.756382] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.756520] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.756753] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.756899] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.757092] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.757278] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.757488] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.757646] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1210:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.757812] (kruisee_lidar) StderrLine: {'line': b' 1210 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.758039] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.758188] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.758353] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.758584] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.758728] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.758945] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.759099] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.759242] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1214:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.759445] (kruisee_lidar) StderrLine: {'line': b' 1214 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.759580] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.759724] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.759877] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.760010] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.760120] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.760190] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.760254] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.760319] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1221:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.760392] (kruisee_lidar) StderrLine: {'line': b' 1221 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.760464] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.760534] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.760608] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.760677] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.760747] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.760819] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.760887] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.760964] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1226:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.761044] (kruisee_lidar) StderrLine: {'line': b' 1226 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.761113] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.761181] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.761258] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.761324] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.761396] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.761464] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.761535] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.761601] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1232:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.761668] (kruisee_lidar) StderrLine: {'line': b' 1232 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.761735] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.761805] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.761875] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.761950] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.762019] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.762115] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.762184] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.762253] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1244:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.762315] (kruisee_lidar) StderrLine: {'line': b' 1244 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.762376] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.762437] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.762503] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.762564] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.762626] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.762688] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.762749] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.762815] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1258:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.762880] (kruisee_lidar) StderrLine: {'line': b' 1258 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.762942] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.763004] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.763067] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.763128] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.763190] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.763259] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.763326] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.763394] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1272:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.763461] (kruisee_lidar) StderrLine: {'line': b' 1272 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.763528] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.763594] (kruisee_lidar) StdoutLine: {'line': b'[ 69%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/lcorolib.c.o\x1b[0m\n'}
[2.763715] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.763798] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.763863] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.763927] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.763987] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.764060] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.764148] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1284:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.764215] (kruisee_lidar) StderrLine: {'line': b' 1284 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.764300] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.764454] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.764607] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.764755] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.764909] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.765082] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.765238] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.765384] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1297:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.765513] (kruisee_lidar) StderrLine: {'line': b' 1297 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.765648] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.765783] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.765922] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.766035] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.766146] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.766265] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.766410] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.766536] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1311:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.766662] (kruisee_lidar) StderrLine: {'line': b' 1311 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.766787] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.766907] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.767049] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.767205] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.767341] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.767480] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.767617] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.767753] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1325:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.767892] (kruisee_lidar) StderrLine: {'line': b' 1325 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.768031] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.768192] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.768363] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.768519] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.768668] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.768825] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.769083] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.769255] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1337:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.769395] (kruisee_lidar) StderrLine: {'line': b' 1337 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.769532] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.769667] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.769812] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.769950] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.770087] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.770234] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.770367] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.770501] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1355:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.770637] (kruisee_lidar) StderrLine: {'line': b' 1355 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.770771] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.770909] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.771052] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.771192] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.771329] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.771471] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.771614] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.771760] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1368:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.771918] (kruisee_lidar) StderrLine: {'line': b' 1368 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.772068] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.772250] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.772418] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.772578] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.772696] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.772815] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.772902] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.772985] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1372:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.773070] (kruisee_lidar) StderrLine: {'line': b' 1372 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.773140] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.773213] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.773289] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.773352] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.773414] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.773476] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.773533] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.773590] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1376:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.773749] (kruisee_lidar) StderrLine: {'line': b' 1376 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.773820] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.773883] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.773950] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.774014] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.774080] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.774154] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.774217] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.777672] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1380:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.777800] (kruisee_lidar) StderrLine: {'line': b' 1380 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.777861] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.777920] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.777990] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.778047] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.778103] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.778168] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.778228] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.778282] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1384:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.778342] (kruisee_lidar) StderrLine: {'line': b' 1384 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.778401] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.778459] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.778519] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.778574] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.778629] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.778687] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.778742] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.778798] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1388:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.778853] (kruisee_lidar) StderrLine: {'line': b' 1388 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.778905] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.778963] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.779032] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.779088] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.779146] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.779213] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.779271] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.779329] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1392:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.779391] (kruisee_lidar) StderrLine: {'line': b' 1392 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.779477] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.779557] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.779910] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.780013] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.780088] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.780180] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.780241] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.780302] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1396:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.780365] (kruisee_lidar) StderrLine: {'line': b' 1396 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.780427] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.780492] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.780566] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.780636] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.780701] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.780766] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.780831] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.780900] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1400:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.781003] (kruisee_lidar) StderrLine: {'line': b' 1400 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.781066] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.781123] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.781194] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.781259] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.781322] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.781380] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.781435] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.781490] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1404:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.781545] (kruisee_lidar) StderrLine: {'line': b' 1404 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.781602] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.781654] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.781717] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.781773] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.781831] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.781893] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.781954] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.782011] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1408:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.782070] (kruisee_lidar) StderrLine: {'line': b' 1408 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.782122] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.782176] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.782249] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.782308] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.782676] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.782748] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.782809] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.782869] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1412:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.782931] (kruisee_lidar) StderrLine: {'line': b' 1412 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.782990] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.783053] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.783119] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.783177] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.783384] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.783471] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.783538] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.783603] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1421:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.783669] (kruisee_lidar) StderrLine: {'line': b' 1421 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.783730] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.783804] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.783877] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.783944] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.789134] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.789349] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.789491] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.789641] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1430:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.789747] (kruisee_lidar) StderrLine: {'line': b' 1430 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.789855] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.790003] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.790176] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.790283] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.790386] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.790492] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.790595] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.790700] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1434:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.790808] (kruisee_lidar) StderrLine: {'line': b' 1434 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.790918] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.791020] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.791127] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.791243] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.791357] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.791487] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.791753] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.791983] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1438:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.792115] (kruisee_lidar) StderrLine: {'line': b' 1438 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.792234] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.792375] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.792512] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.792621] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.792722] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.792879] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.793017] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.793128] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1442:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.793233] (kruisee_lidar) StderrLine: {'line': b' 1442 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.793404] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.793537] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.793667] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.793795] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.793921] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.794175] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.794305] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.794426] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1446:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.794547] (kruisee_lidar) StderrLine: {'line': b' 1446 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.794681] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.794809] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.794993] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.795125] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.795257] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.795370] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.795483] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.795587] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1450:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.795690] (kruisee_lidar) StderrLine: {'line': b' 1450 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.795792] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.795898] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.796010] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.802002] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.802274] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.802435] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.802638] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.802771] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1454:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.802901] (kruisee_lidar) StderrLine: {'line': b' 1454 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.803038] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.803216] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.803382] (-) TimerEvent: {}
[2.803534] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.803736] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.803969] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.804046] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.804113] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.804177] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1458:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.804288] (kruisee_lidar) StderrLine: {'line': b' 1458 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.804439] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.804514] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.804584] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.804645] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.804708] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.804780] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.804849] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.804929] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1462:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.805034] (kruisee_lidar) StderrLine: {'line': b' 1462 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.805104] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.805173] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.805263] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.805331] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.805398] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.805468] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.805536] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.805621] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1466:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.805713] (kruisee_lidar) StderrLine: {'line': b' 1466 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.805803] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.805893] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.806118] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.806214] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.806304] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.806391] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.806574] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.806657] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1470:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.806737] (kruisee_lidar) StderrLine: {'line': b' 1470 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.806818] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.812155] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.812698] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.812779] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.812852] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.812924] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.813005] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.813072] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1474:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.813141] (kruisee_lidar) StderrLine: {'line': b' 1474 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.813207] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.813280] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.813351] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.813417] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.813479] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.813545] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.813610] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.813675] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1478:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.813742] (kruisee_lidar) StderrLine: {'line': b' 1478 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.813809] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.813877] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.813957] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.814024] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.814092] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.814161] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.814230] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.814299] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1487:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.814802] (kruisee_lidar) StderrLine: {'line': b' 1487 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.819724] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.819822] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.819898] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.819978] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.820045] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.820117] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.820185] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.820250] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1496:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.820319] (kruisee_lidar) StderrLine: {'line': b' 1496 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.820385] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.820451] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.820520] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.820587] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.820655] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.820722] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.820789] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.820857] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1505:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.820924] (kruisee_lidar) StderrLine: {'line': b' 1505 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.821001] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.821068] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.821145] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.821227] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.821309] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.821396] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.821489] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.821569] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.821644] (kruisee_lidar) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.821711] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.821784] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.821870] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.821947] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.822016] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.822095] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.822161] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.822224] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1529:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.822282] (kruisee_lidar) StderrLine: {'line': b' 1529 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.822339] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.822396] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.822457] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.822515] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.822577] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.822666] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.822747] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.822827] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1537:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.822910] (kruisee_lidar) StderrLine: {'line': b' 1537 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.822996] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.823079] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.823159] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.823239] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.823316] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.823394] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.823472] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.823549] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1541:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.823627] (kruisee_lidar) StderrLine: {'line': b' 1541 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.823704] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.823780] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.823856] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.823908] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.823966] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.824019] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.824072] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.824124] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1548:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.824178] (kruisee_lidar) StderrLine: {'line': b' 1548 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.824229] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.824282] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.824355] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.824414] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.824472] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.824558] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.824618] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.824678] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1552:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.824732] (kruisee_lidar) StderrLine: {'line': b' 1552 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.824788] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.824843] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.824902] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.824968] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.825028] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.825094] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.825151] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.825206] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1557:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.825264] (kruisee_lidar) StderrLine: {'line': b' 1557 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.825323] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.825387] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.825455] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.825518] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.825581] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.825650] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.825738] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.825805] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1561:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.825872] (kruisee_lidar) StderrLine: {'line': b' 1561 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.825935] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.825999] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.826076] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.826142] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.826210] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.826276] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.826340] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.826402] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1568:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.826469] (kruisee_lidar) StderrLine: {'line': b' 1568 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.826540] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.826610] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.826683] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.826750] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.826815] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.826880] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.826946] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.834912] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1572:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.835052] (kruisee_lidar) StderrLine: {'line': b' 1572 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.835154] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.835223] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.835290] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.835352] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.835416] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.835487] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.835551] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.835613] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1576:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.835676] (kruisee_lidar) StderrLine: {'line': b' 1576 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.835737] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.835797] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.835864] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.835924] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.835987] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.836051] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.836113] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.836180] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1583:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.836251] (kruisee_lidar) StderrLine: {'line': b' 1583 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.836322] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.836393] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.836475] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.836547] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.836617] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.836693] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.836766] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.836838] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1595:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.836911] (kruisee_lidar) StderrLine: {'line': b' 1595 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.837006] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.837078] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.837156] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.837238] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.837298] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.837360] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.837417] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.837482] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1599:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.837540] (kruisee_lidar) StderrLine: {'line': b' 1599 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.837597] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.837661] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.837722] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.837780] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.837837] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.837908] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.837966] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.838024] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1603:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.838082] (kruisee_lidar) StderrLine: {'line': b' 1603 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.838139] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.838197] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.838256] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.838315] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.838380] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.838449] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.838516] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.838584] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1607:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.838650] (kruisee_lidar) StderrLine: {'line': b' 1607 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.838716] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.838788] (kruisee_lidar) StdoutLine: {'line': b'[ 70%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/ldblib.c.o\x1b[0m\n'}
[2.838880] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.838958] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.839028] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.839097] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.839165] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.839231] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.839305] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1611:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.839381] (kruisee_lidar) StderrLine: {'line': b' 1611 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.839449] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.839529] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.839604] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.839672] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.849084] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.849228] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.849303] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.849367] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1616:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.849437] (kruisee_lidar) StderrLine: {'line': b' 1616 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.849498] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.849561] (kruisee_lidar) StdoutLine: {'line': b'[ 72%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/liolib.c.o\x1b[0m\n'}
[2.849641] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.849707] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.849766] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.849821] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.849914] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.849977] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.850035] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1626:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.850095] (kruisee_lidar) StderrLine: {'line': b' 1626 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.850153] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.850220] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.850287] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.850349] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.850409] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.850473] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.850536] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.850600] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1642:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.850671] (kruisee_lidar) StderrLine: {'line': b' 1642 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.850732] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.850793] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.850852] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.850911] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.850970] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.851032] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.851094] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.851156] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1749:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.851249] (kruisee_lidar) StderrLine: {'line': b' 1749 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.851335] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.851422] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.851515] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.851607] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.851692] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.851782] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.851867] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.851953] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1755:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.852041] (kruisee_lidar) StderrLine: {'line': b' 1755 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.852126] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.852211] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.852295] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.852357] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.852421] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.852490] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.852556] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.852619] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1787:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.852681] (kruisee_lidar) StderrLine: {'line': b' 1787 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.852742] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.852804] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.852868] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.852931] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.853002] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.853068] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.853135] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.853194] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1810:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.853255] (kruisee_lidar) StderrLine: {'line': b' 1810 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.853315] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.853375] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.853440] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.853499] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.853561] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.853621] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.853681] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.853740] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1816:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.853815] (kruisee_lidar) StderrLine: {'line': b' 1816 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.853876] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.853939] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.854006] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.854068] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.854130] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.854193] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.854254] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.854315] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1821:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.854377] (kruisee_lidar) StderrLine: {'line': b' 1821 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.854444] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.854505] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.854570] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.854631] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.854691] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.854767] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.854830] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.854891] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1830:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.854972] (kruisee_lidar) StderrLine: {'line': b' 1830 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.855036] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.855122] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:12:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C forbids \xe2\x80\x98\x1b[01m\x1b[Kgoto *expr;\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic\x07-Wpedantic\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.855226] (kruisee_lidar) StderrLine: {'line': b'   12 | #define vmdispatch(x)     \x1b[01;35m\x1b[Kgoto\x1b[m\x1b[K *disptab[x];\n'}
[2.855319] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.855414] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/include/ljumptab.h:16:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmdispatch\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.855504] (kruisee_lidar) StderrLine: {'line': b'   16 | #define vmbreak         vmfetch(); \x1b[01;36m\x1b[Kvmdispatch\x1b[m\x1b[K(GET_OPCODE(i));\n'}
[2.855596] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.855685] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/lua/lvm.c:1834:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[Kvmbreak\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.855777] (kruisee_lidar) StderrLine: {'line': b' 1834 |         \x1b[01;36m\x1b[Kvmbreak\x1b[m\x1b[K;\n'}
[2.855872] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.855961] (kruisee_lidar) StdoutLine: {'line': b'[ 74%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/lmathlib.c.o\x1b[0m\n'}
[2.864865] (kruisee_lidar) StdoutLine: {'line': b'[ 76%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/loadlib.c.o\x1b[0m\n'}
[2.874711] (kruisee_lidar) StdoutLine: {'line': b'[ 80%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/lstrlib.c.o\x1b[0m\n'}
[2.874960] (kruisee_lidar) StdoutLine: {'line': b'[ 80%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/ltablib.c.o\x1b[0m\n'}
[2.884631] (kruisee_lidar) StdoutLine: {'line': b'[ 81%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/lutf8lib.c.o\x1b[0m\n'}
[2.903518] (-) TimerEvent: {}
[2.955062] (kruisee_lidar) StdoutLine: {'line': b'[ 83%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lua/linit.c.o\x1b[0m\n'}
[2.976372] (kruisee_lidar) StdoutLine: {'line': b'[ 85%] \x1b[32mBuilding CXX object sdk_core/CMakeFiles/sdk_core.dir/third_party/flann/src/cpp/flann/flann_cpp.cpp.o\x1b[0m\n'}
[3.003844] (-) TimerEvent: {}
[3.049254] (kruisee_lidar) StdoutLine: {'line': b'[ 87%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lz4/lib/lz4.c.o\x1b[0m\n'}
[3.056592] (kruisee_lidar) StdoutLine: {'line': b'[ 89%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lz4/lib/lz4frame.c.o\x1b[0m\n'}
[3.062202] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/all_indices.h:35\x1b[m\x1b[K,\n'}
[3.062545] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:45\x1b[m\x1b[K,\n'}
[3.062805] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann_cpp.cpp:30\x1b[m\x1b[K:\n'}
[3.062970] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:327:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.063129] (kruisee_lidar) StderrLine: {'line': b'  327 | #pragma omp parallel num_threads(params.cores)\n'}
[3.063259] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.063423] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:330:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.063565] (kruisee_lidar) StderrLine: {'line': b'  330 | #pragma omp for schedule(static) reduction(+:count)\n'}
[3.063636] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.063703] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:342:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.063771] (kruisee_lidar) StderrLine: {'line': b'  342 | #pragma omp parallel num_threads(params.cores)\n'}
[3.063835] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.063899] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:345:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.063963] (kruisee_lidar) StderrLine: {'line': b'  345 | #pragma omp for schedule(static) reduction(+:count)\n'}
[3.064051] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.064120] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:415:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.064193] (kruisee_lidar) StderrLine: {'line': b'  415 | #pragma omp parallel num_threads(params.cores)\n'}
[3.064254] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.064316] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:418:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.064385] (kruisee_lidar) StderrLine: {'line': b'  418 | #pragma omp for schedule(static) reduction(+:count)\n'}
[3.064446] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.064512] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:434:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.064784] (kruisee_lidar) StderrLine: {'line': b'  434 | #pragma omp parallel num_threads(params.cores)\n'}
[3.064868] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.064937] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:437:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.065020] (kruisee_lidar) StderrLine: {'line': b'  437 | #pragma omp for schedule(static) reduction(+:count)\n'}
[3.065095] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.065156] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:505:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.065221] (kruisee_lidar) StderrLine: {'line': b'  505 | #pragma omp parallel num_threads(params.cores)\n'}
[3.065282] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.065342] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:508:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.065420] (kruisee_lidar) StderrLine: {'line': b'  508 | #pragma omp for schedule(static) reduction(+:count)\n'}
[3.065484] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.065549] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:520:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.065620] (kruisee_lidar) StderrLine: {'line': b'  520 | #pragma omp parallel num_threads(params.cores)\n'}
[3.065686] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.065750] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:523:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.065820] (kruisee_lidar) StderrLine: {'line': b'  523 | #pragma omp for schedule(static) reduction(+:count)\n'}
[3.065886] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.065948] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:541:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.066013] (kruisee_lidar) StderrLine: {'line': b'  541 | #pragma omp parallel num_threads(params.cores)\n'}
[3.066075] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.066142] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:544:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.066221] (kruisee_lidar) StderrLine: {'line': b'  544 | #pragma omp for schedule(static) reduction(+:count)\n'}
[3.066290] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.066360] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:611:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.066436] (kruisee_lidar) StderrLine: {'line': b'  611 | #pragma omp parallel num_threads(params.cores)\n'}
[3.066819] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.066892] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:614:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.066968] (kruisee_lidar) StderrLine: {'line': b'  614 | #pragma omp for schedule(static) reduction(+:count)\n'}
[3.067037] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.067096] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:628:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.067179] (kruisee_lidar) StderrLine: {'line': b'  628 | #pragma omp parallel num_threads(params.cores)\n'}
[3.067252] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.067312] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:631:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.067372] (kruisee_lidar) StderrLine: {'line': b'  631 | #pragma omp for schedule(static) reduction(+:count)\n'}
[3.067431] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.067482] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:648:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.067545] (kruisee_lidar) StderrLine: {'line': b'  648 | #pragma omp parallel num_threads(params.cores)\n'}
[3.067611] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.067674] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/nn_index.h:651:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.067747] (kruisee_lidar) StderrLine: {'line': b'  651 | #pragma omp for schedule(static) reduction(+:count)\n'}
[3.067807] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.067864] (kruisee_lidar) StdoutLine: {'line': b'[ 90%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lz4/lib/lz4hc.c.o\x1b[0m\n'}
[3.077329] (kruisee_lidar) StdoutLine: {'line': b'[ 92%] \x1b[32mBuilding C object sdk_core/CMakeFiles/sdk_core.dir/third_party/lz4/lib/xxhash.c.o\x1b[0m\n'}
[3.103975] (-) TimerEvent: {}
[3.106206] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/all_indices.h:42\x1b[m\x1b[K,\n'}
[3.106525] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:45\x1b[m\x1b[K,\n'}
[3.106740] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann_cpp.cpp:30\x1b[m\x1b[K:\n'}
[3.106822] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:238:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.106890] (kruisee_lidar) StderrLine: {'line': b'  238 | #pragma omp parallel num_threads(params.cores)\n'}
[3.106953] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.107014] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:241:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.107224] (kruisee_lidar) StderrLine: {'line': b'  241 | #pragma omp for schedule(static) reduction(+:count)\n'}
[3.107293] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.107356] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:253:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.107429] (kruisee_lidar) StderrLine: {'line': b'  253 | #pragma omp parallel num_threads(params.cores)\n'}
[3.107491] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.107552] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:256:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.107618] (kruisee_lidar) StderrLine: {'line': b'  256 | #pragma omp for schedule(static) reduction(+:count)\n'}
[3.107679] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.107741] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:291:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.107817] (kruisee_lidar) StderrLine: {'line': b'  291 | #pragma omp parallel num_threads(params.cores)\n'}
[3.107880] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.107940] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:294:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.108025] (kruisee_lidar) StderrLine: {'line': b'  294 | #pragma omp for schedule(static) reduction(+:count)\n'}
[3.108103] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.108177] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:310:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp parallel\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.108264] (kruisee_lidar) StderrLine: {'line': b'  310 | #pragma omp parallel num_threads(params.cores)\n'}
[3.108345] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.108427] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/lsh_index.h:313:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kignoring \xe2\x80\x98\x1b[01m\x1b[K#pragma omp for\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunknown-pragmas\x07-Wunknown-pragmas\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.108512] (kruisee_lidar) StderrLine: {'line': b'  313 | #pragma omp for schedule(static) reduction(+:count)\n'}
[3.108593] (kruisee_lidar) StderrLine: {'line': b'      | \n'}
[3.204092] (-) TimerEvent: {}
[3.304477] (-) TimerEvent: {}
[3.388280] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/params.h:33\x1b[m\x1b[K,\n'}
[3.388518] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:42\x1b[m\x1b[K,\n'}
[3.388614] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann_cpp.cpp:30\x1b[m\x1b[K:\n'}
[3.388679] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/any.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvirtual void flann::anyimpl::big_any_policy<T>::static_delete(void**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.388747] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/any.h:81:9:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kthis \xe2\x80\x98\x1b[01m\x1b[Kif\x1b[m\x1b[K\xe2\x80\x99 clause does not guard... [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmisleading-indentation\x07-Wmisleading-indentation\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.388824] (kruisee_lidar) StderrLine: {'line': b'   81 |         \x1b[01;35m\x1b[Kif\x1b[m\x1b[K (* x) delete (* reinterpret_cast<T**>(x)); *x = NULL;\n'}
[3.388889] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[3.388953] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/any.h:81:55:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K...this statement, but the latter is misleadingly indented as if it were guarded by the \xe2\x80\x98\x1b[01m\x1b[Kif\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.389040] (kruisee_lidar) StderrLine: {'line': b'   81 |         if (* x) delete (* reinterpret_cast<T**>(x)); \x1b[01;36m\x1b[K*\x1b[m\x1b[Kx = NULL;\n'}
[3.389099] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.404584] (-) TimerEvent: {}
[3.504948] (-) TimerEvent: {}
[3.513121] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/kdtree_index.h:48\x1b[m\x1b[K,\n'}
[3.513321] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/algorithms/all_indices.h:36\x1b[m\x1b[K,\n'}
[3.513378] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann.hpp:45\x1b[m\x1b[K,\n'}
[3.513424] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/flann_cpp.cpp:30\x1b[m\x1b[K:\n'}
[3.513468] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/allocator.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid operator delete(void*, flann::PooledAllocator&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.513513] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/allocator.h:202:35:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kp\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.513561] (kruisee_lidar) StderrLine: {'line': b'  202 | inline void operator delete(\x1b[01;35m\x1b[Kvoid* p\x1b[m\x1b[K, flann::PooledAllocator& allocator)\n'}
[3.513609] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;35m\x1b[K~~~~~~^\x1b[m\x1b[K\n'}
[3.513655] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/sdk_core/third_party/flann/src/cpp/flann/util/allocator.h:202:62:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kallocator\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.513702] (kruisee_lidar) StderrLine: {'line': b'  202 | inline void operator delete(void* p, \x1b[01;35m\x1b[Kflann::PooledAllocator& allocator\x1b[m\x1b[K)\n'}
[3.513745] (kruisee_lidar) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~\x1b[m\x1b[K\n'}
[3.605045] (-) TimerEvent: {}
[3.705421] (-) TimerEvent: {}
[3.805714] (-) TimerEvent: {}
[3.836016] (cpp02_rosbag2) StdoutLine: {'line': b'[ 75%] \x1b[32m\x1b[1mLinking CXX executable demo02_read.cpp\x1b[0m\n'}
[3.905842] (-) TimerEvent: {}
[3.956456] (cpp02_rosbag2) StdoutLine: {'line': b'[ 75%] Built target demo02_read.cpp\n'}
[4.005956] (-) TimerEvent: {}
[4.106339] (-) TimerEvent: {}
[4.206646] (-) TimerEvent: {}
[4.306987] (-) TimerEvent: {}
[4.407289] (-) TimerEvent: {}
[4.507712] (-) TimerEvent: {}
[4.608041] (-) TimerEvent: {}
[4.708367] (-) TimerEvent: {}
[4.808666] (-) TimerEvent: {}
[4.908999] (-) TimerEvent: {}
[5.009273] (-) TimerEvent: {}
[5.109556] (-) TimerEvent: {}
[5.209827] (-) TimerEvent: {}
[5.310118] (-) TimerEvent: {}
[5.410398] (-) TimerEvent: {}
[5.510673] (-) TimerEvent: {}
[5.610918] (-) TimerEvent: {}
[5.711161] (-) TimerEvent: {}
[5.811409] (-) TimerEvent: {}
[5.911682] (-) TimerEvent: {}
[6.011934] (-) TimerEvent: {}
[6.112199] (-) TimerEvent: {}
[6.212454] (-) TimerEvent: {}
[6.312714] (-) TimerEvent: {}
[6.412982] (-) TimerEvent: {}
[6.513249] (-) TimerEvent: {}
[6.613522] (-) TimerEvent: {}
[6.713793] (-) TimerEvent: {}
[6.814056] (-) TimerEvent: {}
[6.914366] (-) TimerEvent: {}
[7.014700] (-) TimerEvent: {}
[7.115021] (-) TimerEvent: {}
[7.215362] (-) TimerEvent: {}
[7.315745] (-) TimerEvent: {}
[7.416109] (-) TimerEvent: {}
[7.500717] (cpp02_rosbag2) StdoutLine: {'line': b'[100%] \x1b[32m\x1b[1mLinking CXX executable demo01_writer.cpp\x1b[0m\n'}
[7.516240] (-) TimerEvent: {}
[7.616541] (-) TimerEvent: {}
[7.636209] (kruisee_lidar) StdoutLine: {'line': b'[ 94%] \x1b[32m\x1b[1mLinking CXX shared library libsdk_core.so\x1b[0m\n'}
[7.664733] (kruisee_lidar) StderrLine: {'line': b"/usr/bin/ld: CMakeFiles/sdk_core.dir/third_party/lua/loslib.c.o: in function `os_tmpname':\n"}
[7.664871] (kruisee_lidar) StderrLine: {'line': b"loslib.c:(.text+0x3f5): warning: the use of `tmpnam' is dangerous, better use `mkstemp'\n"}
[7.714857] (kruisee_lidar) StdoutLine: {'line': b'[ 94%] Built target sdk_core\n'}
[7.716635] (-) TimerEvent: {}
[7.729741] (kruisee_lidar) StdoutLine: {'line': b'[ 98%] \x1b[32mBuilding CXX object CMakeFiles/kruisee_lidar_node.dir/top/node.cc.o\x1b[0m\n'}
[7.729896] (kruisee_lidar) StdoutLine: {'line': b'[ 98%] \x1b[32mBuilding CXX object CMakeFiles/kruisee_lidar_node.dir/top/main.cc.o\x1b[0m\n'}
[7.796138] (cpp02_rosbag2) StdoutLine: {'line': b'[100%] Built target demo01_writer.cpp\n'}
[7.803473] (cpp02_rosbag2) CommandEnded: {'returncode': 0}
[7.816741] (-) TimerEvent: {}
[7.820948] (cpp02_rosbag2) JobProgress: {'identifier': 'cpp02_rosbag2', 'progress': 'install'}
[7.821189] (cpp02_rosbag2) Command: {'cmd': ['/usr/bin/cmake', '--install', '/home/pz10on/Work/ws02_tools/build/cpp02_rosbag2'], 'cwd': '/home/pz10on/Work/ws02_tools/build/cpp02_rosbag2', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'pz10on'), ('LC_TIME', 'zh_CN.UTF-8'), ('XDG_SESSION_TYPE', 'x11'), ('GIT_ASKPASS', '/usr/share/code/resources/app/extensions/git/dist/askpass.sh'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/pz10on'), ('CHROME_DESKTOP', 'code-url-handler.desktop'), ('TERM_PROGRAM_VERSION', '1.73.1'), ('DESKTOP_SESSION', 'ubuntu'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/code.desktop'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('VSCODE_GIT_ASKPASS_MAIN', '/usr/share/code/resources/app/extensions/git/dist/askpass-main.js'), ('LC_MONETARY', 'zh_CN.UTF-8'), ('VSCODE_GIT_ASKPASS_NODE', '/usr/share/code/code'), ('MANAGERPID', '1727'), ('DBUS_STARTER_BUS_TYPE', 'session'), ('SYSTEMD_EXEC_PID', '2193'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus,guid=861efa825ff62dad0101a02565124f85'), ('COLORTERM', 'truecolor'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '5293'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'fcitx'), ('LOGNAME', 'pz10on'), ('JOURNAL_STREAM', '8:34255'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'pz10on'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/pz10on-laptop:@/tmp/.ICE-unix/2193,unix/pz10on-laptop:/tmp/.ICE-unix/2193'), ('INVOCATION_ID', 'b82c74bcb8d04df6ba758aa069c65840'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'zh_CN.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/8939da48_1abb_4f65_b67b_e9e1c4893187'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('GDK_BACKEND', 'x11'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'Unity'), ('LC_TELEPHONE', 'zh_CN.UTF-8'), ('XMODIFIERS', '@im=fcitx'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/1000/vscode-git-1ddad89994.sock'), ('GNOME_TERMINAL_SERVICE', ':1.227'), ('TERM_PROGRAM', 'vscode'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/humble'), ('ORIGINAL_XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('SHELL', '/bin/bash'), ('LC_NAME', 'zh_CN.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('NO_AT_BRIDGE', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'zh_CN.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('LC_IDENTIFICATION', 'zh_CN.UTF-8'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', '--ms-enable-electron-run-as-node'), ('QT_IM_MODULE', 'fcitx'), ('PWD', '/home/pz10on/Work/ws02_tools/build/cpp02_rosbag2'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('CLUTTER_IM_MODULE', 'fcitx'), ('DBUS_STARTER_ADDRESS', 'unix:path=/run/user/1000/bus,guid=861efa825ff62dad0101a02565124f85'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'zh_CN.UTF-8'), ('LC_PAPER', 'zh_CN.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/opt/ros/humble')]), 'shell': False}
[7.827310] (cpp02_rosbag2) StdoutLine: {'line': b'-- Install configuration: ""\n'}
[7.827640] (cpp02_rosbag2) StdoutLine: {'line': b'-- Installing: /home/pz10on/Work/ws02_tools/install/cpp02_rosbag2/lib/cpp02_rosbag2/demo01_writer.cpp\n'}
[7.830384] (cpp02_rosbag2) StdoutLine: {'line': b'-- Set runtime path of "/home/pz10on/Work/ws02_tools/install/cpp02_rosbag2/lib/cpp02_rosbag2/demo01_writer.cpp" to ""\n'}
[7.830712] (cpp02_rosbag2) StdoutLine: {'line': b'-- Installing: /home/pz10on/Work/ws02_tools/install/cpp02_rosbag2/lib/cpp02_rosbag2/demo02_read.cpp\n'}
[7.831076] (cpp02_rosbag2) StdoutLine: {'line': b'-- Set runtime path of "/home/pz10on/Work/ws02_tools/install/cpp02_rosbag2/lib/cpp02_rosbag2/demo02_read.cpp" to ""\n'}
[7.831153] (cpp02_rosbag2) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp02_rosbag2/share/ament_index/resource_index/package_run_dependencies/cpp02_rosbag2\n'}
[7.831274] (cpp02_rosbag2) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp02_rosbag2/share/ament_index/resource_index/parent_prefix_path/cpp02_rosbag2\n'}
[7.831364] (cpp02_rosbag2) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp02_rosbag2/share/cpp02_rosbag2/environment/ament_prefix_path.sh\n'}
[7.831427] (cpp02_rosbag2) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp02_rosbag2/share/cpp02_rosbag2/environment/ament_prefix_path.dsv\n'}
[7.831465] (cpp02_rosbag2) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp02_rosbag2/share/cpp02_rosbag2/environment/path.sh\n'}
[7.831502] (cpp02_rosbag2) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp02_rosbag2/share/cpp02_rosbag2/environment/path.dsv\n'}
[7.831541] (cpp02_rosbag2) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp02_rosbag2/share/cpp02_rosbag2/local_setup.bash\n'}
[7.831581] (cpp02_rosbag2) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp02_rosbag2/share/cpp02_rosbag2/local_setup.sh\n'}
[7.831621] (cpp02_rosbag2) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp02_rosbag2/share/cpp02_rosbag2/local_setup.zsh\n'}
[7.831661] (cpp02_rosbag2) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp02_rosbag2/share/cpp02_rosbag2/local_setup.dsv\n'}
[7.831701] (cpp02_rosbag2) StdoutLine: {'line': b'-- Installing: /home/pz10on/Work/ws02_tools/install/cpp02_rosbag2/share/cpp02_rosbag2/package.dsv\n'}
[7.831776] (cpp02_rosbag2) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp02_rosbag2/share/ament_index/resource_index/packages/cpp02_rosbag2\n'}
[7.831838] (cpp02_rosbag2) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp02_rosbag2/share/cpp02_rosbag2/cmake/cpp02_rosbag2Config.cmake\n'}
[7.831876] (cpp02_rosbag2) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp02_rosbag2/share/cpp02_rosbag2/cmake/cpp02_rosbag2Config-version.cmake\n'}
[7.831914] (cpp02_rosbag2) StdoutLine: {'line': b'-- Up-to-date: /home/pz10on/Work/ws02_tools/install/cpp02_rosbag2/share/cpp02_rosbag2/package.xml\n'}
[7.833139] (cpp02_rosbag2) CommandEnded: {'returncode': 0}
[7.863475] (cpp02_rosbag2) JobEnded: {'identifier': 'cpp02_rosbag2', 'rc': 0}
[7.916853] (-) TimerEvent: {}
[8.017161] (-) TimerEvent: {}
[8.117422] (-) TimerEvent: {}
[8.217676] (-) TimerEvent: {}
[8.245050] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[8.245397] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[8.245458] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[8.245517] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[8.245569] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[8.245622] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[8.245685] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[8.245738] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[8.245789] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.245854] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/main.cc:9\x1b[m\x1b[K:\n'}
[8.245907] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:788:36:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvariant\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[8.245968] (kruisee_lidar) StderrLine: {'line': b'  788 |   using CallbackInfoVariant = std::\x1b[01;31m\x1b[Kvariant\x1b[m\x1b[K<\n'}
[8.246020] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.246071] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:788:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::variant\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.246124] (kruisee_lidar) StderrLine: {'line': b'  788 |   using CallbackInfoVariant = \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::variant<\n'}
[8.246175] (kruisee_lidar) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[8.246229] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:794:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCallbackInfoVariant\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[8.246282] (kruisee_lidar) StderrLine: {'line': b'  794 |   async_send_request_impl(const Request & request, \x1b[01;31m\x1b[KCallbackInfoVariant\x1b[m\x1b[K value)\n'}
[8.246335] (kruisee_lidar) StderrLine: {'line': b'      |                                                    \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.246386] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:808:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koptional\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[8.246439] (kruisee_lidar) StderrLine: {'line': b'  808 |   std::\x1b[01;31m\x1b[Koptional\x1b[m\x1b[K<CallbackInfoVariant>\n'}
[8.246490] (kruisee_lidar) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.246551] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:808:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::optional\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.246605] (kruisee_lidar) StderrLine: {'line': b'  808 |   \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::optional<CallbackInfoVariant>\n'}
[8.246656] (kruisee_lidar) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[8.246706] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[8.246756] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[8.246806] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[8.246855] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[8.246903] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[8.246953] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[8.247005] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[8.247055] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[8.247106] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.247156] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/include/node.h:11\x1b[m\x1b[K,\n'}
[8.247208] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/node.cc:9\x1b[m\x1b[K:\n'}
[8.247258] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:788:36:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvariant\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[8.247309] (kruisee_lidar) StderrLine: {'line': b'  788 |   using CallbackInfoVariant = std::\x1b[01;31m\x1b[Kvariant\x1b[m\x1b[K<\n'}
[8.247358] (kruisee_lidar) StderrLine: {'line': b'      |                                    \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.247407] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:788:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::variant\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.247457] (kruisee_lidar) StderrLine: {'line': b'  788 |   using CallbackInfoVariant = \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::variant<\n'}
[8.247506] (kruisee_lidar) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[8.247567] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:794:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCallbackInfoVariant\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[8.247624] (kruisee_lidar) StderrLine: {'line': b'  794 |   async_send_request_impl(const Request & request, \x1b[01;31m\x1b[KCallbackInfoVariant\x1b[m\x1b[K value)\n'}
[8.247679] (kruisee_lidar) StderrLine: {'line': b'      |                                                    \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.247732] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:808:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koptional\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[8.247783] (kruisee_lidar) StderrLine: {'line': b'  808 |   std::\x1b[01;31m\x1b[Koptional\x1b[m\x1b[K<CallbackInfoVariant>\n'}
[8.247833] (kruisee_lidar) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.247882] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:808:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::optional\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.247934] (kruisee_lidar) StderrLine: {'line': b'  808 |   \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::optional<CallbackInfoVariant>\n'}
[8.247984] (kruisee_lidar) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[8.251078] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:830:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCallbackInfoVariant\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.251166] (kruisee_lidar) StderrLine: {'line': b'  830 |       \x1b[01;31m\x1b[KCallbackInfoVariant\x1b[m\x1b[K>>\n'}
[8.251219] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.251314] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:830:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 2 is invalid\n'}
[8.251368] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:830:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 2 is invalid\n'}
[8.251417] (kruisee_lidar) StderrLine: {'line': b'  830 |       CallbackInfoVariant\x1b[01;31m\x1b[K>>\x1b[m\x1b[K\n'}
[8.251464] (kruisee_lidar) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.251512] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:830:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 5 is invalid\n'}
[8.251563] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:830:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCallbackInfoVariant\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.251618] (kruisee_lidar) StderrLine: {'line': b'  830 |       \x1b[01;31m\x1b[KCallbackInfoVariant\x1b[m\x1b[K>>\n'}
[8.251673] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.251721] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:830:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 2 is invalid\n'}
[8.251771] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:830:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 2 is invalid\n'}
[8.251823] (kruisee_lidar) StderrLine: {'line': b'  830 |       CallbackInfoVariant\x1b[01;31m\x1b[K>>\x1b[m\x1b[K\n'}
[8.251873] (kruisee_lidar) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.251923] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:830:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 5 is invalid\n'}
[8.252441] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Client<ServiceT>::handle_response(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<void>)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.252502] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:550:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koptional\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.252551] (kruisee_lidar) StderrLine: {'line': b'  550 |     std::\x1b[01;31m\x1b[Koptional\x1b[m\x1b[K<CallbackInfoVariant>\n'}
[8.252600] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.252651] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:550:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::optional\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.252845] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Client<ServiceT>::handle_response(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<void>)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.252898] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:550:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koptional\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.252954] (kruisee_lidar) StderrLine: {'line': b'  550 |     std::\x1b[01;31m\x1b[Koptional\x1b[m\x1b[K<CallbackInfoVariant>\n'}
[8.253016] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.253066] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:550:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::optional\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.257911] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:550:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCallbackInfoVariant\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.257992] (kruisee_lidar) StderrLine: {'line': b'  550 |     std::optional<\x1b[01;31m\x1b[KCallbackInfoVariant\x1b[m\x1b[K>\n'}
[8.258043] (kruisee_lidar) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.258400] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:550:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCallbackInfoVariant\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.258455] (kruisee_lidar) StderrLine: {'line': b'  550 |     std::optional<\x1b[01;31m\x1b[KCallbackInfoVariant\x1b[m\x1b[K>\n'}
[8.258505] (kruisee_lidar) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.262968] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:551:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koptional_pending_request\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kremove_pending_request\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.263054] (kruisee_lidar) StderrLine: {'line': b'  551 |     \x1b[01;31m\x1b[Koptional_pending_request\x1b[m\x1b[K = this->get_and_erase_pending_request(request_header->sequence_number);\n'}
[8.263107] (kruisee_lidar) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.263158] (kruisee_lidar) StderrLine: {'line': b'      |     \x1b[32m\x1b[Kremove_pending_request\x1b[m\x1b[K\n'}
[8.263509] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:551:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koptional_pending_request\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kremove_pending_request\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.263578] (kruisee_lidar) StderrLine: {'line': b'  551 |     \x1b[01;31m\x1b[Koptional_pending_request\x1b[m\x1b[K = this->get_and_erase_pending_request(request_header->sequence_number);\n'}
[8.263629] (kruisee_lidar) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.263681] (kruisee_lidar) StderrLine: {'line': b'      |     \x1b[32m\x1b[Kremove_pending_request\x1b[m\x1b[K\n'}
[8.263996] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:558:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.264050] (kruisee_lidar) StderrLine: {'line': b'  558 |     if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<Promise>(value)) {\n'}
[8.264100] (kruisee_lidar) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.264151] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:558:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.264202] (kruisee_lidar) StderrLine: {'line': b'  558 |     if (std::holds_alternative<Promise\x1b[01;31m\x1b[K>\x1b[m\x1b[K(value)) {\n'}
[8.264252] (kruisee_lidar) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.264591] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:558:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.264646] (kruisee_lidar) StderrLine: {'line': b'  558 |     if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<Promise>(value)) {\n'}
[8.264744] (kruisee_lidar) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.264796] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:558:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.264853] (kruisee_lidar) StderrLine: {'line': b'  558 |     if (std::holds_alternative<Promise\x1b[01;31m\x1b[K>\x1b[m\x1b[K(value)) {\n'}
[8.264903] (kruisee_lidar) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.264961] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:561:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.265022] (kruisee_lidar) StderrLine: {'line': b'  561 |     } else if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<CallbackTypeValueVariant>(value)) {\n'}
[8.265072] (kruisee_lidar) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.265122] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:561:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.265173] (kruisee_lidar) StderrLine: {'line': b'  561 |     } else if (std::holds_alternative<CallbackTypeValueVariant\x1b[01;31m\x1b[K>\x1b[m\x1b[K(value)) {\n'}
[8.265225] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.265584] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:561:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.265651] (kruisee_lidar) StderrLine: {'line': b'  561 |     } else if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<CallbackTypeValueVariant>(value)) {\n'}
[8.265744] (kruisee_lidar) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.265795] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:561:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.265847] (kruisee_lidar) StderrLine: {'line': b'  561 |     } else if (std::holds_alternative<CallbackTypeValueVariant\x1b[01;31m\x1b[K>\x1b[m\x1b[K(value)) {\n'}
[8.265900] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.265982] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:568:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.266152] (kruisee_lidar) StderrLine: {'line': b'  568 |     } else if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<CallbackWithRequestTypeValueVariant>(value)) {\n'}
[8.266204] (kruisee_lidar) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.266255] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:568:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.266307] (kruisee_lidar) StderrLine: {'line': b'  568 |     } else if (std::holds_alternative<CallbackWithRequestTypeValueVariant\x1b[01;31m\x1b[K>\x1b[m\x1b[K(value)) {\n'}
[8.266359] (kruisee_lidar) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.266444] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Client<ServiceT>::remove_pending_request(int64_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.266501] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:702:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kmissing template arguments before \xe2\x80\x98\x1b[01m\x1b[Kguard\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.266555] (kruisee_lidar) StderrLine: {'line': b'  702 |     std::lock_guard \x1b[01;31m\x1b[Kguard\x1b[m\x1b[K(pending_requests_mutex_);\n'}
[8.266608] (kruisee_lidar) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.266659] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:703:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kerase\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.266799] (kruisee_lidar) StderrLine: {'line': b'  703 |     return pending_requests_.\x1b[01;31m\x1b[Kerase\x1b[m\x1b[K(request_id) != 0u;\n'}
[8.266895] (kruisee_lidar) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.266947] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Ksize_t rclcpp::Client<ServiceT>::prune_pending_requests()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.266999] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:749:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kmissing template arguments before \xe2\x80\x98\x1b[01m\x1b[Kguard\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.267053] (kruisee_lidar) StderrLine: {'line': b'  749 |     std::lock_guard \x1b[01;31m\x1b[Kguard\x1b[m\x1b[K(pending_requests_mutex_);\n'}
[8.267104] (kruisee_lidar) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.267153] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:750:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksize\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.267206] (kruisee_lidar) StderrLine: {'line': b'  750 |     auto ret = pending_requests_.\x1b[01;31m\x1b[Ksize\x1b[m\x1b[K();\n'}
[8.267257] (kruisee_lidar) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[8.267308] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:751:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kclear\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.267362] (kruisee_lidar) StderrLine: {'line': b'  751 |     pending_requests_.\x1b[01;31m\x1b[Kclear\x1b[m\x1b[K();\n'}
[8.267413] (kruisee_lidar) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.267462] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Ksize_t rclcpp::Client<ServiceT>::prune_requests_older_than(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> > >, std::vector<long int, AllocatorT>*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.267514] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:768:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kmissing template arguments before \xe2\x80\x98\x1b[01m\x1b[Kguard\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.267565] (kruisee_lidar) StderrLine: {'line': b'  768 |     std::lock_guard \x1b[01;31m\x1b[Kguard\x1b[m\x1b[K(pending_requests_mutex_);\n'}
[8.267617] (kruisee_lidar) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.267668] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:769:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksize\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.267723] (kruisee_lidar) StderrLine: {'line': b'  769 |     auto old_size = pending_requests_.\x1b[01;31m\x1b[Ksize\x1b[m\x1b[K();\n'}
[8.267775] (kruisee_lidar) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[8.267824] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:770:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kbegin\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.267877] (kruisee_lidar) StderrLine: {'line': b'  770 |     for (auto it = pending_requests_.\x1b[01;31m\x1b[Kbegin\x1b[m\x1b[K(), last = pending_requests_.end(); it != last; ) {\n'}
[8.267930] (kruisee_lidar) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.267981] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:568:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.268032] (kruisee_lidar) StderrLine: {'line': b'  568 |     } else if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<CallbackWithRequestTypeValueVariant>(value)) {\n'}
[8.268082] (kruisee_lidar) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.268130] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:568:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.268185] (kruisee_lidar) StderrLine: {'line': b'  568 |     } else if (std::holds_alternative<CallbackWithRequestTypeValueVariant\x1b[01;31m\x1b[K>\x1b[m\x1b[K(value)) {\n'}
[8.268234] (kruisee_lidar) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.268287] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Client<ServiceT>::remove_pending_request(int64_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.268375] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:702:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kmissing template arguments before \xe2\x80\x98\x1b[01m\x1b[Kguard\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.268479] (kruisee_lidar) StderrLine: {'line': b'  702 |     std::lock_guard \x1b[01;31m\x1b[Kguard\x1b[m\x1b[K(pending_requests_mutex_);\n'}
[8.268532] (kruisee_lidar) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.268582] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:703:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kerase\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.268636] (kruisee_lidar) StderrLine: {'line': b'  703 |     return pending_requests_.\x1b[01;31m\x1b[Kerase\x1b[m\x1b[K(request_id) != 0u;\n'}
[8.268688] (kruisee_lidar) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.268740] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Ksize_t rclcpp::Client<ServiceT>::prune_pending_requests()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.268792] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:749:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kmissing template arguments before \xe2\x80\x98\x1b[01m\x1b[Kguard\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.268842] (kruisee_lidar) StderrLine: {'line': b'  749 |     std::lock_guard \x1b[01;31m\x1b[Kguard\x1b[m\x1b[K(pending_requests_mutex_);\n'}
[8.268892] (kruisee_lidar) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.268941] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:750:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksize\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.269009] (kruisee_lidar) StderrLine: {'line': b'  750 |     auto ret = pending_requests_.\x1b[01;31m\x1b[Ksize\x1b[m\x1b[K();\n'}
[8.269071] (kruisee_lidar) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[8.269123] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:751:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kclear\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.269176] (kruisee_lidar) StderrLine: {'line': b'  751 |     pending_requests_.\x1b[01;31m\x1b[Kclear\x1b[m\x1b[K();\n'}
[8.269228] (kruisee_lidar) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.269280] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Ksize_t rclcpp::Client<ServiceT>::prune_requests_older_than(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> > >, std::vector<long int, AllocatorT>*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.269334] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:768:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kmissing template arguments before \xe2\x80\x98\x1b[01m\x1b[Kguard\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.269389] (kruisee_lidar) StderrLine: {'line': b'  768 |     std::lock_guard \x1b[01;31m\x1b[Kguard\x1b[m\x1b[K(pending_requests_mutex_);\n'}
[8.269522] (kruisee_lidar) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.269654] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:769:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksize\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.269719] (kruisee_lidar) StderrLine: {'line': b'  769 |     auto old_size = pending_requests_.\x1b[01;31m\x1b[Ksize\x1b[m\x1b[K();\n'}
[8.269774] (kruisee_lidar) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[8.269813] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:770:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kbegin\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.269851] (kruisee_lidar) StderrLine: {'line': b'  770 |     for (auto it = pending_requests_.\x1b[01;31m\x1b[Kbegin\x1b[m\x1b[K(), last = pending_requests_.end(); it != last; ) {\n'}
[8.269894] (kruisee_lidar) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.269930] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:770:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Klast\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.269966] (kruisee_lidar) StderrLine: {'line': b'  770 |     for (auto it = pending_requests_.begin(), last = pending_requests_.end(); it != \x1b[01;31m\x1b[Klast\x1b[m\x1b[K; ) {\n'}
[8.270003] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[8.270038] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:775:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kerase\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.270075] (kruisee_lidar) StderrLine: {'line': b'  775 |         it = pending_requests_.\x1b[01;31m\x1b[Kerase\x1b[m\x1b[K(it);\n'}
[8.270109] (kruisee_lidar) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.270144] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:780:41:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksize\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.270180] (kruisee_lidar) StderrLine: {'line': b'  780 |     return old_size - pending_requests_.\x1b[01;31m\x1b[Ksize\x1b[m\x1b[K();\n'}
[8.270215] (kruisee_lidar) StderrLine: {'line': b'      |                                         \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[8.270250] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint64_t rclcpp::Client<ServiceT>::async_send_request_impl(const Request&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.270285] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:802:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ktry_emplace\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.270323] (kruisee_lidar) StderrLine: {'line': b'  802 |     pending_requests_.\x1b[01;31m\x1b[Ktry_emplace\x1b[m\x1b[K(\n'}
[8.270358] (kruisee_lidar) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.270392] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:770:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Klast\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.270427] (kruisee_lidar) StderrLine: {'line': b'  770 |     for (auto it = pending_requests_.begin(), last = pending_requests_.end(); it != \x1b[01;31m\x1b[Klast\x1b[m\x1b[K; ) {\n'}
[8.270464] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[8.270499] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:775:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kerase\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.270536] (kruisee_lidar) StderrLine: {'line': b'  775 |         it = pending_requests_.\x1b[01;31m\x1b[Kerase\x1b[m\x1b[K(it);\n'}
[8.270571] (kruisee_lidar) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.270606] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:780:41:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksize\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.270644] (kruisee_lidar) StderrLine: {'line': b'  780 |     return old_size - pending_requests_.\x1b[01;31m\x1b[Ksize\x1b[m\x1b[K();\n'}
[8.270679] (kruisee_lidar) StderrLine: {'line': b'      |                                         \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[8.270714] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint64_t rclcpp::Client<ServiceT>::async_send_request_impl(const Request&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.270751] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:802:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ktry_emplace\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.270787] (kruisee_lidar) StderrLine: {'line': b'  802 |     pending_requests_.\x1b[01;31m\x1b[Ktry_emplace\x1b[m\x1b[K(\n'}
[8.270823] (kruisee_lidar) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.299479] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[8.299755] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[8.299805] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[8.299842] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[8.299877] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[8.299912] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[8.299947] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[8.299990] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[8.300025] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[8.300059] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.300094] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/include/node.h:11\x1b[m\x1b[K,\n'}
[8.300130] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/node.cc:9\x1b[m\x1b[K:\n'}
[8.300165] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K At global scope:\n'}
[8.300200] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:47:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvoid_t\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.300237] (kruisee_lidar) StderrLine: {'line': b'   47 | struct can_be_nullptr<T, std::\x1b[01;31m\x1b[Kvoid_t\x1b[m\x1b[K<\n'}
[8.300272] (kruisee_lidar) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[8.300309] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:47:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::void_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.300345] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:47:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvoid_t\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.300380] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:47:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::void_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.300416] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:48:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 2 is invalid\n'}
[8.300450] (kruisee_lidar) StderrLine: {'line': b'   48 |     decltype(std::declval<T>() == nullptr), decltype(std::declval<T &>() = nullptr)\x1b[01;31m\x1b[K>>\x1b[m\x1b[K\n'}
[8.300484] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.300520] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:226:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvariant\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[8.300558] (kruisee_lidar) StderrLine: {'line': b'  226 |   std::\x1b[01;31m\x1b[Kvariant\x1b[m\x1b[K<\n'}
[8.300594] (kruisee_lidar) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.300630] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:226:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::variant\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.300668] (kruisee_lidar) StderrLine: {'line': b'  226 |   \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::variant<\n'}
[8.300710] (kruisee_lidar) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[8.300845] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<ServiceT>::AnyServiceCallback()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.300882] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:62:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kclass \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<ServiceT>\x1b[m\x1b[K\xe2\x80\x99 does not have any field named \xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.300918] (kruisee_lidar) StderrLine: {'line': b'   62 |   : \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K(std::monostate{})\n'}
[8.300976] (kruisee_lidar) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.301071] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:62:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmonostate\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.301111] (kruisee_lidar) StderrLine: {'line': b'   62 |   : callback_(std::\x1b[01;31m\x1b[Kmonostate\x1b[m\x1b[K{})\n'}
[8.301146] (kruisee_lidar) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.301182] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[8.301218] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[8.301252] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[8.301286] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[8.301319] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[8.301353] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[8.301387] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[8.301420] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[8.301454] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[8.301487] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.301523] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/main.cc:9\x1b[m\x1b[K:\n'}
[8.301556] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K At global scope:\n'}
[8.301591] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:47:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvoid_t\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.301625] (kruisee_lidar) StderrLine: {'line': b'   47 | struct can_be_nullptr<T, std::\x1b[01;31m\x1b[Kvoid_t\x1b[m\x1b[K<\n'}
[8.301659] (kruisee_lidar) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[8.301693] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:47:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::void_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.301727] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:47:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvoid_t\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.301761] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:47:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::void_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.301796] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:48:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 2 is invalid\n'}
[8.301829] (kruisee_lidar) StderrLine: {'line': b'   48 |     decltype(std::declval<T>() == nullptr), decltype(std::declval<T &>() = nullptr)\x1b[01;31m\x1b[K>>\x1b[m\x1b[K\n'}
[8.301864] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.301898] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:226:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvariant\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[8.301935] (kruisee_lidar) StderrLine: {'line': b'  226 |   std::\x1b[01;31m\x1b[Kvariant\x1b[m\x1b[K<\n'}
[8.301969] (kruisee_lidar) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.302002] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:226:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::variant\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.302037] (kruisee_lidar) StderrLine: {'line': b'  226 |   \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::variant<\n'}
[8.302070] (kruisee_lidar) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[8.302105] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<ServiceT>::AnyServiceCallback()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.302139] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:62:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kclass \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<ServiceT>\x1b[m\x1b[K\xe2\x80\x99 does not have any field named \xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.302178] (kruisee_lidar) StderrLine: {'line': b'   62 |   : \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K(std::monostate{})\n'}
[8.302215] (kruisee_lidar) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.302285] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:62:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmonostate\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.302326] (kruisee_lidar) StderrLine: {'line': b'   62 |   : callback_(std::\x1b[01;31m\x1b[Kmonostate\x1b[m\x1b[K{})\n'}
[8.302361] (kruisee_lidar) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.303195] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.303261] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:78:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.303297] (kruisee_lidar) StderrLine: {'line': b'   78 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrCallback>(callback);\n'}
[8.303332] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.303366] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[8.303401] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:78:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.303435] (kruisee_lidar) StderrLine: {'line': b'   78 |       callback_.template emplace<SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[8.303470] (kruisee_lidar) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.304789] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.304863] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:78:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.304900] (kruisee_lidar) StderrLine: {'line': b'   78 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrCallback>(callback);\n'}
[8.304937] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.304994] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[8.305031] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:78:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.305071] (kruisee_lidar) StderrLine: {'line': b'   78 |       callback_.template emplace<SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[8.305106] (kruisee_lidar) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.305706] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:85:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.305749] (kruisee_lidar) StderrLine: {'line': b'   85 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrWithRequestHeaderCallback>(callback);\n'}
[8.305799] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.305834] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[8.305903] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:85:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.305944] (kruisee_lidar) StderrLine: {'line': b'   85 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[8.305979] (kruisee_lidar) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.307337] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:85:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.307392] (kruisee_lidar) StderrLine: {'line': b'   85 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrWithRequestHeaderCallback>(callback);\n'}
[8.307426] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.307461] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[8.307495] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:85:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.307529] (kruisee_lidar) StderrLine: {'line': b'   85 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[8.307562] (kruisee_lidar) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.308084] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:92:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.308141] (kruisee_lidar) StderrLine: {'line': b'   92 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrDeferResponseCallback>(callback);\n'}
[8.308176] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.308209] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[8.308243] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:92:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.308279] (kruisee_lidar) StderrLine: {'line': b'   92 |       callback_.template emplace<SharedPtrDeferResponseCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[8.308314] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.309661] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:92:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.309721] (kruisee_lidar) StderrLine: {'line': b'   92 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrDeferResponseCallback>(callback);\n'}
[8.309755] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.309790] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[8.309824] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:92:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.309859] (kruisee_lidar) StderrLine: {'line': b'   92 |       callback_.template emplace<SharedPtrDeferResponseCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[8.309893] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.310383] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:99:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.310425] (kruisee_lidar) StderrLine: {'line': b'   99 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);\n'}
[8.310526] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.310608] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[8.310642] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:99:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.310678] (kruisee_lidar) StderrLine: {'line': b'   99 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[8.310716] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.312010] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:99:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.312065] (kruisee_lidar) StderrLine: {'line': b'   99 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);\n'}
[8.312101] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.312135] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[8.312169] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:99:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.312204] (kruisee_lidar) StderrLine: {'line': b'   99 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[8.312238] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.312623] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:103:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.312661] (kruisee_lidar) StderrLine: {'line': b'  103 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K = std::forward<CallbackT>(callback);\n'}
[8.312696] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.312731] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[8.314208] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:103:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.314250] (kruisee_lidar) StderrLine: {'line': b'  103 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K = std::forward<CallbackT>(callback);\n'}
[8.314285] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.314319] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[8.314900] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.314939] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.314974] (kruisee_lidar) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrCallback>(callback);\n'}
[8.315009] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.315048] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[8.315082] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.315117] (kruisee_lidar) StderrLine: {'line': b'  123 |       callback_.template emplace<SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[8.315150] (kruisee_lidar) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.316444] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.316484] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.316520] (kruisee_lidar) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrCallback>(callback);\n'}
[8.316554] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.316588] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[8.316621] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.316655] (kruisee_lidar) StderrLine: {'line': b'  123 |       callback_.template emplace<SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[8.316689] (kruisee_lidar) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.317047] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.317087] (kruisee_lidar) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrWithRequestHeaderCallback>(callback);\n'}
[8.317123] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.317158] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[8.317193] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.317228] (kruisee_lidar) StderrLine: {'line': b'  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[8.317266] (kruisee_lidar) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.317738] (-) TimerEvent: {}
[8.318823] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.318908] (kruisee_lidar) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrWithRequestHeaderCallback>(callback);\n'}
[8.318945] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.318980] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[8.319015] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.319050] (kruisee_lidar) StderrLine: {'line': b'  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[8.319098] (kruisee_lidar) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.319400] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.319439] (kruisee_lidar) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrDeferResponseCallback>(callback);\n'}
[8.319473] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.319507] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[8.319541] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.319575] (kruisee_lidar) StderrLine: {'line': b'  137 |       callback_.template emplace<SharedPtrDeferResponseCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[8.319609] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.321146] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.321190] (kruisee_lidar) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrDeferResponseCallback>(callback);\n'}
[8.321237] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.321273] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[8.321315] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.321351] (kruisee_lidar) StderrLine: {'line': b'  137 |       callback_.template emplace<SharedPtrDeferResponseCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[8.321385] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.321736] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.321775] (kruisee_lidar) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);\n'}
[8.321810] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.321843] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[8.321878] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.321917] (kruisee_lidar) StderrLine: {'line': b'  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[8.322033] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.323450] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.323493] (kruisee_lidar) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);\n'}
[8.323529] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.323564] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[8.323599] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.323634] (kruisee_lidar) StderrLine: {'line': b'  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[8.323669] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.323931] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:148:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.323971] (kruisee_lidar) StderrLine: {'line': b'  148 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K = std::forward<CallbackT>(callback);\n'}
[8.324008] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.324043] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[8.324852] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<typename ServiceT::Response> rclcpp::AnyServiceCallback<ServiceT>::dispatch(const std::shared_ptr<rclcpp::Service<ServiceT> >&, const std::shared_ptr<rmw_request_id_s>&, std::shared_ptr<typename ServiceT::Request>)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.324894] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:160:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.324930] (kruisee_lidar) StderrLine: {'line': b'  160 |     if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<std::monostate>(callback_)) {\n'}
[8.324972] (kruisee_lidar) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.325475] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:160:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmonostate\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.325532] (kruisee_lidar) StderrLine: {'line': b'  160 |     if (std::holds_alternative<std::\x1b[01;31m\x1b[Kmonostate\x1b[m\x1b[K>(callback_)) {\n'}
[8.325568] (kruisee_lidar) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.325632] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:148:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.325684] (kruisee_lidar) StderrLine: {'line': b'  148 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K = std::forward<CallbackT>(callback);\n'}
[8.325721] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.325758] (kruisee_lidar) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[8.326803] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<typename ServiceT::Response> rclcpp::AnyServiceCallback<ServiceT>::dispatch(const std::shared_ptr<rclcpp::Service<ServiceT> >&, const std::shared_ptr<rmw_request_id_s>&, std::shared_ptr<typename ServiceT::Request>)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.326846] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:160:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.326881] (kruisee_lidar) StderrLine: {'line': b'  160 |     if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<std::monostate>(callback_)) {\n'}
[8.326915] (kruisee_lidar) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.327468] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:160:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmonostate\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.327509] (kruisee_lidar) StderrLine: {'line': b'  160 |     if (std::holds_alternative<std::\x1b[01;31m\x1b[Kmonostate\x1b[m\x1b[K>(callback_)) {\n'}
[8.327556] (kruisee_lidar) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.328518] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:160:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.328564] (kruisee_lidar) StderrLine: {'line': b'  160 |     if (std::holds_alternative<std::monostate>(\x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K)) {\n'}
[8.328601] (kruisee_lidar) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.329722] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:165:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.329768] (kruisee_lidar) StderrLine: {'line': b'  165 |     if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedPtrDeferResponseCallback>(callback_)) {\n'}
[8.329804] (kruisee_lidar) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.329839] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:165:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.329874] (kruisee_lidar) StderrLine: {'line': b'  165 |     if (std::holds_alternative<SharedPtrDeferResponseCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_)) {\n'}
[8.329909] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.330786] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:160:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.330827] (kruisee_lidar) StderrLine: {'line': b'  160 |     if (std::holds_alternative<std::monostate>(\x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K)) {\n'}
[8.330862] (kruisee_lidar) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.331797] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:165:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.331846] (kruisee_lidar) StderrLine: {'line': b'  165 |     if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedPtrDeferResponseCallback>(callback_)) {\n'}
[8.331902] (kruisee_lidar) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.331944] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:165:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.331981] (kruisee_lidar) StderrLine: {'line': b'  165 |     if (std::holds_alternative<SharedPtrDeferResponseCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_)) {\n'}
[8.332031] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.332856] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:165:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.332993] (kruisee_lidar) StderrLine: {'line': b'  165 |     if (std::holds_alternative<SharedPtrDeferResponseCallback>(\x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K)) {\n'}
[8.333055] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.334126] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:170:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.334232] (kruisee_lidar) StderrLine: {'line': b'  170 |     if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedPtrDeferResponseCallbackWithServiceHandle>(callback_)) {\n'}
[8.334282] (kruisee_lidar) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.334320] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:170:79:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.334358] (kruisee_lidar) StderrLine: {'line': b'  170 |     if (std::holds_alternative<SharedPtrDeferResponseCallbackWithServiceHandle\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_)) {\n'}
[8.334394] (kruisee_lidar) StderrLine: {'line': b'      |                                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.335023] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:165:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.335067] (kruisee_lidar) StderrLine: {'line': b'  165 |     if (std::holds_alternative<SharedPtrDeferResponseCallback>(\x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K)) {\n'}
[8.335106] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.336142] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:170:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.336202] (kruisee_lidar) StderrLine: {'line': b'  170 |     if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedPtrDeferResponseCallbackWithServiceHandle>(callback_)) {\n'}
[8.336239] (kruisee_lidar) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.336276] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:170:79:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.336312] (kruisee_lidar) StderrLine: {'line': b'  170 |     if (std::holds_alternative<SharedPtrDeferResponseCallbackWithServiceHandle\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_)) {\n'}
[8.336352] (kruisee_lidar) StderrLine: {'line': b'      |                                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.337205] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:170:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.337251] (kruisee_lidar) StderrLine: {'line': b'  170 |     if (std::holds_alternative<SharedPtrDeferResponseCallbackWithServiceHandle>(\x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K)) {\n'}
[8.337288] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.338210] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:177:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.338281] (kruisee_lidar) StderrLine: {'line': b'  177 |     if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedPtrCallback>(callback_)) {\n'}
[8.338319] (kruisee_lidar) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.338355] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:177:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.338391] (kruisee_lidar) StderrLine: {'line': b'  177 |     if (std::holds_alternative<SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_)) {\n'}
[8.338427] (kruisee_lidar) StderrLine: {'line': b'      |                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.339161] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:170:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.339233] (kruisee_lidar) StderrLine: {'line': b'  170 |     if (std::holds_alternative<SharedPtrDeferResponseCallbackWithServiceHandle>(\x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K)) {\n'}
[8.339270] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.340252] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:177:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.340317] (kruisee_lidar) StderrLine: {'line': b'  177 |     if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedPtrCallback>(callback_)) {\n'}
[8.340353] (kruisee_lidar) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.340387] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:177:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.340423] (kruisee_lidar) StderrLine: {'line': b'  177 |     if (std::holds_alternative<SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_)) {\n'}
[8.340458] (kruisee_lidar) StderrLine: {'line': b'      |                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.341241] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:177:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.341286] (kruisee_lidar) StderrLine: {'line': b'  177 |     if (std::holds_alternative<SharedPtrCallback>(\x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K)) {\n'}
[8.341321] (kruisee_lidar) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.342291] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:181:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.342348] (kruisee_lidar) StderrLine: {'line': b'  181 |     } else if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedPtrWithRequestHeaderCallback>(callback_)) {\n'}
[8.342383] (kruisee_lidar) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.342428] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:181:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.342504] (kruisee_lidar) StderrLine: {'line': b'  181 |     } else if (std::holds_alternative<SharedPtrWithRequestHeaderCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_)) {\n'}
[8.342540] (kruisee_lidar) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.342575] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::register_callback_for_tracing()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.342610] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:192:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.342646] (kruisee_lidar) StderrLine: {'line': b'  192 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[8.342678] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.342712] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:192:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.343396] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:177:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.343440] (kruisee_lidar) StderrLine: {'line': b'  177 |     if (std::holds_alternative<SharedPtrCallback>(\x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K)) {\n'}
[8.343474] (kruisee_lidar) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.344402] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:181:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.344443] (kruisee_lidar) StderrLine: {'line': b'  181 |     } else if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedPtrWithRequestHeaderCallback>(callback_)) {\n'}
[8.344489] (kruisee_lidar) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.344523] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:181:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.344559] (kruisee_lidar) StderrLine: {'line': b'  181 |     } else if (std::holds_alternative<SharedPtrWithRequestHeaderCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_)) {\n'}
[8.344594] (kruisee_lidar) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.344629] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::register_callback_for_tracing()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.344665] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:192:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.344705] (kruisee_lidar) StderrLine: {'line': b'  192 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[8.344740] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.344775] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:192:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.345500] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:198:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.345543] (kruisee_lidar) StderrLine: {'line': b'  198 |       }, \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K);\n'}
[8.345579] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.347594] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:198:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.347656] (kruisee_lidar) StderrLine: {'line': b'  198 |       }, \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K);\n'}
[8.347691] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.353562] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[8.353646] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[8.353685] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[8.353720] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[8.353755] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[8.353789] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[8.353823] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[8.353857] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[8.353892] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[8.353926] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.353960] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/include/node.h:11\x1b[m\x1b[K,\n'}
[8.353994] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/node.cc:9\x1b[m\x1b[K:\n'}
[8.354028] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K At global scope:\n'}
[8.354062] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:171:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvariant\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[8.354097] (kruisee_lidar) StderrLine: {'line': b'  171 |   using variant_type = std::\x1b[01;31m\x1b[Kvariant\x1b[m\x1b[K<\n'}
[8.354131] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.354165] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:171:24:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::variant\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.354201] (kruisee_lidar) StderrLine: {'line': b'  171 |   using variant_type = \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::variant<\n'}
[8.354235] (kruisee_lidar) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[8.354269] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:201:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvariant\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[8.354306] (kruisee_lidar) StderrLine: {'line': b'  201 |   using variant_type = std::\x1b[01;31m\x1b[Kvariant\x1b[m\x1b[K<\n'}
[8.354339] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.354374] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:201:24:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::variant\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.354409] (kruisee_lidar) StderrLine: {'line': b'  201 |   using variant_type = \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::variant<\n'}
[8.354443] (kruisee_lidar) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[8.355363] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::dispatch(std::shared_ptr<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, const rclcpp::MessageInfo&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.355404] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:504:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.355440] (kruisee_lidar) StderrLine: {'line': b'  504 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[8.355491] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.355526] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:504:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.355643] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[8.355679] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[8.355714] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[8.355753] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[8.355793] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[8.355828] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[8.355861] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[8.355894] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[8.355927] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[8.355961] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.355994] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/main.cc:9\x1b[m\x1b[K:\n'}
[8.356027] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K At global scope:\n'}
[8.356061] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:171:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvariant\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[8.356102] (kruisee_lidar) StderrLine: {'line': b'  171 |   using variant_type = std::\x1b[01;31m\x1b[Kvariant\x1b[m\x1b[K<\n'}
[8.356136] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.356173] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:171:24:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::variant\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.356269] (kruisee_lidar) StderrLine: {'line': b'  171 |   using variant_type = \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::variant<\n'}
[8.356302] (kruisee_lidar) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[8.356337] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:201:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvariant\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[8.356371] (kruisee_lidar) StderrLine: {'line': b'  201 |   using variant_type = std::\x1b[01;31m\x1b[Kvariant\x1b[m\x1b[K<\n'}
[8.356404] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.356438] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:201:24:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::variant\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.356473] (kruisee_lidar) StderrLine: {'line': b'  201 |   using variant_type = \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::variant<\n'}
[8.356506] (kruisee_lidar) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[8.356540] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In lambda function:\n'}
[8.356574] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:510:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.356610] (kruisee_lidar) StderrLine: {'line': b'  510 |         if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefCallback>) {\n'}
[8.356648] (kruisee_lidar) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.356701] (kruisee_lidar) StderrLine: {'line': b'      |                                     \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.356736] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:510:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.356774] (kruisee_lidar) StderrLine: {'line': b'  510 |         if constexpr (is_ta && std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefCallback>) {\n'}
[8.356811] (kruisee_lidar) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.356848] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:510:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.356885] (kruisee_lidar) StderrLine: {'line': b'  510 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.356923] (kruisee_lidar) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.356965] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:510:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.357005] (kruisee_lidar) StderrLine: {'line': b'  510 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.357097] (kruisee_lidar) StderrLine: {'line': b'      |                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.357135] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:518:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.357173] (kruisee_lidar) StderrLine: {'line': b'  518 |         } else if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoCallback>) {  // NOLINT\n'}
[8.357209] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.357246] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.357282] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:518:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.357319] (kruisee_lidar) StderrLine: {'line': b'  518 |         } else if constexpr (is_ta && std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefWithInfoCallback>) {  // NOLINT\n'}
[8.357357] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.357393] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:518:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.357431] (kruisee_lidar) StderrLine: {'line': b'  518 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT\n'}
[8.357467] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.357504] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:518:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.357541] (kruisee_lidar) StderrLine: {'line': b'  518 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT\n'}
[8.357578] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.357648] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:521:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.357689] (kruisee_lidar) StderrLine: {'line': b'  521 |         } else if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrCallback>) {\n'}
[8.357727] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.357765] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.357845] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:521:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.357885] (kruisee_lidar) StderrLine: {'line': b'  521 |         } else if constexpr (is_ta && std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrCallback>) {\n'}
[8.357965] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.358001] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:521:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.358038] (kruisee_lidar) StderrLine: {'line': b'  521 |         } else if constexpr (is_ta && std::is_same_v<T, UniquePtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.358104] (kruisee_lidar) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.358140] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:521:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.358176] (kruisee_lidar) StderrLine: {'line': b'  521 |         } else if constexpr (is_ta && std::is_same_v<T, UniquePtrCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.358212] (kruisee_lidar) StderrLine: {'line': b'      |                                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.358246] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:523:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.358283] (kruisee_lidar) StderrLine: {'line': b'  523 |         } else if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoCallback>) {\n'}
[8.358320] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.358357] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.358395] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:523:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.358455] (kruisee_lidar) StderrLine: {'line': b'  523 |         } else if constexpr (is_ta && std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrWithInfoCallback>) {\n'}
[8.358536] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.358571] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:523:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.358607] (kruisee_lidar) StderrLine: {'line': b'  523 |         } else if constexpr (is_ta && std::is_same_v<T, UniquePtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.358641] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.358676] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:523:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.358712] (kruisee_lidar) StderrLine: {'line': b'  523 |         } else if constexpr (is_ta && std::is_same_v<T, UniquePtrWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.358747] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.358783] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::dispatch(std::shared_ptr<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, const rclcpp::MessageInfo&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.358822] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:504:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.358860] (kruisee_lidar) StderrLine: {'line': b'  504 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[8.358903] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.358941] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:504:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.358979] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:527:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.359017] (kruisee_lidar) StderrLine: {'line': b'  527 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrCallback>||\n'}
[8.359055] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.359092] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.359156] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:527:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.359194] (kruisee_lidar) StderrLine: {'line': b'  527 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrCallback>||\n'}
[8.359231] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.359269] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:527:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.359307] (kruisee_lidar) StderrLine: {'line': b'  527 |             std::is_same_v<T, SharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.359343] (kruisee_lidar) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.359381] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:527:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.359503] (kruisee_lidar) StderrLine: {'line': b'  527 |             std::is_same_v<T, SharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.359648] (kruisee_lidar) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.359688] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:528:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.359726] (kruisee_lidar) StderrLine: {'line': b'  528 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrCallback>||\n'}
[8.359761] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.359795] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.359828] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:528:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.359865] (kruisee_lidar) StderrLine: {'line': b'  528 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrCallback>||\n'}
[8.359901] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.359964] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:528:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.360002] (kruisee_lidar) StderrLine: {'line': b'  528 |             std::is_same_v<T, ConstRefSharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.360074] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.360116] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:528:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.360159] (kruisee_lidar) StderrLine: {'line': b'  528 |             std::is_same_v<T, ConstRefSharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.360195] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.360231] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In lambda function:\n'}
[8.360266] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:510:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.360304] (kruisee_lidar) StderrLine: {'line': b'  510 |         if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefCallback>) {\n'}
[8.360340] (kruisee_lidar) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.360376] (kruisee_lidar) StderrLine: {'line': b'      |                                     \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.360412] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:510:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.360451] (kruisee_lidar) StderrLine: {'line': b'  510 |         if constexpr (is_ta && std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefCallback>) {\n'}
[8.360491] (kruisee_lidar) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.360528] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:510:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.360614] (kruisee_lidar) StderrLine: {'line': b'  510 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.360651] (kruisee_lidar) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.360688] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:510:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.360726] (kruisee_lidar) StderrLine: {'line': b'  510 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.360763] (kruisee_lidar) StderrLine: {'line': b'      |                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.360801] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:529:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.360839] (kruisee_lidar) StderrLine: {'line': b'  529 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrCallback>\n'}
[8.360874] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.360910] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.360946] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:529:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.361106] (kruisee_lidar) StderrLine: {'line': b'  529 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrCallback>\n'}
[8.361259] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.361304] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:529:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.361384] (kruisee_lidar) StderrLine: {'line': b'  529 |             std::is_same_v<T, SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[8.361419] (kruisee_lidar) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.361452] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:530:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.361487] (kruisee_lidar) StderrLine: {'line': b'  530 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[8.361521] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.361557] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:518:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.361610] (kruisee_lidar) StderrLine: {'line': b'  518 |         } else if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoCallback>) {  // NOLINT\n'}
[8.361645] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.361683] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.361770] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:518:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.361814] (kruisee_lidar) StderrLine: {'line': b'  518 |         } else if constexpr (is_ta && std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefWithInfoCallback>) {  // NOLINT\n'}
[8.361895] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.361931] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:518:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.361966] (kruisee_lidar) StderrLine: {'line': b'  518 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT\n'}
[8.362001] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.362037] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:518:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.362073] (kruisee_lidar) StderrLine: {'line': b'  518 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT\n'}
[8.362111] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.362148] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:535:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.362186] (kruisee_lidar) StderrLine: {'line': b'  535 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoCallback>||\n'}
[8.362223] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.362260] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.362297] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:535:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.362334] (kruisee_lidar) StderrLine: {'line': b'  535 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrWithInfoCallback>||\n'}
[8.362370] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.362406] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:535:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.362443] (kruisee_lidar) StderrLine: {'line': b'  535 |             std::is_same_v<T, SharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.362480] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.362516] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:535:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.362577] (kruisee_lidar) StderrLine: {'line': b'  535 |             std::is_same_v<T, SharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.362615] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.362651] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:521:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.362689] (kruisee_lidar) StderrLine: {'line': b'  521 |         } else if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrCallback>) {\n'}
[8.362727] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.362764] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.362871] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:521:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.362953] (kruisee_lidar) StderrLine: {'line': b'  521 |         } else if constexpr (is_ta && std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrCallback>) {\n'}
[8.362991] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.363028] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:521:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.363066] (kruisee_lidar) StderrLine: {'line': b'  521 |         } else if constexpr (is_ta && std::is_same_v<T, UniquePtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.363103] (kruisee_lidar) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.363140] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:521:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.363177] (kruisee_lidar) StderrLine: {'line': b'  521 |         } else if constexpr (is_ta && std::is_same_v<T, UniquePtrCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.363214] (kruisee_lidar) StderrLine: {'line': b'      |                                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.363251] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:536:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.363342] (kruisee_lidar) StderrLine: {'line': b'  536 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoCallback>||\n'}
[8.363379] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.363415] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.363452] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:536:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.363536] (kruisee_lidar) StderrLine: {'line': b'  536 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrWithInfoCallback>||\n'}
[8.363574] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.363611] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:536:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.363648] (kruisee_lidar) StderrLine: {'line': b'  536 |             std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.363684] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.363722] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:536:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.363759] (kruisee_lidar) StderrLine: {'line': b'  536 |             std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.363796] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.363832] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:523:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.363870] (kruisee_lidar) StderrLine: {'line': b'  523 |         } else if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoCallback>) {\n'}
[8.363907] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.363944] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.363980] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:523:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.364017] (kruisee_lidar) StderrLine: {'line': b'  523 |         } else if constexpr (is_ta && std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrWithInfoCallback>) {\n'}
[8.364054] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.364091] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:523:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.364128] (kruisee_lidar) StderrLine: {'line': b'  523 |         } else if constexpr (is_ta && std::is_same_v<T, UniquePtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.364165] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.364202] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:523:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.364287] (kruisee_lidar) StderrLine: {'line': b'  523 |         } else if constexpr (is_ta && std::is_same_v<T, UniquePtrWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.364455] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.364491] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:537:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.364527] (kruisee_lidar) StderrLine: {'line': b'  537 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoCallback>\n'}
[8.364562] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.364599] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.364636] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:537:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.364673] (kruisee_lidar) StderrLine: {'line': b'  537 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrWithInfoCallback>\n'}
[8.364710] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.364745] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:537:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.364782] (kruisee_lidar) StderrLine: {'line': b'  537 |             std::is_same_v<T, SharedPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[8.364818] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.364878] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:538:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.364917] (kruisee_lidar) StderrLine: {'line': b'  538 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[8.364953] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.364998] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:527:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.365036] (kruisee_lidar) StderrLine: {'line': b'  527 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrCallback>||\n'}
[8.365072] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.365109] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.365146] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:527:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.365183] (kruisee_lidar) StderrLine: {'line': b'  527 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrCallback>||\n'}
[8.365220] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.365256] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:527:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.365365] (kruisee_lidar) StderrLine: {'line': b'  527 |             std::is_same_v<T, SharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.365402] (kruisee_lidar) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.365438] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:527:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.365476] (kruisee_lidar) StderrLine: {'line': b'  527 |             std::is_same_v<T, SharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.365513] (kruisee_lidar) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.365717] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:543:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.365783] (kruisee_lidar) StderrLine: {'line': b'  543 |         else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefROSMessageCallback>) {  // NOLINT\n'}
[8.365819] (kruisee_lidar) StderrLine: {'line': b'      |                                 \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.365854] (kruisee_lidar) StderrLine: {'line': b'      |                                 \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.365890] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:543:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.365962] (kruisee_lidar) StderrLine: {'line': b'  543 |         else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefROSMessageCallback>) {  // NOLINT\n'}
[8.365998] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.366034] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:543:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.366070] (kruisee_lidar) StderrLine: {'line': b'  543 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT\n'}
[8.366104] (kruisee_lidar) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.366140] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:543:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.366174] (kruisee_lidar) StderrLine: {'line': b'  543 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT\n'}
[8.366209] (kruisee_lidar) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.366243] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:528:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.366316] (kruisee_lidar) StderrLine: {'line': b'  528 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrCallback>||\n'}
[8.366352] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.366423] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.366460] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:528:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.366495] (kruisee_lidar) StderrLine: {'line': b'  528 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrCallback>||\n'}
[8.366531] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.366566] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:528:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.366605] (kruisee_lidar) StderrLine: {'line': b'  528 |             std::is_same_v<T, ConstRefSharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.366640] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.366674] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:528:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.366709] (kruisee_lidar) StderrLine: {'line': b'  528 |             std::is_same_v<T, ConstRefSharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.366744] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.366779] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:545:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.366814] (kruisee_lidar) StderrLine: {'line': b'  545 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoROSMessageCallback>) {\n'}
[8.366868] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.366952] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.366988] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:545:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.367023] (kruisee_lidar) StderrLine: {'line': b'  545 |         } else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefWithInfoROSMessageCallback>) {\n'}
[8.367057] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.367092] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:545:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.367127] (kruisee_lidar) StderrLine: {'line': b'  545 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.367162] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.367198] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:545:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.367233] (kruisee_lidar) StderrLine: {'line': b'  545 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.367267] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.367303] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:529:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.367339] (kruisee_lidar) StderrLine: {'line': b'  529 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrCallback>\n'}
[8.367374] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.367489] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.367525] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:529:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.367561] (kruisee_lidar) StderrLine: {'line': b'  529 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrCallback>\n'}
[8.367598] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.367633] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:529:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.367669] (kruisee_lidar) StderrLine: {'line': b'  529 |             std::is_same_v<T, SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[8.367704] (kruisee_lidar) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.367738] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:530:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.367774] (kruisee_lidar) StderrLine: {'line': b'  530 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[8.367809] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.367844] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:547:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.367879] (kruisee_lidar) StderrLine: {'line': b'  547 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrROSMessageCallback>) {\n'}
[8.367950] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.368019] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.368054] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:547:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.368096] (kruisee_lidar) StderrLine: {'line': b'  547 |         } else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrROSMessageCallback>) {\n'}
[8.368131] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.368165] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:547:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.368199] (kruisee_lidar) StderrLine: {'line': b'  547 |         } else if constexpr (std::is_same_v<T, UniquePtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.368233] (kruisee_lidar) StderrLine: {'line': b'      |                                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.368268] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:547:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.368303] (kruisee_lidar) StderrLine: {'line': b'  547 |         } else if constexpr (std::is_same_v<T, UniquePtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.368337] (kruisee_lidar) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.368372] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:535:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.368407] (kruisee_lidar) StderrLine: {'line': b'  535 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoCallback>||\n'}
[8.368523] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.368559] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.368594] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:535:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.368630] (kruisee_lidar) StderrLine: {'line': b'  535 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrWithInfoCallback>||\n'}
[8.368664] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.368698] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:535:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.368735] (kruisee_lidar) StderrLine: {'line': b'  535 |             std::is_same_v<T, SharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.368770] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.368804] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:535:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.368840] (kruisee_lidar) StderrLine: {'line': b'  535 |             std::is_same_v<T, SharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.368876] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.368911] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:549:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.368969] (kruisee_lidar) StderrLine: {'line': b'  549 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoROSMessageCallback>) {\n'}
[8.369029] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.369105] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.369140] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:549:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.369175] (kruisee_lidar) StderrLine: {'line': b'  549 |         } else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrWithInfoROSMessageCallback>) {\n'}
[8.369211] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.369246] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:549:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.369281] (kruisee_lidar) StderrLine: {'line': b'  549 |         } else if constexpr (std::is_same_v<T, UniquePtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.369315] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.369350] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:549:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.369386] (kruisee_lidar) StderrLine: {'line': b'  549 |         } else if constexpr (std::is_same_v<T, UniquePtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.369421] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.369495] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:536:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.369531] (kruisee_lidar) StderrLine: {'line': b'  536 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoCallback>||\n'}
[8.369566] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.369604] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.369672] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:536:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.369709] (kruisee_lidar) StderrLine: {'line': b'  536 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrWithInfoCallback>||\n'}
[8.369746] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.369781] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:536:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.369815] (kruisee_lidar) StderrLine: {'line': b'  536 |             std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.369850] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.369885] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:536:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.369919] (kruisee_lidar) StderrLine: {'line': b'  536 |             std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.369991] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.370028] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:552:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.370066] (kruisee_lidar) StderrLine: {'line': b'  552 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrROSMessageCallback>||\n'}
[8.370101] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.370136] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.370210] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:552:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.370246] (kruisee_lidar) StderrLine: {'line': b'  552 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrROSMessageCallback>||\n'}
[8.370282] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.370317] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:552:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.370352] (kruisee_lidar) StderrLine: {'line': b'  552 |           std::is_same_v<T, SharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.370386] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.370422] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:552:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.370491] (kruisee_lidar) StderrLine: {'line': b'  552 |           std::is_same_v<T, SharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.370526] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.370563] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:537:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.370602] (kruisee_lidar) StderrLine: {'line': b'  537 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoCallback>\n'}
[8.370637] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.370671] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.370728] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:537:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.370785] (kruisee_lidar) StderrLine: {'line': b'  537 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrWithInfoCallback>\n'}
[8.370821] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.370855] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:537:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.370890] (kruisee_lidar) StderrLine: {'line': b'  537 |             std::is_same_v<T, SharedPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[8.370963] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.370999] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:538:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.371140] (kruisee_lidar) StderrLine: {'line': b'  538 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[8.371179] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.371214] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:553:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.371284] (kruisee_lidar) StderrLine: {'line': b'  553 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrROSMessageCallback>||\n'}
[8.371343] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.371378] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.371449] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:553:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.371486] (kruisee_lidar) StderrLine: {'line': b'  553 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrROSMessageCallback>||\n'}
[8.371522] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.371557] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:553:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.371593] (kruisee_lidar) StderrLine: {'line': b'  553 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.371628] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.371667] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:553:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.371702] (kruisee_lidar) StderrLine: {'line': b'  553 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.371737] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.371772] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:543:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.371845] (kruisee_lidar) StderrLine: {'line': b'  543 |         else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefROSMessageCallback>) {  // NOLINT\n'}
[8.371880] (kruisee_lidar) StderrLine: {'line': b'      |                                 \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.371914] (kruisee_lidar) StderrLine: {'line': b'      |                                 \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.371949] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:543:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.371984] (kruisee_lidar) StderrLine: {'line': b'  543 |         else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefROSMessageCallback>) {  // NOLINT\n'}
[8.372019] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.372052] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:543:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.372087] (kruisee_lidar) StderrLine: {'line': b'  543 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT\n'}
[8.372122] (kruisee_lidar) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.372159] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:543:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.372193] (kruisee_lidar) StderrLine: {'line': b'  543 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT\n'}
[8.372228] (kruisee_lidar) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.372263] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:554:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.372300] (kruisee_lidar) StderrLine: {'line': b'  554 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrROSMessageCallback>)\n'}
[8.372335] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.372372] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.372446] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:554:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.372487] (kruisee_lidar) StderrLine: {'line': b'  554 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrROSMessageCallback>)\n'}
[8.372524] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.372560] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:554:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.372637] (kruisee_lidar) StderrLine: {'line': b'  554 |           std::is_same_v<T, SharedPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.372672] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.372707] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:554:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.372742] (kruisee_lidar) StderrLine: {'line': b'  554 |           std::is_same_v<T, SharedPtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.372777] (kruisee_lidar) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.372811] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:545:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.372846] (kruisee_lidar) StderrLine: {'line': b'  545 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoROSMessageCallback>) {\n'}
[8.372881] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.372947] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.372991] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:545:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.373029] (kruisee_lidar) StderrLine: {'line': b'  545 |         } else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefWithInfoROSMessageCallback>) {\n'}
[8.373067] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.373104] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:545:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.373142] (kruisee_lidar) StderrLine: {'line': b'  545 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.373179] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.373216] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:545:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.373296] (kruisee_lidar) StderrLine: {'line': b'  545 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.373334] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.373373] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:558:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.373412] (kruisee_lidar) StderrLine: {'line': b'  558 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.373450] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.373488] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.373525] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:558:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.373562] (kruisee_lidar) StderrLine: {'line': b'  558 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.373635] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.373673] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:558:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.373710] (kruisee_lidar) StderrLine: {'line': b'  558 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.373747] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.373784] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:558:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.373821] (kruisee_lidar) StderrLine: {'line': b'  558 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.373858] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.373895] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:547:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.373934] (kruisee_lidar) StderrLine: {'line': b'  547 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrROSMessageCallback>) {\n'}
[8.374068] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.374107] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.374143] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:547:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.374179] (kruisee_lidar) StderrLine: {'line': b'  547 |         } else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrROSMessageCallback>) {\n'}
[8.374240] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.374277] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:547:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.374315] (kruisee_lidar) StderrLine: {'line': b'  547 |         } else if constexpr (std::is_same_v<T, UniquePtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.374391] (kruisee_lidar) StderrLine: {'line': b'      |                                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.374428] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:547:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.374464] (kruisee_lidar) StderrLine: {'line': b'  547 |         } else if constexpr (std::is_same_v<T, UniquePtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.374499] (kruisee_lidar) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.374578] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:559:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.374615] (kruisee_lidar) StderrLine: {'line': b'  559 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.374650] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.374685] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.374719] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:559:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.374790] (kruisee_lidar) StderrLine: {'line': b'  559 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.374828] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.374862] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:559:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.374897] (kruisee_lidar) StderrLine: {'line': b'  559 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.374932] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.374967] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:559:78:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.375002] (kruisee_lidar) StderrLine: {'line': b'  559 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.375038] (kruisee_lidar) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.375147] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:549:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.375186] (kruisee_lidar) StderrLine: {'line': b'  549 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoROSMessageCallback>) {\n'}
[8.375223] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.375259] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.375334] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:549:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.375371] (kruisee_lidar) StderrLine: {'line': b'  549 |         } else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrWithInfoROSMessageCallback>) {\n'}
[8.375407] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.375442] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:549:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.375477] (kruisee_lidar) StderrLine: {'line': b'  549 |         } else if constexpr (std::is_same_v<T, UniquePtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.375512] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.375548] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:549:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.375586] (kruisee_lidar) StderrLine: {'line': b'  549 |         } else if constexpr (std::is_same_v<T, UniquePtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.375622] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.375657] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:560:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.375695] (kruisee_lidar) StderrLine: {'line': b'  560 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoROSMessageCallback>)\n'}
[8.375730] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.375765] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.375850] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:560:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.375886] (kruisee_lidar) StderrLine: {'line': b'  560 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrWithInfoROSMessageCallback>)\n'}
[8.375923] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.375961] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:560:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.375996] (kruisee_lidar) StderrLine: {'line': b'  560 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.376031] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.376067] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:560:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.376102] (kruisee_lidar) StderrLine: {'line': b'  560 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.376137] (kruisee_lidar) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.376172] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:552:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.376207] (kruisee_lidar) StderrLine: {'line': b'  552 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrROSMessageCallback>||\n'}
[8.376246] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.376318] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.376356] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:552:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.376394] (kruisee_lidar) StderrLine: {'line': b'  552 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrROSMessageCallback>||\n'}
[8.376431] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.376468] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:552:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.376506] (kruisee_lidar) StderrLine: {'line': b'  552 |           std::is_same_v<T, SharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.376543] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.376580] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:552:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.376656] (kruisee_lidar) StderrLine: {'line': b'  552 |           std::is_same_v<T, SharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.376693] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.376729] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:566:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.376769] (kruisee_lidar) StderrLine: {'line': b'  566 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageCallback>||\n'}
[8.376807] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.376845] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.376882] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:566:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.376920] (kruisee_lidar) StderrLine: {'line': b'  566 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSerializedMessageCallback>||\n'}
[8.376964] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.377087] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:566:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.377125] (kruisee_lidar) StderrLine: {'line': b'  566 |           std::is_same_v<T, ConstRefSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.377166] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.377204] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:566:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.377240] (kruisee_lidar) StderrLine: {'line': b'  566 |           std::is_same_v<T, ConstRefSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.377276] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.377313] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:553:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.377352] (kruisee_lidar) StderrLine: {'line': b'  553 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrROSMessageCallback>||\n'}
[8.377390] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.377427] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.377464] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:567:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.377518] (kruisee_lidar) StderrLine: {'line': b'  567 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageWithInfoCallback>||\n'}
[8.377558] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.377596] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.377633] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:553:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.377671] (kruisee_lidar) StderrLine: {'line': b'  553 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrROSMessageCallback>||\n'}
[8.377736] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.377773] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:567:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.377811] (kruisee_lidar) StderrLine: {'line': b'  567 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSerializedMessageWithInfoCallback>||\n'}
[8.377849] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.377887] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:553:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.377926] (kruisee_lidar) StderrLine: {'line': b'  553 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.377965] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.378003] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:567:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.378041] (kruisee_lidar) StderrLine: {'line': b'  567 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.378079] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.378116] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:553:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.378303] (kruisee_lidar) StderrLine: {'line': b'  553 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.378342] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.378380] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:567:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.378419] (kruisee_lidar) StderrLine: {'line': b'  567 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.378456] (kruisee_lidar) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.378493] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:568:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.378531] (kruisee_lidar) StderrLine: {'line': b'  568 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageCallback>||\n'}
[8.378568] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.378605] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.378730] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:568:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.378862] (kruisee_lidar) StderrLine: {'line': b'  568 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrSerializedMessageCallback>||\n'}
[8.378900] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.378936] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:568:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.378973] (kruisee_lidar) StderrLine: {'line': b'  568 |           std::is_same_v<T, UniquePtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.379010] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.379047] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:568:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.379084] (kruisee_lidar) StderrLine: {'line': b'  568 |           std::is_same_v<T, UniquePtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.379121] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.379158] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:554:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.379196] (kruisee_lidar) StderrLine: {'line': b'  554 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrROSMessageCallback>)\n'}
[8.379232] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.379269] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.379306] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:554:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.379343] (kruisee_lidar) StderrLine: {'line': b'  554 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrROSMessageCallback>)\n'}
[8.379380] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.379416] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:554:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.379453] (kruisee_lidar) StderrLine: {'line': b'  554 |           std::is_same_v<T, SharedPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.379490] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.379526] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:554:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.379564] (kruisee_lidar) StderrLine: {'line': b'  554 |           std::is_same_v<T, SharedPtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.379600] (kruisee_lidar) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.379661] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:569:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.379699] (kruisee_lidar) StderrLine: {'line': b'  569 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageWithInfoCallback>||\n'}
[8.379736] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.379772] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.379811] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:569:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.379849] (kruisee_lidar) StderrLine: {'line': b'  569 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrSerializedMessageWithInfoCallback>||\n'}
[8.380052] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.380093] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:569:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.380131] (kruisee_lidar) StderrLine: {'line': b'  569 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.380169] (kruisee_lidar) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.380207] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:569:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.380245] (kruisee_lidar) StderrLine: {'line': b'  569 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.380328] (kruisee_lidar) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.380367] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:558:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.380404] (kruisee_lidar) StderrLine: {'line': b'  558 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.380466] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.380505] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.380543] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:558:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.380581] (kruisee_lidar) StderrLine: {'line': b'  558 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.380619] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.380656] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:558:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.380727] (kruisee_lidar) StderrLine: {'line': b'  558 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.380766] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.380804] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:558:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.380844] (kruisee_lidar) StderrLine: {'line': b'  558 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.380882] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.380920] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:570:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.380964] (kruisee_lidar) StderrLine: {'line': b'  570 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageCallback>||\n'}
[8.381089] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.381128] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.381193] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:570:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.381231] (kruisee_lidar) StderrLine: {'line': b'  570 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrSerializedMessageCallback>||\n'}
[8.381269] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.381304] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:570:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.381340] (kruisee_lidar) StderrLine: {'line': b'  570 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.381375] (kruisee_lidar) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.381409] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:570:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.381445] (kruisee_lidar) StderrLine: {'line': b'  570 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.381480] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.381515] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:559:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.381554] (kruisee_lidar) StderrLine: {'line': b'  559 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.381614] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.381694] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.381729] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:559:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.381766] (kruisee_lidar) StderrLine: {'line': b'  559 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.381805] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.381840] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:559:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.381875] (kruisee_lidar) StderrLine: {'line': b'  559 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.381911] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.381946] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:559:78:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.381983] (kruisee_lidar) StderrLine: {'line': b'  559 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.382018] (kruisee_lidar) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.382055] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:571:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.382093] (kruisee_lidar) StderrLine: {'line': b'  571 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.382154] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.382236] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.382273] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:571:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.382310] (kruisee_lidar) StderrLine: {'line': b'  571 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.382347] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.382383] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:571:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.382419] (kruisee_lidar) StderrLine: {'line': b'  571 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.382455] (kruisee_lidar) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.382492] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:571:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.382527] (kruisee_lidar) StderrLine: {'line': b'  571 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.382562] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.382596] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:560:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.382691] (kruisee_lidar) StderrLine: {'line': b'  560 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoROSMessageCallback>)\n'}
[8.382749] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.382786] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.382821] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:560:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.382856] (kruisee_lidar) StderrLine: {'line': b'  560 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrWithInfoROSMessageCallback>)\n'}
[8.382891] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.382926] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:560:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.382960] (kruisee_lidar) StderrLine: {'line': b'  560 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.382995] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.383030] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:560:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.383067] (kruisee_lidar) StderrLine: {'line': b'  560 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.383158] (kruisee_lidar) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.383196] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:572:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.383269] (kruisee_lidar) StderrLine: {'line': b'  572 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[8.383306] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.383341] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.383379] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:572:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.383415] (kruisee_lidar) StderrLine: {'line': b'  572 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[8.383449] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.383482] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:572:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.383517] (kruisee_lidar) StderrLine: {'line': b'  572 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.383554] (kruisee_lidar) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.383588] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:572:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.383661] (kruisee_lidar) StderrLine: {'line': b'  572 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.383697] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.383733] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:566:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.383770] (kruisee_lidar) StderrLine: {'line': b'  566 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageCallback>||\n'}
[8.383807] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.383921] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.383957] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:566:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.383993] (kruisee_lidar) StderrLine: {'line': b'  566 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSerializedMessageCallback>||\n'}
[8.384028] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.384062] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:566:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.384141] (kruisee_lidar) StderrLine: {'line': b'  566 |           std::is_same_v<T, ConstRefSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.384178] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.384214] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:566:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.384250] (kruisee_lidar) StderrLine: {'line': b'  566 |           std::is_same_v<T, ConstRefSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.384294] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.384344] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:573:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.384425] (kruisee_lidar) StderrLine: {'line': b'  573 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.384461] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.384496] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.384530] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:573:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.384566] (kruisee_lidar) StderrLine: {'line': b'  573 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.384645] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.384682] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:573:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.384720] (kruisee_lidar) StderrLine: {'line': b'  573 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.384755] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.384789] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:573:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.384824] (kruisee_lidar) StderrLine: {'line': b'  573 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.384858] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.384895] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:567:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.384975] (kruisee_lidar) StderrLine: {'line': b'  567 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageWithInfoCallback>||\n'}
[8.385012] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.385047] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.385082] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:567:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.385160] (kruisee_lidar) StderrLine: {'line': b'  567 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSerializedMessageWithInfoCallback>||\n'}
[8.385198] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.385233] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:567:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.385268] (kruisee_lidar) StderrLine: {'line': b'  567 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.385302] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.385337] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:567:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.385372] (kruisee_lidar) StderrLine: {'line': b'  567 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.385406] (kruisee_lidar) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.385440] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:574:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.385477] (kruisee_lidar) StderrLine: {'line': b'  574 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageCallback>||\n'}
[8.385544] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.385581] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.385656] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:574:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.385692] (kruisee_lidar) StderrLine: {'line': b'  574 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrSerializedMessageCallback>||\n'}
[8.385727] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.385762] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:574:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.385797] (kruisee_lidar) StderrLine: {'line': b'  574 |           std::is_same_v<T, SharedPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.385832] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.385866] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:574:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.385901] (kruisee_lidar) StderrLine: {'line': b'  574 |           std::is_same_v<T, SharedPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.385936] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.385970] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:568:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.386011] (kruisee_lidar) StderrLine: {'line': b'  568 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageCallback>||\n'}
[8.386091] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.386154] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.386189] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:568:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.386227] (kruisee_lidar) StderrLine: {'line': b'  568 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrSerializedMessageCallback>||\n'}
[8.386262] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.386296] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:568:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.386331] (kruisee_lidar) StderrLine: {'line': b'  568 |           std::is_same_v<T, UniquePtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.386366] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.386401] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:568:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.386435] (kruisee_lidar) StderrLine: {'line': b'  568 |           std::is_same_v<T, UniquePtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.386468] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.386503] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:575:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.386539] (kruisee_lidar) StderrLine: {'line': b'  575 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageWithInfoCallback>)\n'}
[8.386576] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.386637] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.386704] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:575:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.386741] (kruisee_lidar) StderrLine: {'line': b'  575 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrSerializedMessageWithInfoCallback>)\n'}
[8.386779] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.386814] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:575:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.386849] (kruisee_lidar) StderrLine: {'line': b'  575 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.386886] (kruisee_lidar) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.386921] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:575:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.386956] (kruisee_lidar) StderrLine: {'line': b'  575 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.386991] (kruisee_lidar) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.387025] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:569:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.387148] (kruisee_lidar) StderrLine: {'line': b'  569 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageWithInfoCallback>||\n'}
[8.387184] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.387219] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.387253] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:569:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.387287] (kruisee_lidar) StderrLine: {'line': b'  569 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrSerializedMessageWithInfoCallback>||\n'}
[8.387322] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.387357] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:569:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.387393] (kruisee_lidar) StderrLine: {'line': b'  569 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.387428] (kruisee_lidar) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.387461] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:569:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.387496] (kruisee_lidar) StderrLine: {'line': b'  569 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.387531] (kruisee_lidar) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.387565] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:570:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.387634] (kruisee_lidar) StderrLine: {'line': b'  570 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageCallback>||\n'}
[8.387671] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.387740] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.387775] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:570:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.387811] (kruisee_lidar) StderrLine: {'line': b'  570 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrSerializedMessageCallback>||\n'}
[8.387845] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.387881] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:570:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.387915] (kruisee_lidar) StderrLine: {'line': b'  570 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.387950] (kruisee_lidar) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.387985] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:570:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.388020] (kruisee_lidar) StderrLine: {'line': b'  570 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.388087] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.388126] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:571:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.388250] (kruisee_lidar) StderrLine: {'line': b'  571 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.388289] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.388328] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.388364] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:571:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.388400] (kruisee_lidar) StderrLine: {'line': b'  571 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.388434] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.388468] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:571:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.388503] (kruisee_lidar) StderrLine: {'line': b'  571 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.388538] (kruisee_lidar) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.388572] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:571:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.388653] (kruisee_lidar) StderrLine: {'line': b'  571 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.388690] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.388725] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::dispatch(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.388817] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:604:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.388854] (kruisee_lidar) StderrLine: {'line': b'  604 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[8.388890] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.388925] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:604:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.388966] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:572:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.389005] (kruisee_lidar) StderrLine: {'line': b'  572 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[8.389040] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.389075] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.389109] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:572:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.389149] (kruisee_lidar) StderrLine: {'line': b'  572 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[8.389184] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.389219] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:572:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.389253] (kruisee_lidar) StderrLine: {'line': b'  572 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.389288] (kruisee_lidar) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.389325] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:572:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.389395] (kruisee_lidar) StderrLine: {'line': b'  572 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.389433] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.389508] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In lambda function:\n'}
[8.389544] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:609:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.389582] (kruisee_lidar) StderrLine: {'line': b'  609 |         if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageCallback>) {\n'}
[8.389617] (kruisee_lidar) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.389651] (kruisee_lidar) StderrLine: {'line': b'      |                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.389685] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:609:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.389720] (kruisee_lidar) StderrLine: {'line': b'  609 |         if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSerializedMessageCallback>) {\n'}
[8.389754] (kruisee_lidar) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.389788] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:609:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.389824] (kruisee_lidar) StderrLine: {'line': b'  609 |         if constexpr (std::is_same_v<T, ConstRefSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.389859] (kruisee_lidar) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.389936] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:609:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.389972] (kruisee_lidar) StderrLine: {'line': b'  609 |         if constexpr (std::is_same_v<T, ConstRefSerializedMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.390046] (kruisee_lidar) StderrLine: {'line': b'      |                                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.390082] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:573:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.390120] (kruisee_lidar) StderrLine: {'line': b'  573 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.390155] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.390190] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.390224] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:573:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.390258] (kruisee_lidar) StderrLine: {'line': b'  573 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.390294] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.390328] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:573:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.390362] (kruisee_lidar) StderrLine: {'line': b'  573 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.390396] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.390432] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:573:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.390535] (kruisee_lidar) StderrLine: {'line': b'  573 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.390574] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.390609] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:611:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.390645] (kruisee_lidar) StderrLine: {'line': b'  611 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageWithInfoCallback>) {\n'}
[8.390680] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.390716] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.390751] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:611:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.390787] (kruisee_lidar) StderrLine: {'line': b'  611 |         } else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSerializedMessageWithInfoCallback>) {\n'}
[8.390822] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.390858] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:611:89:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.390893] (kruisee_lidar) StderrLine: {'line': b'  611 |         } else if constexpr (std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.390930] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.390965] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:611:90:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.391062] (kruisee_lidar) StderrLine: {'line': b'  611 |         } else if constexpr (std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.391100] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.391136] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:574:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.391173] (kruisee_lidar) StderrLine: {'line': b'  574 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageCallback>||\n'}
[8.391208] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.391244] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.391278] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:574:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.391314] (kruisee_lidar) StderrLine: {'line': b'  574 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrSerializedMessageCallback>||\n'}
[8.391350] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.391385] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:574:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.391420] (kruisee_lidar) StderrLine: {'line': b'  574 |           std::is_same_v<T, SharedPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.391455] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.391490] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:574:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.391589] (kruisee_lidar) StderrLine: {'line': b'  574 |           std::is_same_v<T, SharedPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.391626] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.391660] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:613:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.391696] (kruisee_lidar) StderrLine: {'line': b'  613 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageCallback>) {\n'}
[8.391731] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.391766] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.391802] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:613:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.391838] (kruisee_lidar) StderrLine: {'line': b'  613 |         } else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrSerializedMessageCallback>) {\n'}
[8.391873] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.391912] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:613:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.391947] (kruisee_lidar) StderrLine: {'line': b'  613 |         } else if constexpr (std::is_same_v<T, UniquePtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.391982] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.392016] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:613:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.392073] (kruisee_lidar) StderrLine: {'line': b'  613 |         } else if constexpr (std::is_same_v<T, UniquePtrSerializedMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.392154] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.392190] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:575:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.392226] (kruisee_lidar) StderrLine: {'line': b'  575 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageWithInfoCallback>)\n'}
[8.392262] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.392298] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.392336] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:575:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.392373] (kruisee_lidar) StderrLine: {'line': b'  575 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrSerializedMessageWithInfoCallback>)\n'}
[8.392408] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.392443] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:575:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.392479] (kruisee_lidar) StderrLine: {'line': b'  575 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.392514] (kruisee_lidar) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.392597] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:575:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.392668] (kruisee_lidar) StderrLine: {'line': b'  575 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.392705] (kruisee_lidar) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.392742] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:615:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.392782] (kruisee_lidar) StderrLine: {'line': b'  615 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageWithInfoCallback>) {\n'}
[8.392818] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.392853] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.392889] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:615:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.392927] (kruisee_lidar) StderrLine: {'line': b'  615 |         } else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrSerializedMessageWithInfoCallback>) {\n'}
[8.392975] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.393019] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:615:90:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.393091] (kruisee_lidar) StderrLine: {'line': b'  615 |         } else if constexpr (std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.393127] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.393198] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:615:91:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.393236] (kruisee_lidar) StderrLine: {'line': b'  615 |         } else if constexpr (std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.393271] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.393306] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:620:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.393345] (kruisee_lidar) StderrLine: {'line': b'  620 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageCallback>||\n'}
[8.393385] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.393421] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.393457] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:620:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.393492] (kruisee_lidar) StderrLine: {'line': b'  620 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrSerializedMessageCallback>||\n'}
[8.393527] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.393597] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:620:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.393635] (kruisee_lidar) StderrLine: {'line': b'  620 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.393670] (kruisee_lidar) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.393742] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:620:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.393778] (kruisee_lidar) StderrLine: {'line': b'  620 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.393816] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.393852] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:621:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.393913] (kruisee_lidar) StderrLine: {'line': b'  621 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[8.393949] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.393984] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.394040] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:621:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.394104] (kruisee_lidar) StderrLine: {'line': b'  621 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[8.394141] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.394177] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:621:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.394213] (kruisee_lidar) StderrLine: {'line': b'  621 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.394256] (kruisee_lidar) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.394303] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:621:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.394341] (kruisee_lidar) StderrLine: {'line': b'  621 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.394377] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.394424] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:622:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.394464] (kruisee_lidar) StderrLine: {'line': b'  622 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageCallback>)\n'}
[8.394500] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.394608] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.394645] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:622:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.394680] (kruisee_lidar) StderrLine: {'line': b'  622 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrSerializedMessageCallback>)\n'}
[8.394715] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.394749] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::dispatch(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.394785] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:604:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.394820] (kruisee_lidar) StderrLine: {'line': b'  604 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[8.394857] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.394892] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:622:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.394927] (kruisee_lidar) StderrLine: {'line': b'  622 |           std::is_same_v<T, SharedPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.394962] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.394996] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:604:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.395032] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:622:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.395067] (kruisee_lidar) StderrLine: {'line': b'  622 |           std::is_same_v<T, SharedPtrSerializedMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.395141] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.395216] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:626:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.395254] (kruisee_lidar) StderrLine: {'line': b'  626 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.395292] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.395327] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.395364] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:626:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.395400] (kruisee_lidar) StderrLine: {'line': b'  626 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.395438] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.395473] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:626:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.395510] (kruisee_lidar) StderrLine: {'line': b'  626 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.395546] (kruisee_lidar) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.395581] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:626:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.395617] (kruisee_lidar) StderrLine: {'line': b'  626 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.395689] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.395760] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In lambda function:\n'}
[8.395795] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:609:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.395831] (kruisee_lidar) StderrLine: {'line': b'  609 |         if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageCallback>) {\n'}
[8.395866] (kruisee_lidar) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.395900] (kruisee_lidar) StderrLine: {'line': b'      |                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.395934] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:609:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.395970] (kruisee_lidar) StderrLine: {'line': b'  609 |         if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSerializedMessageCallback>) {\n'}
[8.396004] (kruisee_lidar) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.396039] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:609:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.396074] (kruisee_lidar) StderrLine: {'line': b'  609 |         if constexpr (std::is_same_v<T, ConstRefSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.396109] (kruisee_lidar) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.396147] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:609:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.396219] (kruisee_lidar) StderrLine: {'line': b'  609 |         if constexpr (std::is_same_v<T, ConstRefSerializedMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.396268] (kruisee_lidar) StderrLine: {'line': b'      |                                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.396333] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:627:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.396370] (kruisee_lidar) StderrLine: {'line': b'  627 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.396406] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.396441] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.396475] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:627:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.396511] (kruisee_lidar) StderrLine: {'line': b'  627 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.396546] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.396579] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:627:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.396614] (kruisee_lidar) StderrLine: {'line': b'  627 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.396648] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.396722] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:627:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.396760] (kruisee_lidar) StderrLine: {'line': b'  627 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.396795] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.396875] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:611:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.396912] (kruisee_lidar) StderrLine: {'line': b'  611 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageWithInfoCallback>) {\n'}
[8.396946] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.396988] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.397024] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:611:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.397059] (kruisee_lidar) StderrLine: {'line': b'  611 |         } else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSerializedMessageWithInfoCallback>) {\n'}
[8.397094] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.397128] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:611:89:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.397163] (kruisee_lidar) StderrLine: {'line': b'  611 |         } else if constexpr (std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.397237] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.397274] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:611:90:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.397309] (kruisee_lidar) StderrLine: {'line': b'  611 |         } else if constexpr (std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.397345] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.397415] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:628:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.397453] (kruisee_lidar) StderrLine: {'line': b'  628 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageWithInfoCallback>)\n'}
[8.397489] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.397524] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.397559] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:628:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.397595] (kruisee_lidar) StderrLine: {'line': b'  628 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrSerializedMessageWithInfoCallback>)\n'}
[8.397630] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.397665] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:628:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.397703] (kruisee_lidar) StderrLine: {'line': b'  628 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.397773] (kruisee_lidar) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.397852] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:628:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.397891] (kruisee_lidar) StderrLine: {'line': b'  628 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.397964] (kruisee_lidar) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.398001] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:613:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.398037] (kruisee_lidar) StderrLine: {'line': b'  613 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageCallback>) {\n'}
[8.398074] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.398110] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.398144] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:613:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.398180] (kruisee_lidar) StderrLine: {'line': b'  613 |         } else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrSerializedMessageCallback>) {\n'}
[8.398255] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.398291] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:613:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.398326] (kruisee_lidar) StderrLine: {'line': b'  613 |         } else if constexpr (std::is_same_v<T, UniquePtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.398360] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.398396] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:613:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.398434] (kruisee_lidar) StderrLine: {'line': b'  613 |         } else if constexpr (std::is_same_v<T, UniquePtrSerializedMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.398508] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.398543] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:636:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.398579] (kruisee_lidar) StderrLine: {'line': b'  636 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefCallback>||\n'}
[8.398614] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.398649] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.398684] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:636:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.398743] (kruisee_lidar) StderrLine: {'line': b'  636 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefCallback>||\n'}
[8.398802] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.398837] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:636:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.398874] (kruisee_lidar) StderrLine: {'line': b'  636 |           std::is_same_v<T, ConstRefCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.398909] (kruisee_lidar) StderrLine: {'line': b'      |                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.398943] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:636:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.398979] (kruisee_lidar) StderrLine: {'line': b'  636 |           std::is_same_v<T, ConstRefCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.399013] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.399105] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:615:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.399142] (kruisee_lidar) StderrLine: {'line': b'  615 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageWithInfoCallback>) {\n'}
[8.399177] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.399234] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.399292] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:615:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.399328] (kruisee_lidar) StderrLine: {'line': b'  615 |         } else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrSerializedMessageWithInfoCallback>) {\n'}
[8.399364] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.399398] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:615:90:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.399433] (kruisee_lidar) StderrLine: {'line': b'  615 |         } else if constexpr (std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.399469] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.399504] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:615:91:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.399539] (kruisee_lidar) StderrLine: {'line': b'  615 |         } else if constexpr (std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.399574] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.399656] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:637:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.399693] (kruisee_lidar) StderrLine: {'line': b'  637 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefROSMessageCallback>||\n'}
[8.399749] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.399805] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.399840] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:637:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.399876] (kruisee_lidar) StderrLine: {'line': b'  637 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefROSMessageCallback>||\n'}
[8.399911] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.399946] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:637:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.399981] (kruisee_lidar) StderrLine: {'line': b'  637 |           std::is_same_v<T, ConstRefROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.400016] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.400050] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:637:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.400085] (kruisee_lidar) StderrLine: {'line': b'  637 |           std::is_same_v<T, ConstRefROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.400120] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.400155] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:620:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.400271] (kruisee_lidar) StderrLine: {'line': b'  620 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageCallback>||\n'}
[8.400307] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.400342] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.400376] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:620:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.400411] (kruisee_lidar) StderrLine: {'line': b'  620 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrSerializedMessageCallback>||\n'}
[8.400445] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.400479] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:620:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.400517] (kruisee_lidar) StderrLine: {'line': b'  620 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.400551] (kruisee_lidar) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.400585] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:620:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.400620] (kruisee_lidar) StderrLine: {'line': b'  620 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.400655] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.400691] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:638:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.400726] (kruisee_lidar) StderrLine: {'line': b'  638 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoCallback>||\n'}
[8.400782] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.400865] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.400902] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:638:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.400939] (kruisee_lidar) StderrLine: {'line': b'  638 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefWithInfoCallback>||\n'}
[8.400987] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.401024] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:638:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.401059] (kruisee_lidar) StderrLine: {'line': b'  638 |           std::is_same_v<T, ConstRefWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.401094] (kruisee_lidar) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.401129] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:638:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.401167] (kruisee_lidar) StderrLine: {'line': b'  638 |           std::is_same_v<T, ConstRefWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.401200] (kruisee_lidar) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.401234] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:621:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.401310] (kruisee_lidar) StderrLine: {'line': b'  621 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[8.401382] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.401418] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.401456] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:621:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.401506] (kruisee_lidar) StderrLine: {'line': b'  621 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[8.401542] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.401578] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:621:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.401614] (kruisee_lidar) StderrLine: {'line': b'  621 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.401660] (kruisee_lidar) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.401696] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:621:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.401731] (kruisee_lidar) StderrLine: {'line': b'  621 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.401809] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.401846] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:639:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.401896] (kruisee_lidar) StderrLine: {'line': b'  639 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoROSMessageCallback>||\n'}
[8.401962] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.401999] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.402034] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:639:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.402070] (kruisee_lidar) StderrLine: {'line': b'  639 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefWithInfoROSMessageCallback>||\n'}
[8.402105] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.402140] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:639:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.402177] (kruisee_lidar) StderrLine: {'line': b'  639 |           std::is_same_v<T, ConstRefWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.402212] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.402248] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:639:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.402323] (kruisee_lidar) StderrLine: {'line': b'  639 |           std::is_same_v<T, ConstRefWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.402358] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.402393] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:622:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.402428] (kruisee_lidar) StderrLine: {'line': b'  622 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageCallback>)\n'}
[8.402493] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.402542] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.402576] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:622:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.402612] (kruisee_lidar) StderrLine: {'line': b'  622 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrSerializedMessageCallback>)\n'}
[8.402647] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.402682] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:622:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.402720] (kruisee_lidar) StderrLine: {'line': b'  622 |           std::is_same_v<T, SharedPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.402774] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.402832] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:622:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.402868] (kruisee_lidar) StderrLine: {'line': b'  622 |           std::is_same_v<T, SharedPtrSerializedMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.402903] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.402937] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:640:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.402973] (kruisee_lidar) StderrLine: {'line': b'  640 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrCallback>||\n'}
[8.403007] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.403078] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.403114] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:640:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.403152] (kruisee_lidar) StderrLine: {'line': b'  640 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrCallback>||\n'}
[8.403187] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.403222] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:640:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.403291] (kruisee_lidar) StderrLine: {'line': b'  640 |           std::is_same_v<T, UniquePtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.403326] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.403360] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:640:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.403396] (kruisee_lidar) StderrLine: {'line': b'  640 |           std::is_same_v<T, UniquePtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.403430] (kruisee_lidar) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.403465] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:626:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.403505] (kruisee_lidar) StderrLine: {'line': b'  626 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.403541] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.403576] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.403611] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:641:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.403685] (kruisee_lidar) StderrLine: {'line': b'  641 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrROSMessageCallback>||\n'}
[8.403721] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.403800] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.403836] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:626:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.403874] (kruisee_lidar) StderrLine: {'line': b'  626 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.403910] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.403945] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:641:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.403980] (kruisee_lidar) StderrLine: {'line': b'  641 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrROSMessageCallback>||\n'}
[8.404015] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.404050] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:626:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.404087] (kruisee_lidar) StderrLine: {'line': b'  626 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.404122] (kruisee_lidar) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.404158] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:641:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.404270] (kruisee_lidar) StderrLine: {'line': b'  641 |           std::is_same_v<T, UniquePtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.404308] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.404347] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:641:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.404383] (kruisee_lidar) StderrLine: {'line': b'  641 |           std::is_same_v<T, UniquePtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.404419] (kruisee_lidar) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.404454] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:626:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.404516] (kruisee_lidar) StderrLine: {'line': b'  626 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.404552] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.404588] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:642:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.404625] (kruisee_lidar) StderrLine: {'line': b'  642 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoCallback>||\n'}
[8.404660] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.404696] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.404731] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:642:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.404811] (kruisee_lidar) StderrLine: {'line': b'  642 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrWithInfoCallback>||\n'}
[8.404848] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.404884] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:642:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.404919] (kruisee_lidar) StderrLine: {'line': b'  642 |           std::is_same_v<T, UniquePtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.404962] (kruisee_lidar) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.404999] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:642:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.405035] (kruisee_lidar) StderrLine: {'line': b'  642 |           std::is_same_v<T, UniquePtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.405070] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.405105] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:627:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.405182] (kruisee_lidar) StderrLine: {'line': b'  627 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.405219] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.405254] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.405289] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:627:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.405338] (kruisee_lidar) StderrLine: {'line': b'  627 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.405401] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.405437] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:627:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.405473] (kruisee_lidar) StderrLine: {'line': b'  627 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.405508] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.405542] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:627:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.405578] (kruisee_lidar) StderrLine: {'line': b'  627 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.405612] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.405648] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:643:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.405719] (kruisee_lidar) StderrLine: {'line': b'  643 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoROSMessageCallback>||\n'}
[8.405755] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.405797] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.405834] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:643:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.405883] (kruisee_lidar) StderrLine: {'line': b'  643 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrWithInfoROSMessageCallback>||\n'}
[8.405946] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.405982] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:643:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.406019] (kruisee_lidar) StderrLine: {'line': b'  643 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.406054] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.406089] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:643:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.406124] (kruisee_lidar) StderrLine: {'line': b'  643 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.406159] (kruisee_lidar) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.406237] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:628:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.406275] (kruisee_lidar) StderrLine: {'line': b'  628 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageWithInfoCallback>)\n'}
[8.406310] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.406345] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.406379] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:628:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.406415] (kruisee_lidar) StderrLine: {'line': b'  628 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrSerializedMessageWithInfoCallback>)\n'}
[8.406489] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.406525] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:628:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.406561] (kruisee_lidar) StderrLine: {'line': b'  628 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.406598] (kruisee_lidar) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.406634] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:628:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.406671] (kruisee_lidar) StderrLine: {'line': b'  628 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.406746] (kruisee_lidar) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.406782] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:644:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.406818] (kruisee_lidar) StderrLine: {'line': b'  644 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrCallback>||\n'}
[8.406855] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.406890] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.406925] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:644:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.406962] (kruisee_lidar) StderrLine: {'line': b'  644 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrCallback>||\n'}
[8.407050] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.407085] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:644:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.407120] (kruisee_lidar) StderrLine: {'line': b'  644 |           std::is_same_v<T, SharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.407155] (kruisee_lidar) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.407190] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:644:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.407264] (kruisee_lidar) StderrLine: {'line': b'  644 |           std::is_same_v<T, SharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.407300] (kruisee_lidar) StderrLine: {'line': b'      |                                                    \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.407336] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:636:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.407375] (kruisee_lidar) StderrLine: {'line': b'  636 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefCallback>||\n'}
[8.407410] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.407444] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.407478] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:636:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.407513] (kruisee_lidar) StderrLine: {'line': b'  636 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefCallback>||\n'}
[8.407582] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.407620] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:636:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.407656] (kruisee_lidar) StderrLine: {'line': b'  636 |           std::is_same_v<T, ConstRefCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.407690] (kruisee_lidar) StderrLine: {'line': b'      |                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.407762] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:636:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.407798] (kruisee_lidar) StderrLine: {'line': b'  636 |           std::is_same_v<T, ConstRefCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.407833] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.407868] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:645:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.407904] (kruisee_lidar) StderrLine: {'line': b'  645 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrROSMessageCallback>||\n'}
[8.407939] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.407975] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.408010] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:645:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.408048] (kruisee_lidar) StderrLine: {'line': b'  645 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrROSMessageCallback>||\n'}
[8.408086] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.408158] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:645:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.408194] (kruisee_lidar) StderrLine: {'line': b'  645 |           std::is_same_v<T, SharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.408262] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.408298] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:645:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.408333] (kruisee_lidar) StderrLine: {'line': b'  645 |           std::is_same_v<T, SharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.408368] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.408403] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:637:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.408443] (kruisee_lidar) StderrLine: {'line': b'  637 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefROSMessageCallback>||\n'}
[8.408479] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.408514] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.408553] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:637:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.408589] (kruisee_lidar) StderrLine: {'line': b'  637 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefROSMessageCallback>||\n'}
[8.408624] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.408718] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:637:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.408802] (kruisee_lidar) StderrLine: {'line': b'  637 |           std::is_same_v<T, ConstRefROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.408841] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.408878] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:637:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.408914] (kruisee_lidar) StderrLine: {'line': b'  637 |           std::is_same_v<T, ConstRefROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.408949] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.408994] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:646:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.409031] (kruisee_lidar) StderrLine: {'line': b'  646 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoCallback>||\n'}
[8.409066] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.409101] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.409137] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:646:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.409208] (kruisee_lidar) StderrLine: {'line': b'  646 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrWithInfoCallback>||\n'}
[8.409280] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.409317] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:646:59:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.409353] (kruisee_lidar) StderrLine: {'line': b'  646 |           std::is_same_v<T, SharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.409389] (kruisee_lidar) StderrLine: {'line': b'      |                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.409424] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:646:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.409461] (kruisee_lidar) StderrLine: {'line': b'  646 |           std::is_same_v<T, SharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.409496] (kruisee_lidar) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.409531] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:638:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.409568] (kruisee_lidar) StderrLine: {'line': b'  638 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoCallback>||\n'}
[8.409610] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.409645] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.409679] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:638:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.409714] (kruisee_lidar) StderrLine: {'line': b'  638 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefWithInfoCallback>||\n'}
[8.409824] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.409860] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:638:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.409896] (kruisee_lidar) StderrLine: {'line': b'  638 |           std::is_same_v<T, ConstRefWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.409931] (kruisee_lidar) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.409965] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:638:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.410000] (kruisee_lidar) StderrLine: {'line': b'  638 |           std::is_same_v<T, ConstRefWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.410035] (kruisee_lidar) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.410069] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:647:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.410108] (kruisee_lidar) StderrLine: {'line': b'  647 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.410144] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.410179] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.410214] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:647:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.410278] (kruisee_lidar) StderrLine: {'line': b'  647 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.410359] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.410395] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:647:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.410432] (kruisee_lidar) StderrLine: {'line': b'  647 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.410468] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.410503] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:647:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.410541] (kruisee_lidar) StderrLine: {'line': b'  647 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.410576] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.410610] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:639:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.410646] (kruisee_lidar) StderrLine: {'line': b'  639 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoROSMessageCallback>||\n'}
[8.410681] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.410715] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.410749] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:639:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.410784] (kruisee_lidar) StderrLine: {'line': b'  639 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefWithInfoROSMessageCallback>||\n'}
[8.410836] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.410922] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:639:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.410958] (kruisee_lidar) StderrLine: {'line': b'  639 |           std::is_same_v<T, ConstRefWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.410996] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.411032] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:639:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.411068] (kruisee_lidar) StderrLine: {'line': b'  639 |           std::is_same_v<T, ConstRefWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.411125] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.411161] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:648:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.411200] (kruisee_lidar) StderrLine: {'line': b'  648 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrCallback>||\n'}
[8.411235] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.411269] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.411304] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:648:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.411383] (kruisee_lidar) StderrLine: {'line': b'  648 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrCallback>||\n'}
[8.411418] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.411453] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:648:59:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.411488] (kruisee_lidar) StderrLine: {'line': b'  648 |           std::is_same_v<T, ConstRefSharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.411523] (kruisee_lidar) StderrLine: {'line': b'      |                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.411558] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:648:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.411594] (kruisee_lidar) StderrLine: {'line': b'  648 |           std::is_same_v<T, ConstRefSharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.411628] (kruisee_lidar) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.411663] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:640:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.411699] (kruisee_lidar) StderrLine: {'line': b'  640 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrCallback>||\n'}
[8.411734] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.411768] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.411821] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:640:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.411938] (kruisee_lidar) StderrLine: {'line': b'  640 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrCallback>||\n'}
[8.411974] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.412010] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:640:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.412045] (kruisee_lidar) StderrLine: {'line': b'  640 |           std::is_same_v<T, UniquePtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.412082] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.412118] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:640:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.412153] (kruisee_lidar) StderrLine: {'line': b'  640 |           std::is_same_v<T, UniquePtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.412188] (kruisee_lidar) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.412223] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:649:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.412259] (kruisee_lidar) StderrLine: {'line': b'  649 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrROSMessageCallback>||\n'}
[8.412294] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.412329] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.412443] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:649:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.412482] (kruisee_lidar) StderrLine: {'line': b'  649 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrROSMessageCallback>||\n'}
[8.412517] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.412552] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:649:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.412588] (kruisee_lidar) StderrLine: {'line': b'  649 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.412622] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.412657] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:649:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.412692] (kruisee_lidar) StderrLine: {'line': b'  649 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.412727] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.412762] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:641:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.412799] (kruisee_lidar) StderrLine: {'line': b'  641 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrROSMessageCallback>||\n'}
[8.412833] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.412909] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.413036] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:641:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.413095] (kruisee_lidar) StderrLine: {'line': b'  641 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrROSMessageCallback>||\n'}
[8.413133] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.413169] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:641:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.413205] (kruisee_lidar) StderrLine: {'line': b'  641 |           std::is_same_v<T, UniquePtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.413240] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.413287] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:641:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.413323] (kruisee_lidar) StderrLine: {'line': b'  641 |           std::is_same_v<T, UniquePtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.413359] (kruisee_lidar) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.413397] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:650:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.413470] (kruisee_lidar) StderrLine: {'line': b'  650 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoCallback>||\n'}
[8.413549] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.413587] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.413622] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:650:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.413659] (kruisee_lidar) StderrLine: {'line': b'  650 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrWithInfoCallback>||\n'}
[8.413694] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.413729] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:650:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.413768] (kruisee_lidar) StderrLine: {'line': b'  650 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.413804] (kruisee_lidar) StderrLine: {'line': b'      |                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.413840] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:650:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.413876] (kruisee_lidar) StderrLine: {'line': b'  650 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.413950] (kruisee_lidar) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.413987] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:651:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.414025] (kruisee_lidar) StderrLine: {'line': b'  651 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.414101] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.414137] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.414173] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:642:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.414209] (kruisee_lidar) StderrLine: {'line': b'  642 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoCallback>||\n'}
[8.414243] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.414277] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.414312] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:651:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.414347] (kruisee_lidar) StderrLine: {'line': b'  651 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.414381] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.414462] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:642:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.414498] (kruisee_lidar) StderrLine: {'line': b'  642 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrWithInfoCallback>||\n'}
[8.414534] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.414569] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:651:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.414641] (kruisee_lidar) StderrLine: {'line': b'  651 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.414678] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.414713] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:651:78:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.414749] (kruisee_lidar) StderrLine: {'line': b'  651 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.414785] (kruisee_lidar) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.414824] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:642:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.414860] (kruisee_lidar) StderrLine: {'line': b'  642 |           std::is_same_v<T, UniquePtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.414896] (kruisee_lidar) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.414968] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:642:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.415007] (kruisee_lidar) StderrLine: {'line': b'  642 |           std::is_same_v<T, UniquePtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.415043] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.415078] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:652:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.415114] (kruisee_lidar) StderrLine: {'line': b'  652 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrCallback>||\n'}
[8.415150] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.415222] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.415259] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:652:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.415298] (kruisee_lidar) StderrLine: {'line': b'  652 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrCallback>||\n'}
[8.415334] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.415369] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:652:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.415406] (kruisee_lidar) StderrLine: {'line': b'  652 |           std::is_same_v<T, SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.415475] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.415511] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:652:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.415548] (kruisee_lidar) StderrLine: {'line': b'  652 |           std::is_same_v<T, SharedPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.415583] (kruisee_lidar) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.415619] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:643:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.415657] (kruisee_lidar) StderrLine: {'line': b'  643 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoROSMessageCallback>||\n'}
[8.415693] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.415729] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.415798] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:643:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.415834] (kruisee_lidar) StderrLine: {'line': b'  643 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrWithInfoROSMessageCallback>||\n'}
[8.415870] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.415905] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:643:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.415998] (kruisee_lidar) StderrLine: {'line': b'  643 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.416036] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.416071] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:643:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.416107] (kruisee_lidar) StderrLine: {'line': b'  643 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.416143] (kruisee_lidar) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.416178] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:653:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.416215] (kruisee_lidar) StderrLine: {'line': b'  653 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrROSMessageCallback>||\n'}
[8.416251] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.416287] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.416357] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:653:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.416436] (kruisee_lidar) StderrLine: {'line': b'  653 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrROSMessageCallback>||\n'}
[8.416472] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.416507] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:653:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.416542] (kruisee_lidar) StderrLine: {'line': b'  653 |           std::is_same_v<T, SharedPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.416576] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.416611] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:653:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.416648] (kruisee_lidar) StderrLine: {'line': b'  653 |           std::is_same_v<T, SharedPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.416683] (kruisee_lidar) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.416718] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:644:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.416754] (kruisee_lidar) StderrLine: {'line': b'  644 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrCallback>||\n'}
[8.416790] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.416824] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.416894] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:644:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.416971] (kruisee_lidar) StderrLine: {'line': b'  644 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrCallback>||\n'}
[8.417009] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.417045] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:644:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.417081] (kruisee_lidar) StderrLine: {'line': b'  644 |           std::is_same_v<T, SharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.417117] (kruisee_lidar) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.417153] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:644:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.417189] (kruisee_lidar) StderrLine: {'line': b'  644 |           std::is_same_v<T, SharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.417225] (kruisee_lidar) StderrLine: {'line': b'      |                                                    \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.417261] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:654:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.417302] (kruisee_lidar) StderrLine: {'line': b'  654 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoCallback>||\n'}
[8.417336] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.417371] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.417480] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:654:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.417517] (kruisee_lidar) StderrLine: {'line': b'  654 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrWithInfoCallback>||\n'}
[8.417556] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.417592] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:654:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.417628] (kruisee_lidar) StderrLine: {'line': b'  654 |           std::is_same_v<T, SharedPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.417663] (kruisee_lidar) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.417697] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:654:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.417731] (kruisee_lidar) StderrLine: {'line': b'  654 |           std::is_same_v<T, SharedPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.417765] (-) TimerEvent: {}
[8.417831] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.417872] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:645:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.417913] (kruisee_lidar) StderrLine: {'line': b'  645 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrROSMessageCallback>||\n'}
[8.417951] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.417988] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.418120] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:645:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.418162] (kruisee_lidar) StderrLine: {'line': b'  645 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrROSMessageCallback>||\n'}
[8.418200] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.418237] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:645:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.418286] (kruisee_lidar) StderrLine: {'line': b'  645 |           std::is_same_v<T, SharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.418340] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.418441] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:645:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.418482] (kruisee_lidar) StderrLine: {'line': b'  645 |           std::is_same_v<T, SharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.418554] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.418593] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:655:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.418633] (kruisee_lidar) StderrLine: {'line': b'  655 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoROSMessageCallback>)\n'}
[8.418675] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.418711] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.418746] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:655:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.418782] (kruisee_lidar) StderrLine: {'line': b'  655 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrWithInfoROSMessageCallback>)\n'}
[8.418818] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.418853] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:655:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.418889] (kruisee_lidar) StderrLine: {'line': b'  655 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.418959] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.418998] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:655:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.419033] (kruisee_lidar) StderrLine: {'line': b'  655 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.419108] (kruisee_lidar) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.419145] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:646:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.419183] (kruisee_lidar) StderrLine: {'line': b'  646 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoCallback>||\n'}
[8.419218] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.419253] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.419288] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:646:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.419324] (kruisee_lidar) StderrLine: {'line': b'  646 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrWithInfoCallback>||\n'}
[8.419360] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.419404] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:646:59:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.419502] (kruisee_lidar) StderrLine: {'line': b'  646 |           std::is_same_v<T, SharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.419566] (kruisee_lidar) StderrLine: {'line': b'      |                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.419669] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::dispatch_intra_process(std::shared_ptr<const typename rclcpp::TypeAdapter<MessageT>::custom_type>, const rclcpp::MessageInfo&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.419737] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:683:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.419780] (kruisee_lidar) StderrLine: {'line': b'  683 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[8.419817] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.419854] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:646:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.419949] (kruisee_lidar) StderrLine: {'line': b'  646 |           std::is_same_v<T, SharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.419988] (kruisee_lidar) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.420025] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:683:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.420075] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:647:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.420179] (kruisee_lidar) StderrLine: {'line': b'  647 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.420219] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.420255] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.420291] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:647:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.420327] (kruisee_lidar) StderrLine: {'line': b'  647 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.420363] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.420401] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:647:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.420436] (kruisee_lidar) StderrLine: {'line': b'  647 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.420470] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.420506] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:647:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.420546] (kruisee_lidar) StderrLine: {'line': b'  647 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.420581] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.420616] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In lambda function:\n'}
[8.420651] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:689:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.420687] (kruisee_lidar) StderrLine: {'line': b'  689 |         if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefCallback>) {\n'}
[8.420723] (kruisee_lidar) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.420798] (kruisee_lidar) StderrLine: {'line': b'      |                                     \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.420834] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:689:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.420870] (kruisee_lidar) StderrLine: {'line': b'  689 |         if constexpr (is_ta && std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefCallback>) {\n'}
[8.420905] (kruisee_lidar) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.420942] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:689:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.421006] (kruisee_lidar) StderrLine: {'line': b'  689 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.421047] (kruisee_lidar) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.421088] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:689:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.421134] (kruisee_lidar) StderrLine: {'line': b'  689 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.421172] (kruisee_lidar) StderrLine: {'line': b'      |                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.421237] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:648:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.421278] (kruisee_lidar) StderrLine: {'line': b'  648 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrCallback>||\n'}
[8.421355] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.421395] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.421435] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:648:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.421475] (kruisee_lidar) StderrLine: {'line': b'  648 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrCallback>||\n'}
[8.421510] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.421546] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:648:59:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.421583] (kruisee_lidar) StderrLine: {'line': b'  648 |           std::is_same_v<T, ConstRefSharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.421618] (kruisee_lidar) StderrLine: {'line': b'      |                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.421652] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:648:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.421688] (kruisee_lidar) StderrLine: {'line': b'  648 |           std::is_same_v<T, ConstRefSharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.421723] (kruisee_lidar) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.421758] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:691:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.421796] (kruisee_lidar) StderrLine: {'line': b'  691 |         } else if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoCallback>) {  // NOLINT\n'}
[8.421876] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.421914] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.421949] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:691:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.421985] (kruisee_lidar) StderrLine: {'line': b'  691 |         } else if constexpr (is_ta && std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefWithInfoCallback>) {  // NOLINT\n'}
[8.422023] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.422070] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:691:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.422123] (kruisee_lidar) StderrLine: {'line': b'  691 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT\n'}
[8.422179] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.422233] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:691:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.422326] (kruisee_lidar) StderrLine: {'line': b'  691 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT\n'}
[8.422449] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.422507] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:649:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.422561] (kruisee_lidar) StderrLine: {'line': b'  649 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrROSMessageCallback>||\n'}
[8.422617] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.422668] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.422729] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:649:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.422783] (kruisee_lidar) StderrLine: {'line': b'  649 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrROSMessageCallback>||\n'}
[8.422889] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.422953] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:649:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.423019] (kruisee_lidar) StderrLine: {'line': b'  649 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.423109] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.423170] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:649:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.423226] (kruisee_lidar) StderrLine: {'line': b'  649 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.423329] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.423395] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:695:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.423455] (kruisee_lidar) StderrLine: {'line': b'  695 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrCallback>||\n'}
[8.423510] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.423562] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.423614] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:695:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.423676] (kruisee_lidar) StderrLine: {'line': b'  695 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrCallback>||\n'}
[8.423741] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.423860] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:695:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.423918] (kruisee_lidar) StderrLine: {'line': b'  695 |             std::is_same_v<T, UniquePtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.423970] (kruisee_lidar) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.424022] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:695:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.424078] (kruisee_lidar) StderrLine: {'line': b'  695 |             std::is_same_v<T, UniquePtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.424128] (kruisee_lidar) StderrLine: {'line': b'      |                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.424180] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:650:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.424235] (kruisee_lidar) StderrLine: {'line': b'  650 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoCallback>||\n'}
[8.424332] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.424379] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.424440] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:650:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.424489] (kruisee_lidar) StderrLine: {'line': b'  650 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrWithInfoCallback>||\n'}
[8.424543] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.424594] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:650:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.424635] (kruisee_lidar) StderrLine: {'line': b'  650 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.424746] (kruisee_lidar) StderrLine: {'line': b'      |                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.424862] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:696:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.424927] (kruisee_lidar) StderrLine: {'line': b'  696 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrCallback>\n'}
[8.424996] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.425047] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.425091] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:650:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.425129] (kruisee_lidar) StderrLine: {'line': b'  650 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.425167] (kruisee_lidar) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.425202] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:696:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.425239] (kruisee_lidar) StderrLine: {'line': b'  696 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrCallback>\n'}
[8.425314] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.425357] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:696:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.425434] (kruisee_lidar) StderrLine: {'line': b'  696 |             std::is_same_v<T, SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[8.425474] (kruisee_lidar) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.425510] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:697:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.425571] (kruisee_lidar) StderrLine: {'line': b'  697 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[8.425606] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.425642] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:702:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.425678] (kruisee_lidar) StderrLine: {'line': b'  702 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoCallback>||\n'}
[8.425714] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.425750] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.425827] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:651:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.425866] (kruisee_lidar) StderrLine: {'line': b'  651 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.425902] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.425938] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.425974] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:702:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.426011] (kruisee_lidar) StderrLine: {'line': b'  702 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrWithInfoCallback>||\n'}
[8.426049] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.426086] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:651:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.426122] (kruisee_lidar) StderrLine: {'line': b'  651 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.426157] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.426192] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:702:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.426228] (kruisee_lidar) StderrLine: {'line': b'  702 |             std::is_same_v<T, UniquePtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.426301] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.426339] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:702:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.426375] (kruisee_lidar) StderrLine: {'line': b'  702 |             std::is_same_v<T, UniquePtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.426411] (kruisee_lidar) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.426447] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:651:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.426483] (kruisee_lidar) StderrLine: {'line': b'  651 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.426517] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.426574] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:651:78:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.426615] (kruisee_lidar) StderrLine: {'line': b'  651 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.426650] (kruisee_lidar) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.426685] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:703:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.426757] (kruisee_lidar) StderrLine: {'line': b'  703 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoCallback>\n'}
[8.426794] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.426830] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.426868] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:703:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.426906] (kruisee_lidar) StderrLine: {'line': b'  703 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrWithInfoCallback>\n'}
[8.426942] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.426977] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:703:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.427013] (kruisee_lidar) StderrLine: {'line': b'  703 |             std::is_same_v<T, SharedPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[8.427048] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.427086] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:704:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.427121] (kruisee_lidar) StderrLine: {'line': b'  704 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[8.427157] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.427194] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:652:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.427267] (kruisee_lidar) StderrLine: {'line': b'  652 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrCallback>||\n'}
[8.427304] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.427341] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.427377] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:652:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.427415] (kruisee_lidar) StderrLine: {'line': b'  652 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrCallback>||\n'}
[8.427452] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.427498] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:652:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.427566] (kruisee_lidar) StderrLine: {'line': b'  652 |           std::is_same_v<T, SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.427606] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.427642] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:652:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.427677] (kruisee_lidar) StderrLine: {'line': b'  652 |           std::is_same_v<T, SharedPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.427711] (kruisee_lidar) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.427746] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:709:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.427784] (kruisee_lidar) StderrLine: {'line': b'  709 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrCallback>||\n'}
[8.427819] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.427854] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.427889] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:709:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.427924] (kruisee_lidar) StderrLine: {'line': b'  709 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrCallback>||\n'}
[8.427960] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.427995] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:709:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.428029] (kruisee_lidar) StderrLine: {'line': b'  709 |             std::is_same_v<T, SharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.428064] (kruisee_lidar) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.428100] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:709:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.428135] (kruisee_lidar) StderrLine: {'line': b'  709 |             std::is_same_v<T, SharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.428171] (kruisee_lidar) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.428206] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:653:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.428243] (kruisee_lidar) StderrLine: {'line': b'  653 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrROSMessageCallback>||\n'}
[8.428280] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.428315] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.428365] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:653:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.428405] (kruisee_lidar) StderrLine: {'line': b'  653 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrROSMessageCallback>||\n'}
[8.428442] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.428481] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:653:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.428566] (kruisee_lidar) StderrLine: {'line': b'  653 |           std::is_same_v<T, SharedPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.428606] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.428643] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:653:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.428682] (kruisee_lidar) StderrLine: {'line': b'  653 |           std::is_same_v<T, SharedPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.428720] (kruisee_lidar) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.428761] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:710:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.428798] (kruisee_lidar) StderrLine: {'line': b'  710 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrCallback>\n'}
[8.428833] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.428868] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.428903] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:710:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.428939] (kruisee_lidar) StderrLine: {'line': b'  710 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrCallback>\n'}
[8.428984] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.429021] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:710:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.429061] (kruisee_lidar) StderrLine: {'line': b'  710 |             std::is_same_v<T, ConstRefSharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[8.429096] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.429131] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:711:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.429170] (kruisee_lidar) StderrLine: {'line': b'  711 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[8.429208] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.429245] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:654:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.429283] (kruisee_lidar) StderrLine: {'line': b'  654 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoCallback>||\n'}
[8.429321] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.429359] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.429397] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:654:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.429438] (kruisee_lidar) StderrLine: {'line': b'  654 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrWithInfoCallback>||\n'}
[8.429514] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.429564] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:654:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.429603] (kruisee_lidar) StderrLine: {'line': b'  654 |           std::is_same_v<T, SharedPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.429643] (kruisee_lidar) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.429687] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:654:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.429730] (kruisee_lidar) StderrLine: {'line': b'  654 |           std::is_same_v<T, SharedPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.429767] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.429804] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:716:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.429843] (kruisee_lidar) StderrLine: {'line': b'  716 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoCallback>||\n'}
[8.429882] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.429920] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.429956] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:716:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.429994] (kruisee_lidar) StderrLine: {'line': b'  716 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrWithInfoCallback>||\n'}
[8.430032] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.430070] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:716:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.430109] (kruisee_lidar) StderrLine: {'line': b'  716 |             std::is_same_v<T, SharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.430146] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.430192] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:716:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.430232] (kruisee_lidar) StderrLine: {'line': b'  716 |             std::is_same_v<T, SharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.430270] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.430337] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:655:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.430378] (kruisee_lidar) StderrLine: {'line': b'  655 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoROSMessageCallback>)\n'}
[8.430416] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.430453] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.430492] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:655:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.430529] (kruisee_lidar) StderrLine: {'line': b'  655 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrWithInfoROSMessageCallback>)\n'}
[8.430566] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.430604] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:655:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.430644] (kruisee_lidar) StderrLine: {'line': b'  655 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.430680] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.430715] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:655:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.430751] (kruisee_lidar) StderrLine: {'line': b'  655 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.430788] (kruisee_lidar) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.430825] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::dispatch_intra_process(std::shared_ptr<const typename rclcpp::TypeAdapter<MessageT>::custom_type>, const rclcpp::MessageInfo&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.430864] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:683:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.430902] (kruisee_lidar) StderrLine: {'line': b'  683 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[8.430939] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.430978] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:683:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.431021] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:717:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.431084] (kruisee_lidar) StderrLine: {'line': b'  717 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoCallback>\n'}
[8.431198] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.431257] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.431314] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:717:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.431370] (kruisee_lidar) StderrLine: {'line': b'  717 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrWithInfoCallback>\n'}
[8.431419] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.431456] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:717:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.431493] (kruisee_lidar) StderrLine: {'line': b'  717 |             std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[8.431530] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.431565] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:718:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.431602] (kruisee_lidar) StderrLine: {'line': b'  718 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[8.431644] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.431680] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:723:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.431723] (kruisee_lidar) StderrLine: {'line': b'  723 |         else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[8.431761] (kruisee_lidar) StderrLine: {'line': b'      |                                 \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.431798] (kruisee_lidar) StderrLine: {'line': b'      |                                 \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.431838] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:723:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.431895] (kruisee_lidar) StderrLine: {'line': b'  723 |         else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[8.431935] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.431973] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:723:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.432009] (kruisee_lidar) StderrLine: {'line': b'  723 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT[readability/braces]\n'}
[8.432052] (kruisee_lidar) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.432092] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:723:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.432188] (kruisee_lidar) StderrLine: {'line': b'  723 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT[readability/braces]\n'}
[8.432225] (kruisee_lidar) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.432260] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In lambda function:\n'}
[8.432294] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:689:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.432330] (kruisee_lidar) StderrLine: {'line': b'  689 |         if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefCallback>) {\n'}
[8.432365] (kruisee_lidar) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.432400] (kruisee_lidar) StderrLine: {'line': b'      |                                     \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.432435] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:689:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.432472] (kruisee_lidar) StderrLine: {'line': b'  689 |         if constexpr (is_ta && std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefCallback>) {\n'}
[8.432507] (kruisee_lidar) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.432542] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:689:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.432577] (kruisee_lidar) StderrLine: {'line': b'  689 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.432613] (kruisee_lidar) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.432648] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:689:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.432683] (kruisee_lidar) StderrLine: {'line': b'  689 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.432717] (kruisee_lidar) StderrLine: {'line': b'      |                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.432752] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:730:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.432789] (kruisee_lidar) StderrLine: {'line': b'  730 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[8.432827] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.432864] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.432900] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:730:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.432941] (kruisee_lidar) StderrLine: {'line': b'  730 |         } else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefWithInfoROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[8.433010] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.433048] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:730:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.433085] (kruisee_lidar) StderrLine: {'line': b'  730 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT[readability/braces]\n'}
[8.433121] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.433156] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:730:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.433191] (kruisee_lidar) StderrLine: {'line': b'  730 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT[readability/braces]\n'}
[8.433226] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.433261] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:691:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.433297] (kruisee_lidar) StderrLine: {'line': b'  691 |         } else if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoCallback>) {  // NOLINT\n'}
[8.433335] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.433371] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.433406] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:691:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.433440] (kruisee_lidar) StderrLine: {'line': b'  691 |         } else if constexpr (is_ta && std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefWithInfoCallback>) {  // NOLINT\n'}
[8.433476] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.433510] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:691:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.433549] (kruisee_lidar) StderrLine: {'line': b'  691 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT\n'}
[8.433586] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.433623] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:691:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.433661] (kruisee_lidar) StderrLine: {'line': b'  691 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT\n'}
[8.433728] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.433767] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:738:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.433805] (kruisee_lidar) StderrLine: {'line': b'  738 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrROSMessageCallback>||\n'}
[8.433842] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.433878] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.433913] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:738:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.433949] (kruisee_lidar) StderrLine: {'line': b'  738 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrROSMessageCallback>||\n'}
[8.433986] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.434022] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:738:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.434059] (kruisee_lidar) StderrLine: {'line': b'  738 |           std::is_same_v<T, UniquePtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.434096] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.434133] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:738:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.434170] (kruisee_lidar) StderrLine: {'line': b'  738 |           std::is_same_v<T, UniquePtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.434208] (kruisee_lidar) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.434245] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:695:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.434286] (kruisee_lidar) StderrLine: {'line': b'  695 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrCallback>||\n'}
[8.434325] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.434365] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.434410] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:695:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.434483] (kruisee_lidar) StderrLine: {'line': b'  695 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrCallback>||\n'}
[8.434521] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.434558] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:695:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.434595] (kruisee_lidar) StderrLine: {'line': b'  695 |             std::is_same_v<T, UniquePtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.434630] (kruisee_lidar) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.434665] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:695:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.434700] (kruisee_lidar) StderrLine: {'line': b'  695 |             std::is_same_v<T, UniquePtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.434735] (kruisee_lidar) StderrLine: {'line': b'      |                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.434774] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:739:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.434810] (kruisee_lidar) StderrLine: {'line': b'  739 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrROSMessageCallback>)\n'}
[8.434846] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.434885] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.434921] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:739:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.434956] (kruisee_lidar) StderrLine: {'line': b'  739 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrROSMessageCallback>)\n'}
[8.434992] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.435027] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:739:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.435064] (kruisee_lidar) StderrLine: {'line': b'  739 |           std::is_same_v<T, SharedPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.435100] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.435137] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:739:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.435223] (kruisee_lidar) StderrLine: {'line': b'  739 |           std::is_same_v<T, SharedPtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.435261] (kruisee_lidar) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.435297] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:696:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.435335] (kruisee_lidar) StderrLine: {'line': b'  696 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrCallback>\n'}
[8.435371] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.435407] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.435443] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:696:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.435483] (kruisee_lidar) StderrLine: {'line': b'  696 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrCallback>\n'}
[8.435521] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.435559] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:696:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.435597] (kruisee_lidar) StderrLine: {'line': b'  696 |             std::is_same_v<T, SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[8.435634] (kruisee_lidar) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.435673] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:697:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.435710] (kruisee_lidar) StderrLine: {'line': b'  697 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[8.435748] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.435783] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:747:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.435826] (kruisee_lidar) StderrLine: {'line': b'  747 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoROSMessageCallback>||\n'}
[8.435862] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.435897] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.435933] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:747:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.435982] (kruisee_lidar) StderrLine: {'line': b'  747 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrWithInfoROSMessageCallback>||\n'}
[8.436037] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.436077] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:747:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.436134] (kruisee_lidar) StderrLine: {'line': b'  747 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.436172] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.436209] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:747:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.436250] (kruisee_lidar) StderrLine: {'line': b'  747 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.436302] (kruisee_lidar) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.436341] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:702:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.436379] (kruisee_lidar) StderrLine: {'line': b'  702 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoCallback>||\n'}
[8.436416] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.436451] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.436487] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:702:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.436523] (kruisee_lidar) StderrLine: {'line': b'  702 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrWithInfoCallback>||\n'}
[8.436562] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.436601] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:702:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.436648] (kruisee_lidar) StderrLine: {'line': b'  702 |             std::is_same_v<T, UniquePtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.436684] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.436720] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:702:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.436755] (kruisee_lidar) StderrLine: {'line': b'  702 |             std::is_same_v<T, UniquePtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.436791] (kruisee_lidar) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.436826] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:748:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.436863] (kruisee_lidar) StderrLine: {'line': b'  748 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoROSMessageCallback>)\n'}
[8.436903] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.436944] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.437006] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:748:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.437044] (kruisee_lidar) StderrLine: {'line': b'  748 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrWithInfoROSMessageCallback>)\n'}
[8.437082] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.437118] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:748:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.437155] (kruisee_lidar) StderrLine: {'line': b'  748 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.437191] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.437226] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:748:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.437263] (kruisee_lidar) StderrLine: {'line': b'  748 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.437299] (kruisee_lidar) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.437338] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:703:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.437382] (kruisee_lidar) StderrLine: {'line': b'  703 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoCallback>\n'}
[8.437422] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.437459] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.437494] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:703:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.437531] (kruisee_lidar) StderrLine: {'line': b'  703 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrWithInfoCallback>\n'}
[8.437568] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.437604] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:703:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.437645] (kruisee_lidar) StderrLine: {'line': b'  703 |             std::is_same_v<T, SharedPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[8.437687] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.437736] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:704:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.437797] (kruisee_lidar) StderrLine: {'line': b'  704 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[8.437852] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.437895] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:756:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.437950] (kruisee_lidar) StderrLine: {'line': b'  756 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrROSMessageCallback>||\n'}
[8.437987] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.438022] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.438056] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:756:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.438092] (kruisee_lidar) StderrLine: {'line': b'  756 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrROSMessageCallback>||\n'}
[8.438128] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.438162] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:756:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.438197] (kruisee_lidar) StderrLine: {'line': b'  756 |           std::is_same_v<T, SharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.438232] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.438267] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:756:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.438303] (kruisee_lidar) StderrLine: {'line': b'  756 |           std::is_same_v<T, SharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.438337] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.438373] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:709:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.438408] (kruisee_lidar) StderrLine: {'line': b'  709 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrCallback>||\n'}
[8.438443] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.438478] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.438512] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:709:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.438546] (kruisee_lidar) StderrLine: {'line': b'  709 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrCallback>||\n'}
[8.438586] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.438621] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:709:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.438657] (kruisee_lidar) StderrLine: {'line': b'  709 |             std::is_same_v<T, SharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.438692] (kruisee_lidar) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.438726] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:709:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.438760] (kruisee_lidar) StderrLine: {'line': b'  709 |             std::is_same_v<T, SharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.438797] (kruisee_lidar) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.438832] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:757:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.438869] (kruisee_lidar) StderrLine: {'line': b'  757 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrROSMessageCallback>)\n'}
[8.438904] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.438938] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.438973] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:757:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.439011] (kruisee_lidar) StderrLine: {'line': b'  757 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrROSMessageCallback>)\n'}
[8.439056] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.439106] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:757:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.439160] (kruisee_lidar) StderrLine: {'line': b'  757 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.439204] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.439244] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:757:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.439279] (kruisee_lidar) StderrLine: {'line': b'  757 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.439315] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.439354] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:710:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.439397] (kruisee_lidar) StderrLine: {'line': b'  710 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrCallback>\n'}
[8.439435] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.439470] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.439505] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:710:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.439539] (kruisee_lidar) StderrLine: {'line': b'  710 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrCallback>\n'}
[8.439574] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.439608] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:710:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.439643] (kruisee_lidar) StderrLine: {'line': b'  710 |             std::is_same_v<T, ConstRefSharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[8.439678] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.439713] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:711:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.439748] (kruisee_lidar) StderrLine: {'line': b'  711 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[8.439782] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.439817] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:765:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.439853] (kruisee_lidar) StderrLine: {'line': b'  765 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.439887] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.439922] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.439955] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:765:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.439990] (kruisee_lidar) StderrLine: {'line': b'  765 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.440024] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.440058] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:765:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.440093] (kruisee_lidar) StderrLine: {'line': b'  765 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.440126] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.440162] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:765:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.440199] (kruisee_lidar) StderrLine: {'line': b'  765 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.440233] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.440268] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:716:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.440304] (kruisee_lidar) StderrLine: {'line': b'  716 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoCallback>||\n'}
[8.440339] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.440373] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.440407] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:716:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.440442] (kruisee_lidar) StderrLine: {'line': b'  716 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrWithInfoCallback>||\n'}
[8.440477] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.440511] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:716:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.440549] (kruisee_lidar) StderrLine: {'line': b'  716 |             std::is_same_v<T, SharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.440584] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.440619] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:716:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.440654] (kruisee_lidar) StderrLine: {'line': b'  716 |             std::is_same_v<T, SharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.440689] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.440724] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:766:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.440760] (kruisee_lidar) StderrLine: {'line': b'  766 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>)\n'}
[8.440796] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.440831] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.440865] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:766:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.440903] (kruisee_lidar) StderrLine: {'line': b'  766 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrWithInfoROSMessageCallback>)\n'}
[8.440938] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.440984] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:766:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.441021] (kruisee_lidar) StderrLine: {'line': b'  766 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.441067] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.441102] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:766:78:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.441138] (kruisee_lidar) StderrLine: {'line': b'  766 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.441172] (kruisee_lidar) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.441207] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:717:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.441243] (kruisee_lidar) StderrLine: {'line': b'  717 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoCallback>\n'}
[8.441278] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.441312] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.441347] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:717:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.441383] (kruisee_lidar) StderrLine: {'line': b'  717 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrWithInfoCallback>\n'}
[8.441418] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.441452] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:717:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.441491] (kruisee_lidar) StderrLine: {'line': b'  717 |             std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[8.441526] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.441561] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:718:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.441597] (kruisee_lidar) StderrLine: {'line': b'  718 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[8.441631] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.441667] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:776:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.441702] (kruisee_lidar) StderrLine: {'line': b'  776 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageCallback>||\n'}
[8.441737] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.441771] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.441805] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:776:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.441840] (kruisee_lidar) StderrLine: {'line': b'  776 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSerializedMessageCallback>||\n'}
[8.441877] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.441912] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:776:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.441947] (kruisee_lidar) StderrLine: {'line': b'  776 |           std::is_same_v<T, ConstRefSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.441984] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.442021] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:776:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.442057] (kruisee_lidar) StderrLine: {'line': b'  776 |           std::is_same_v<T, ConstRefSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.442092] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.442127] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:723:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.442163] (kruisee_lidar) StderrLine: {'line': b'  723 |         else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[8.442198] (kruisee_lidar) StderrLine: {'line': b'      |                                 \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.442234] (kruisee_lidar) StderrLine: {'line': b'      |                                 \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.442268] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:723:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.442304] (kruisee_lidar) StderrLine: {'line': b'  723 |         else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[8.442339] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.442373] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:723:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.442412] (kruisee_lidar) StderrLine: {'line': b'  723 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT[readability/braces]\n'}
[8.442451] (kruisee_lidar) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.442485] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:723:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.442521] (kruisee_lidar) StderrLine: {'line': b'  723 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT[readability/braces]\n'}
[8.442556] (kruisee_lidar) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.442590] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:777:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.442628] (kruisee_lidar) StderrLine: {'line': b'  777 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageWithInfoCallback>||\n'}
[8.442663] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.442699] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.442734] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:777:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.442770] (kruisee_lidar) StderrLine: {'line': b'  777 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSerializedMessageWithInfoCallback>||\n'}
[8.442804] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.442839] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:777:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.442874] (kruisee_lidar) StderrLine: {'line': b'  777 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.442909] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.442944] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:777:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.442979] (kruisee_lidar) StderrLine: {'line': b'  777 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.443013] (kruisee_lidar) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.443048] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:778:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.443088] (kruisee_lidar) StderrLine: {'line': b'  778 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageCallback>||\n'}
[8.443123] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.443158] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.443192] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:778:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.443228] (kruisee_lidar) StderrLine: {'line': b'  778 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrSerializedMessageCallback>||\n'}
[8.443263] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.443297] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:778:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.443338] (kruisee_lidar) StderrLine: {'line': b'  778 |           std::is_same_v<T, UniquePtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.443386] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.443432] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:730:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.443469] (kruisee_lidar) StderrLine: {'line': b'  730 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[8.443507] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.443553] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.443588] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:778:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.443624] (kruisee_lidar) StderrLine: {'line': b'  778 |           std::is_same_v<T, UniquePtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.443658] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.443693] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:730:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.443728] (kruisee_lidar) StderrLine: {'line': b'  730 |         } else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefWithInfoROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[8.443763] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.443797] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:730:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.443837] (kruisee_lidar) StderrLine: {'line': b'  730 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT[readability/braces]\n'}
[8.443875] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.443910] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:730:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.443946] (kruisee_lidar) StderrLine: {'line': b'  730 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT[readability/braces]\n'}
[8.443983] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.444020] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:779:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.444056] (kruisee_lidar) StderrLine: {'line': b'  779 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageWithInfoCallback>||\n'}
[8.444091] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.444126] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.444161] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:779:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.444196] (kruisee_lidar) StderrLine: {'line': b'  779 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrSerializedMessageWithInfoCallback>||\n'}
[8.444231] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.444266] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:779:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.444301] (kruisee_lidar) StderrLine: {'line': b'  779 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.444338] (kruisee_lidar) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.444376] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:779:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.444416] (kruisee_lidar) StderrLine: {'line': b'  779 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.444451] (kruisee_lidar) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.444486] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:738:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.444521] (kruisee_lidar) StderrLine: {'line': b'  738 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrROSMessageCallback>||\n'}
[8.444560] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.444594] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.444628] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:738:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.444663] (kruisee_lidar) StderrLine: {'line': b'  738 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrROSMessageCallback>||\n'}
[8.444699] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.444733] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:738:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.444768] (kruisee_lidar) StderrLine: {'line': b'  738 |           std::is_same_v<T, UniquePtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.444804] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.444847] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:738:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.444883] (kruisee_lidar) StderrLine: {'line': b'  738 |           std::is_same_v<T, UniquePtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.444918] (kruisee_lidar) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.444951] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:780:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.445000] (kruisee_lidar) StderrLine: {'line': b'  780 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageCallback>||\n'}
[8.445035] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.445070] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.445104] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:780:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.445140] (kruisee_lidar) StderrLine: {'line': b'  780 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrSerializedMessageCallback>||\n'}
[8.445174] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.445208] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:780:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.445243] (kruisee_lidar) StderrLine: {'line': b'  780 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.445279] (kruisee_lidar) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.445313] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:780:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.445350] (kruisee_lidar) StderrLine: {'line': b'  780 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.445384] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.445419] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:739:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.445455] (kruisee_lidar) StderrLine: {'line': b'  739 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrROSMessageCallback>)\n'}
[8.445489] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.445523] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.445557] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:739:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.445592] (kruisee_lidar) StderrLine: {'line': b'  739 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrROSMessageCallback>)\n'}
[8.445631] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.445666] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:739:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.445701] (kruisee_lidar) StderrLine: {'line': b'  739 |           std::is_same_v<T, SharedPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.445734] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.445768] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:739:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.445803] (kruisee_lidar) StderrLine: {'line': b'  739 |           std::is_same_v<T, SharedPtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.445837] (kruisee_lidar) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.445871] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:781:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.445906] (kruisee_lidar) StderrLine: {'line': b'  781 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.445941] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.445976] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.446010] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:781:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.446045] (kruisee_lidar) StderrLine: {'line': b'  781 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.446081] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.446116] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:781:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.446150] (kruisee_lidar) StderrLine: {'line': b'  781 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.446187] (kruisee_lidar) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.446222] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:781:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.446257] (kruisee_lidar) StderrLine: {'line': b'  781 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.446291] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.446324] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:747:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.446358] (kruisee_lidar) StderrLine: {'line': b'  747 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoROSMessageCallback>||\n'}
[8.446391] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.446424] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.446459] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:747:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.446494] (kruisee_lidar) StderrLine: {'line': b'  747 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrWithInfoROSMessageCallback>||\n'}
[8.446534] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.446569] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:747:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.446604] (kruisee_lidar) StderrLine: {'line': b'  747 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.446639] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.446673] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:747:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.446708] (kruisee_lidar) StderrLine: {'line': b'  747 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.446742] (kruisee_lidar) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.446776] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:782:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.446814] (kruisee_lidar) StderrLine: {'line': b'  782 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[8.446849] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.446885] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.446919] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:782:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.446954] (kruisee_lidar) StderrLine: {'line': b'  782 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[8.446988] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.447023] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:782:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.447062] (kruisee_lidar) StderrLine: {'line': b'  782 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.447098] (kruisee_lidar) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.447132] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:782:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.447167] (kruisee_lidar) StderrLine: {'line': b'  782 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.447201] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.447236] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:748:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.447272] (kruisee_lidar) StderrLine: {'line': b'  748 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoROSMessageCallback>)\n'}
[8.447308] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.447343] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.447378] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:748:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.447413] (kruisee_lidar) StderrLine: {'line': b'  748 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrWithInfoROSMessageCallback>)\n'}
[8.447447] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.447481] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:748:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.447518] (kruisee_lidar) StderrLine: {'line': b'  748 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.447552] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.447586] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:748:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.447621] (kruisee_lidar) StderrLine: {'line': b'  748 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.447656] (kruisee_lidar) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.447690] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:783:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.447726] (kruisee_lidar) StderrLine: {'line': b'  783 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.447763] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.447798] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.447833] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:783:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.447868] (kruisee_lidar) StderrLine: {'line': b'  783 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.447904] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.447939] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:783:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.447974] (kruisee_lidar) StderrLine: {'line': b'  783 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.448009] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.448044] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:783:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.448078] (kruisee_lidar) StderrLine: {'line': b'  783 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.448114] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.448151] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:756:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.448188] (kruisee_lidar) StderrLine: {'line': b'  756 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrROSMessageCallback>||\n'}
[8.448223] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.448257] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.448291] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:756:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.448326] (kruisee_lidar) StderrLine: {'line': b'  756 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrROSMessageCallback>||\n'}
[8.448360] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.448395] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:756:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.448430] (kruisee_lidar) StderrLine: {'line': b'  756 |           std::is_same_v<T, SharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.448465] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.448503] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:756:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.448540] (kruisee_lidar) StderrLine: {'line': b'  756 |           std::is_same_v<T, SharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.448575] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.448608] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:784:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.448644] (kruisee_lidar) StderrLine: {'line': b'  784 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageCallback>||\n'}
[8.448678] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.448713] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.448746] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:784:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.448779] (kruisee_lidar) StderrLine: {'line': b'  784 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrSerializedMessageCallback>||\n'}
[8.448814] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.448848] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:784:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.448883] (kruisee_lidar) StderrLine: {'line': b'  784 |           std::is_same_v<T, SharedPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.448919] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.448953] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:784:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.449001] (kruisee_lidar) StderrLine: {'line': b'  784 |           std::is_same_v<T, SharedPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.449038] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.449073] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:757:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.449109] (kruisee_lidar) StderrLine: {'line': b'  757 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrROSMessageCallback>)\n'}
[8.449144] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.449180] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.449215] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:757:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.449251] (kruisee_lidar) StderrLine: {'line': b'  757 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrROSMessageCallback>)\n'}
[8.449286] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.449320] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:757:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.449356] (kruisee_lidar) StderrLine: {'line': b'  757 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.449392] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.449433] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:757:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.449469] (kruisee_lidar) StderrLine: {'line': b'  757 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.449504] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.449540] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:785:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.449577] (kruisee_lidar) StderrLine: {'line': b'  785 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageWithInfoCallback>)\n'}
[8.449612] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.449646] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.449680] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:785:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.449719] (kruisee_lidar) StderrLine: {'line': b'  785 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrSerializedMessageWithInfoCallback>)\n'}
[8.449754] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.449789] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:785:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.449824] (kruisee_lidar) StderrLine: {'line': b'  785 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.449858] (kruisee_lidar) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.449899] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:785:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.449949] (kruisee_lidar) StderrLine: {'line': b'  785 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.449991] (kruisee_lidar) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.450027] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::dispatch_intra_process(std::unique_ptr<typename rclcpp::TypeAdapter<MessageT>::custom_type, typename rclcpp::detail::MessageDeleterHelper<typename rclcpp::TypeAdapter<MessageT>::custom_type, AllocatorT>::Deleter>, const rclcpp::MessageInfo&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.450067] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:813:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.450104] (kruisee_lidar) StderrLine: {'line': b'  813 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[8.450151] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.450191] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:813:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.450227] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:765:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.450268] (kruisee_lidar) StderrLine: {'line': b'  765 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.450304] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.450339] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.450374] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:765:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.450410] (kruisee_lidar) StderrLine: {'line': b'  765 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.450448] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.450483] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:765:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.450519] (kruisee_lidar) StderrLine: {'line': b'  765 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.450554] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.450589] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:765:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.450624] (kruisee_lidar) StderrLine: {'line': b'  765 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.450661] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.450697] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In lambda function:\n'}
[8.450732] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:824:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.450769] (kruisee_lidar) StderrLine: {'line': b'  824 |         if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefCallback>) {\n'}
[8.450805] (kruisee_lidar) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.450842] (kruisee_lidar) StderrLine: {'line': b'      |                                     \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.450877] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:824:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.450913] (kruisee_lidar) StderrLine: {'line': b'  824 |         if constexpr (is_ta && std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefCallback>) {\n'}
[8.450948] (kruisee_lidar) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.450982] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:824:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.451016] (kruisee_lidar) StderrLine: {'line': b'  824 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.451051] (kruisee_lidar) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.451085] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:824:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.451120] (kruisee_lidar) StderrLine: {'line': b'  824 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.451155] (kruisee_lidar) StderrLine: {'line': b'      |                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.451193] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:766:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.451228] (kruisee_lidar) StderrLine: {'line': b'  766 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>)\n'}
[8.451262] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.451297] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.451332] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:766:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.451367] (kruisee_lidar) StderrLine: {'line': b'  766 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrWithInfoROSMessageCallback>)\n'}
[8.451401] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.451435] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:766:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.451470] (kruisee_lidar) StderrLine: {'line': b'  766 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.451504] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.451542] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:766:78:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.451577] (kruisee_lidar) StderrLine: {'line': b'  766 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.451612] (kruisee_lidar) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.451647] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:826:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.451683] (kruisee_lidar) StderrLine: {'line': b'  826 |         } else if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoCallback>) {  // NOLINT\n'}
[8.451718] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.451753] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.451787] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:826:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.451822] (kruisee_lidar) StderrLine: {'line': b'  826 |         } else if constexpr (is_ta && std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefWithInfoCallback>) {  // NOLINT\n'}
[8.451860] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.451894] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:826:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.451929] (kruisee_lidar) StderrLine: {'line': b'  826 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT\n'}
[8.451966] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.452000] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:826:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.452035] (kruisee_lidar) StderrLine: {'line': b'  826 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT\n'}
[8.452070] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.452109] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:776:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.452145] (kruisee_lidar) StderrLine: {'line': b'  776 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageCallback>||\n'}
[8.452180] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.452215] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.452250] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:776:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.452286] (kruisee_lidar) StderrLine: {'line': b'  776 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSerializedMessageCallback>||\n'}
[8.452321] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.452356] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:776:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.452390] (kruisee_lidar) StderrLine: {'line': b'  776 |           std::is_same_v<T, ConstRefSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.452425] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.452459] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:776:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.452494] (kruisee_lidar) StderrLine: {'line': b'  776 |           std::is_same_v<T, ConstRefSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.452528] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.452562] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:830:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.452602] (kruisee_lidar) StderrLine: {'line': b'  830 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrCallback>||\n'}
[8.452636] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.452671] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.452706] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:830:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.452744] (kruisee_lidar) StderrLine: {'line': b'  830 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrCallback>||\n'}
[8.452780] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.452815] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:830:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.452851] (kruisee_lidar) StderrLine: {'line': b'  830 |             std::is_same_v<T, UniquePtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.452886] (kruisee_lidar) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.452921] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:830:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.452961] (kruisee_lidar) StderrLine: {'line': b'  830 |             std::is_same_v<T, UniquePtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.453007] (kruisee_lidar) StderrLine: {'line': b'      |                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.453043] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:777:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.453079] (kruisee_lidar) StderrLine: {'line': b'  777 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageWithInfoCallback>||\n'}
[8.453125] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.453169] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.453205] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:777:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.453241] (kruisee_lidar) StderrLine: {'line': b'  777 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSerializedMessageWithInfoCallback>||\n'}
[8.453275] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.453310] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:777:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.453345] (kruisee_lidar) StderrLine: {'line': b'  777 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.453381] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.453416] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:777:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.453450] (kruisee_lidar) StderrLine: {'line': b'  777 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.453485] (kruisee_lidar) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.453519] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:831:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.453555] (kruisee_lidar) StderrLine: {'line': b'  831 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrCallback>))\n'}
[8.453589] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.453624] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.453658] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:831:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.453693] (kruisee_lidar) StderrLine: {'line': b'  831 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrCallback>))\n'}
[8.453726] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.453761] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:831:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.453796] (kruisee_lidar) StderrLine: {'line': b'  831 |             std::is_same_v<T, SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K))\n'}
[8.453830] (kruisee_lidar) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.453864] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:831:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.453898] (kruisee_lidar) StderrLine: {'line': b'  831 |             std::is_same_v<T, SharedPtrCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[8.453933] (kruisee_lidar) StderrLine: {'line': b'      |                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.453967] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:778:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.454003] (kruisee_lidar) StderrLine: {'line': b'  778 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageCallback>||\n'}
[8.454049] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.454084] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.454121] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:778:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.454158] (kruisee_lidar) StderrLine: {'line': b'  778 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrSerializedMessageCallback>||\n'}
[8.454193] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.454228] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:778:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.454264] (kruisee_lidar) StderrLine: {'line': b'  778 |           std::is_same_v<T, UniquePtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.454299] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.454332] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:778:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.454368] (kruisee_lidar) StderrLine: {'line': b'  778 |           std::is_same_v<T, UniquePtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.454404] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.454439] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:836:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.454477] (kruisee_lidar) StderrLine: {'line': b'  836 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoCallback>||\n'}
[8.454512] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.454546] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.454580] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:836:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.454616] (kruisee_lidar) StderrLine: {'line': b'  836 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrWithInfoCallback>||\n'}
[8.454649] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.454683] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:836:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.454719] (kruisee_lidar) StderrLine: {'line': b'  836 |             std::is_same_v<T, UniquePtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.454753] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.454787] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:836:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.454822] (kruisee_lidar) StderrLine: {'line': b'  836 |             std::is_same_v<T, UniquePtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.454858] (kruisee_lidar) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.454894] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:779:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.454931] (kruisee_lidar) StderrLine: {'line': b'  779 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageWithInfoCallback>||\n'}
[8.454965] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.455001] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.455035] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:779:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.455071] (kruisee_lidar) StderrLine: {'line': b'  779 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrSerializedMessageWithInfoCallback>||\n'}
[8.455106] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.455140] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:779:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.455175] (kruisee_lidar) StderrLine: {'line': b'  779 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.455209] (kruisee_lidar) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.455244] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:779:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.455278] (kruisee_lidar) StderrLine: {'line': b'  779 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.455313] (kruisee_lidar) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.455347] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:837:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.455385] (kruisee_lidar) StderrLine: {'line': b'  837 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoCallback>\n'}
[8.455419] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.455454] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.455489] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:837:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.455524] (kruisee_lidar) StderrLine: {'line': b'  837 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrWithInfoCallback>\n'}
[8.455559] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.455595] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:837:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.455631] (kruisee_lidar) StderrLine: {'line': b'  837 |             std::is_same_v<T, SharedPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[8.455665] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.455699] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:838:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.455734] (kruisee_lidar) StderrLine: {'line': b'  838 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[8.455767] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.455801] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:780:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.455839] (kruisee_lidar) StderrLine: {'line': b'  780 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageCallback>||\n'}
[8.455874] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.455909] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.455944] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:780:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.455981] (kruisee_lidar) StderrLine: {'line': b'  780 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrSerializedMessageCallback>||\n'}
[8.456016] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.456050] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:780:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.456085] (kruisee_lidar) StderrLine: {'line': b'  780 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.456120] (kruisee_lidar) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.456154] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:780:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.456189] (kruisee_lidar) StderrLine: {'line': b'  780 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.456224] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.456259] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:843:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.456294] (kruisee_lidar) StderrLine: {'line': b'  843 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrCallback>||\n'}
[8.456331] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.456366] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.456400] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:843:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.456435] (kruisee_lidar) StderrLine: {'line': b'  843 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrCallback>||\n'}
[8.456469] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.456504] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:843:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.456539] (kruisee_lidar) StderrLine: {'line': b'  843 |             std::is_same_v<T, SharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.456573] (kruisee_lidar) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.456608] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:843:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.456643] (kruisee_lidar) StderrLine: {'line': b'  843 |             std::is_same_v<T, SharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.456677] (kruisee_lidar) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.456711] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:781:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.456749] (kruisee_lidar) StderrLine: {'line': b'  781 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.456788] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.456823] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.456857] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:781:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.456892] (kruisee_lidar) StderrLine: {'line': b'  781 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.456927] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.456967] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:781:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.457003] (kruisee_lidar) StderrLine: {'line': b'  781 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.457038] (kruisee_lidar) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.457073] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:781:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.457111] (kruisee_lidar) StderrLine: {'line': b'  781 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.457146] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.457185] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:844:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.457224] (kruisee_lidar) StderrLine: {'line': b'  844 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrCallback>\n'}
[8.457276] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.457324] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.457360] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:844:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.457395] (kruisee_lidar) StderrLine: {'line': b'  844 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrCallback>\n'}
[8.457431] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.457475] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:844:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.457510] (kruisee_lidar) StderrLine: {'line': b'  844 |             std::is_same_v<T, ConstRefSharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[8.457544] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.457579] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:845:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.457614] (kruisee_lidar) StderrLine: {'line': b'  845 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[8.457649] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.457683] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:782:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.457719] (kruisee_lidar) StderrLine: {'line': b'  782 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[8.457754] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.457789] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.457823] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:782:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.457858] (kruisee_lidar) StderrLine: {'line': b'  782 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[8.457896] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.457930] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:782:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.457965] (kruisee_lidar) StderrLine: {'line': b'  782 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.458000] (kruisee_lidar) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.458034] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:782:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.458072] (kruisee_lidar) StderrLine: {'line': b'  782 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.458106] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.458140] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:850:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.458176] (kruisee_lidar) StderrLine: {'line': b'  850 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoCallback>||\n'}
[8.458210] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.458243] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.458277] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:850:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.458312] (kruisee_lidar) StderrLine: {'line': b'  850 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrWithInfoCallback>||\n'}
[8.458346] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.458380] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:850:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.458416] (kruisee_lidar) StderrLine: {'line': b'  850 |             std::is_same_v<T, SharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.458451] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.458485] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:850:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.458520] (kruisee_lidar) StderrLine: {'line': b'  850 |             std::is_same_v<T, SharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.458554] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.458589] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:783:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.458626] (kruisee_lidar) StderrLine: {'line': b'  783 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.458661] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.458696] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.458730] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:783:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.458765] (kruisee_lidar) StderrLine: {'line': b'  783 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.458800] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.458835] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:851:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.458870] (kruisee_lidar) StderrLine: {'line': b'  851 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoCallback>\n'}
[8.458904] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.458939] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.458972] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:783:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.459007] (kruisee_lidar) StderrLine: {'line': b'  783 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.459041] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.459075] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:851:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.459112] (kruisee_lidar) StderrLine: {'line': b'  851 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrWithInfoCallback>\n'}
[8.459145] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.459181] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:783:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.459226] (kruisee_lidar) StderrLine: {'line': b'  783 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.459260] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.459293] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:851:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.459330] (kruisee_lidar) StderrLine: {'line': b'  851 |             std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[8.459364] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.459397] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:852:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.459431] (kruisee_lidar) StderrLine: {'line': b'  852 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[8.459465] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.459499] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:857:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.459534] (kruisee_lidar) StderrLine: {'line': b'  857 |         else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[8.459568] (kruisee_lidar) StderrLine: {'line': b'      |                                 \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.459602] (kruisee_lidar) StderrLine: {'line': b'      |                                 \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.459635] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:857:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.459671] (kruisee_lidar) StderrLine: {'line': b'  857 |         else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[8.459705] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.459738] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:857:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.459776] (kruisee_lidar) StderrLine: {'line': b'  857 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT[readability/braces]\n'}
[8.459813] (kruisee_lidar) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.459847] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:784:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.459881] (kruisee_lidar) StderrLine: {'line': b'  784 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageCallback>||\n'}
[8.459915] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.459949] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.459982] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:857:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.460019] (kruisee_lidar) StderrLine: {'line': b'  857 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT[readability/braces]\n'}
[8.460053] (kruisee_lidar) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.460087] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:784:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.460120] (kruisee_lidar) StderrLine: {'line': b'  784 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrSerializedMessageCallback>||\n'}
[8.460154] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.460186] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:784:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.460220] (kruisee_lidar) StderrLine: {'line': b'  784 |           std::is_same_v<T, SharedPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.460254] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.460288] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:784:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.460324] (kruisee_lidar) StderrLine: {'line': b'  784 |           std::is_same_v<T, SharedPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.460358] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.460393] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:864:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.460427] (kruisee_lidar) StderrLine: {'line': b'  864 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[8.460464] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.460499] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.460532] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:864:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.460566] (kruisee_lidar) StderrLine: {'line': b'  864 |         } else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefWithInfoROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[8.460599] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.460633] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:864:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.460666] (kruisee_lidar) StderrLine: {'line': b'  864 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT[readability/braces]\n'}
[8.460702] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.460736] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:785:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.460770] (kruisee_lidar) StderrLine: {'line': b'  785 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageWithInfoCallback>)\n'}
[8.460805] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.460838] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.460872] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:864:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.460906] (kruisee_lidar) StderrLine: {'line': b'  864 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT[readability/braces]\n'}
[8.460939] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.460999] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:785:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.461035] (kruisee_lidar) StderrLine: {'line': b'  785 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrSerializedMessageWithInfoCallback>)\n'}
[8.461070] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.461105] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:785:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.461138] (kruisee_lidar) StderrLine: {'line': b'  785 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.461172] (kruisee_lidar) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.461205] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:785:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.461238] (kruisee_lidar) StderrLine: {'line': b'  785 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.461272] (kruisee_lidar) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.461306] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::dispatch_intra_process(std::unique_ptr<typename rclcpp::TypeAdapter<MessageT>::custom_type, typename rclcpp::detail::MessageDeleterHelper<typename rclcpp::TypeAdapter<MessageT>::custom_type, AllocatorT>::Deleter>, const rclcpp::MessageInfo&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.461345] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:813:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.461381] (kruisee_lidar) StderrLine: {'line': b'  813 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[8.461415] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.461448] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:813:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.461483] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:872:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.461517] (kruisee_lidar) StderrLine: {'line': b'  872 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrROSMessageCallback>||\n'}
[8.461570] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.461606] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.461647] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:872:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.461681] (kruisee_lidar) StderrLine: {'line': b'  872 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrROSMessageCallback>||\n'}
[8.461714] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.461746] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:872:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.461778] (kruisee_lidar) StderrLine: {'line': b'  872 |           std::is_same_v<T, UniquePtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.461811] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.461844] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:872:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.461878] (kruisee_lidar) StderrLine: {'line': b'  872 |           std::is_same_v<T, UniquePtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.461912] (kruisee_lidar) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.461945] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In lambda function:\n'}
[8.461979] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:824:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.462015] (kruisee_lidar) StderrLine: {'line': b'  824 |         if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefCallback>) {\n'}
[8.462049] (kruisee_lidar) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.462082] (kruisee_lidar) StderrLine: {'line': b'      |                                     \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.462118] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:824:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.462152] (kruisee_lidar) StderrLine: {'line': b'  824 |         if constexpr (is_ta && std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefCallback>) {\n'}
[8.462186] (kruisee_lidar) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.462221] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:824:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.462259] (kruisee_lidar) StderrLine: {'line': b'  824 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[8.462293] (kruisee_lidar) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.462327] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:824:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.462361] (kruisee_lidar) StderrLine: {'line': b'  824 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[8.462395] (kruisee_lidar) StderrLine: {'line': b'      |                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.462429] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:873:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.462465] (kruisee_lidar) StderrLine: {'line': b'  873 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrROSMessageCallback>)\n'}
[8.462499] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.462532] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.462566] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:873:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.462600] (kruisee_lidar) StderrLine: {'line': b'  873 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrROSMessageCallback>)\n'}
[8.462634] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.462667] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:873:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.462701] (kruisee_lidar) StderrLine: {'line': b'  873 |           std::is_same_v<T, SharedPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.462734] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.462768] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:873:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.462801] (kruisee_lidar) StderrLine: {'line': b'  873 |           std::is_same_v<T, SharedPtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.462837] (kruisee_lidar) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.462872] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:881:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.462907] (kruisee_lidar) StderrLine: {'line': b'  881 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoROSMessageCallback>||\n'}
[8.462941] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.462975] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.463008] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:881:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.463042] (kruisee_lidar) StderrLine: {'line': b'  881 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrWithInfoROSMessageCallback>||\n'}
[8.463076] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.463109] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:881:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.463143] (kruisee_lidar) StderrLine: {'line': b'  881 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.463178] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.463212] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:826:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.463248] (kruisee_lidar) StderrLine: {'line': b'  826 |         } else if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoCallback>) {  // NOLINT\n'}
[8.463282] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.463316] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.463349] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:881:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.463383] (kruisee_lidar) StderrLine: {'line': b'  881 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.463417] (kruisee_lidar) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.463451] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:826:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.463485] (kruisee_lidar) StderrLine: {'line': b'  826 |         } else if constexpr (is_ta && std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefWithInfoCallback>) {  // NOLINT\n'}
[8.463521] (kruisee_lidar) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.463554] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:826:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.463588] (kruisee_lidar) StderrLine: {'line': b'  826 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT\n'}
[8.463623] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.463657] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:826:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.463690] (kruisee_lidar) StderrLine: {'line': b'  826 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT\n'}
[8.463724] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.463758] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:882:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.463793] (kruisee_lidar) StderrLine: {'line': b'  882 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoROSMessageCallback>)\n'}
[8.463827] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.463859] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.463892] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:882:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.463927] (kruisee_lidar) StderrLine: {'line': b'  882 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrWithInfoROSMessageCallback>)\n'}
[8.463960] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.463994] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:882:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.464027] (kruisee_lidar) StderrLine: {'line': b'  882 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.464063] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.464096] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:882:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.464130] (kruisee_lidar) StderrLine: {'line': b'  882 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.464164] (kruisee_lidar) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.464197] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:830:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.464234] (kruisee_lidar) StderrLine: {'line': b'  830 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrCallback>||\n'}
[8.464267] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.464299] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.464331] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:830:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.464365] (kruisee_lidar) StderrLine: {'line': b'  830 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrCallback>||\n'}
[8.464399] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.464434] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:830:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.464467] (kruisee_lidar) StderrLine: {'line': b'  830 |             std::is_same_v<T, UniquePtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.464501] (kruisee_lidar) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.464533] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:830:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.464567] (kruisee_lidar) StderrLine: {'line': b'  830 |             std::is_same_v<T, UniquePtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.464606] (kruisee_lidar) StderrLine: {'line': b'      |                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.464641] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:890:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.464676] (kruisee_lidar) StderrLine: {'line': b'  890 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrROSMessageCallback>||\n'}
[8.464719] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.464758] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.464793] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:890:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.464831] (kruisee_lidar) StderrLine: {'line': b'  890 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrROSMessageCallback>||\n'}
[8.464866] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.464901] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:890:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.464936] (kruisee_lidar) StderrLine: {'line': b'  890 |           std::is_same_v<T, SharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.464982] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.465019] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:890:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.465054] (kruisee_lidar) StderrLine: {'line': b'  890 |           std::is_same_v<T, SharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.465089] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.465124] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:831:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.465159] (kruisee_lidar) StderrLine: {'line': b'  831 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrCallback>))\n'}
[8.465194] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.465228] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.465262] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:831:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.465297] (kruisee_lidar) StderrLine: {'line': b'  831 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrCallback>))\n'}
[8.465332] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.465366] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:831:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.465403] (kruisee_lidar) StderrLine: {'line': b'  831 |             std::is_same_v<T, SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K))\n'}
[8.465438] (kruisee_lidar) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.465473] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:831:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.465508] (kruisee_lidar) StderrLine: {'line': b'  831 |             std::is_same_v<T, SharedPtrCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[8.465543] (kruisee_lidar) StderrLine: {'line': b'      |                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.465577] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:891:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.465612] (kruisee_lidar) StderrLine: {'line': b'  891 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrROSMessageCallback>)\n'}
[8.465647] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.465682] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.465717] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:891:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.465755] (kruisee_lidar) StderrLine: {'line': b'  891 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrROSMessageCallback>)\n'}
[8.465790] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.465824] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:891:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.465860] (kruisee_lidar) StderrLine: {'line': b'  891 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.465894] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.465928] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:891:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.465963] (kruisee_lidar) StderrLine: {'line': b'  891 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.465997] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.466033] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:836:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.466068] (kruisee_lidar) StderrLine: {'line': b'  836 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoCallback>||\n'}
[8.466103] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.466137] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.466171] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:836:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.466206] (kruisee_lidar) StderrLine: {'line': b'  836 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrWithInfoCallback>||\n'}
[8.466240] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.466274] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:836:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.466309] (kruisee_lidar) StderrLine: {'line': b'  836 |             std::is_same_v<T, UniquePtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.466342] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.466375] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:836:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.466409] (kruisee_lidar) StderrLine: {'line': b'  836 |             std::is_same_v<T, UniquePtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.466446] (kruisee_lidar) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.466480] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:899:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.466515] (kruisee_lidar) StderrLine: {'line': b'  899 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.466549] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.466583] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.466618] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:899:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.466654] (kruisee_lidar) StderrLine: {'line': b'  899 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.466689] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.466724] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:899:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.466759] (kruisee_lidar) StderrLine: {'line': b'  899 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.466794] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.466829] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:899:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.466864] (kruisee_lidar) StderrLine: {'line': b'  899 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.466898] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.466933] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:837:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.466968] (kruisee_lidar) StderrLine: {'line': b'  837 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoCallback>\n'}
[8.467008] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.467043] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.467077] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:837:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.467112] (kruisee_lidar) StderrLine: {'line': b'  837 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrWithInfoCallback>\n'}
[8.467147] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.467181] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:837:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.467218] (kruisee_lidar) StderrLine: {'line': b'  837 |             std::is_same_v<T, SharedPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[8.467253] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.467291] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:838:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.467326] (kruisee_lidar) StderrLine: {'line': b'  838 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[8.467360] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.467395] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:900:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.467430] (kruisee_lidar) StderrLine: {'line': b'  900 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>)\n'}
[8.467464] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.467498] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.467533] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:900:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.467567] (kruisee_lidar) StderrLine: {'line': b'  900 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrWithInfoROSMessageCallback>)\n'}
[8.467602] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.467636] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:900:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.467671] (kruisee_lidar) StderrLine: {'line': b'  900 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.467705] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.467740] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:900:78:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.467774] (kruisee_lidar) StderrLine: {'line': b'  900 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.467808] (kruisee_lidar) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.467842] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:843:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.467877] (kruisee_lidar) StderrLine: {'line': b'  843 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrCallback>||\n'}
[8.467914] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.467949] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.467984] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:843:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.468019] (kruisee_lidar) StderrLine: {'line': b'  843 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrCallback>||\n'}
[8.468054] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.468089] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:843:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.468124] (kruisee_lidar) StderrLine: {'line': b'  843 |             std::is_same_v<T, SharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.468158] (kruisee_lidar) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.468192] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:843:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.468227] (kruisee_lidar) StderrLine: {'line': b'  843 |             std::is_same_v<T, SharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.468262] (kruisee_lidar) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.468297] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:910:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.468335] (kruisee_lidar) StderrLine: {'line': b'  910 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageCallback>||\n'}
[8.468369] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.468405] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.468440] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:910:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.468473] (kruisee_lidar) StderrLine: {'line': b'  910 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSerializedMessageCallback>||\n'}
[8.468507] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.468541] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:910:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.468576] (kruisee_lidar) StderrLine: {'line': b'  910 |           std::is_same_v<T, ConstRefSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.468609] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.468643] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:910:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.468680] (kruisee_lidar) StderrLine: {'line': b'  910 |           std::is_same_v<T, ConstRefSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.468715] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.468750] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:844:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.468785] (kruisee_lidar) StderrLine: {'line': b'  844 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrCallback>\n'}
[8.468818] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.468852] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.468886] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:844:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.468920] (kruisee_lidar) StderrLine: {'line': b'  844 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrCallback>\n'}
[8.468960] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.468998] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:844:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.469032] (kruisee_lidar) StderrLine: {'line': b'  844 |             std::is_same_v<T, ConstRefSharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[8.469067] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.469101] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:845:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.469136] (kruisee_lidar) StderrLine: {'line': b'  845 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[8.469171] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.469206] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:911:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.469241] (kruisee_lidar) StderrLine: {'line': b'  911 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageWithInfoCallback>||\n'}
[8.469278] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.469313] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.469346] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:911:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.469381] (kruisee_lidar) StderrLine: {'line': b'  911 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSerializedMessageWithInfoCallback>||\n'}
[8.469417] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.469452] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:911:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.469486] (kruisee_lidar) StderrLine: {'line': b'  911 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.469521] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.469555] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:911:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.469589] (kruisee_lidar) StderrLine: {'line': b'  911 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.469626] (kruisee_lidar) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.469663] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:850:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.469699] (kruisee_lidar) StderrLine: {'line': b'  850 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoCallback>||\n'}
[8.469734] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.469768] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.469802] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:850:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.469837] (kruisee_lidar) StderrLine: {'line': b'  850 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrWithInfoCallback>||\n'}
[8.469872] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.469905] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:850:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.469941] (kruisee_lidar) StderrLine: {'line': b'  850 |             std::is_same_v<T, SharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.469976] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.470010] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:850:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.470045] (kruisee_lidar) StderrLine: {'line': b'  850 |             std::is_same_v<T, SharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.470080] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.470115] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:912:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.470153] (kruisee_lidar) StderrLine: {'line': b'  912 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageCallback>||\n'}
[8.470188] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.470223] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.470258] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:912:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.470293] (kruisee_lidar) StderrLine: {'line': b'  912 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrSerializedMessageCallback>||\n'}
[8.470327] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.470362] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:912:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.470397] (kruisee_lidar) StderrLine: {'line': b'  912 |           std::is_same_v<T, UniquePtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.470431] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.470466] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:912:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.470501] (kruisee_lidar) StderrLine: {'line': b'  912 |           std::is_same_v<T, UniquePtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.470537] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.470574] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:851:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.470610] (kruisee_lidar) StderrLine: {'line': b'  851 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoCallback>\n'}
[8.470645] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.470679] (kruisee_lidar) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.470714] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:851:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.470750] (kruisee_lidar) StderrLine: {'line': b'  851 |             std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrWithInfoCallback>\n'}
[8.470785] (kruisee_lidar) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.470821] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:851:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.470857] (kruisee_lidar) StderrLine: {'line': b'  851 |             std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[8.470903] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.470943] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:852:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.470982] (kruisee_lidar) StderrLine: {'line': b'  852 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[8.471018] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.471053] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:913:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.471089] (kruisee_lidar) StderrLine: {'line': b'  913 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageWithInfoCallback>||\n'}
[8.471123] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.471157] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.471191] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:913:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.471226] (kruisee_lidar) StderrLine: {'line': b'  913 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrSerializedMessageWithInfoCallback>||\n'}
[8.471260] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.471294] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:913:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.471329] (kruisee_lidar) StderrLine: {'line': b'  913 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.471364] (kruisee_lidar) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.471398] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:913:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.471434] (kruisee_lidar) StderrLine: {'line': b'  913 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.471470] (kruisee_lidar) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.471504] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:914:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.471539] (kruisee_lidar) StderrLine: {'line': b'  914 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageCallback>||\n'}
[8.471574] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.471608] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.471645] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:914:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.471680] (kruisee_lidar) StderrLine: {'line': b'  914 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrSerializedMessageCallback>||\n'}
[8.471713] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.471748] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:914:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.471783] (kruisee_lidar) StderrLine: {'line': b'  914 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.471817] (kruisee_lidar) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.471851] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:857:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.471888] (kruisee_lidar) StderrLine: {'line': b'  857 |         else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[8.471923] (kruisee_lidar) StderrLine: {'line': b'      |                                 \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.471958] (kruisee_lidar) StderrLine: {'line': b'      |                                 \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.471993] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:914:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.472031] (kruisee_lidar) StderrLine: {'line': b'  914 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.472066] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.472101] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:857:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.472136] (kruisee_lidar) StderrLine: {'line': b'  857 |         else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[8.472171] (kruisee_lidar) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.472206] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:857:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.472245] (kruisee_lidar) StderrLine: {'line': b'  857 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT[readability/braces]\n'}
[8.472280] (kruisee_lidar) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.472314] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:857:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.472355] (kruisee_lidar) StderrLine: {'line': b'  857 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT[readability/braces]\n'}
[8.472389] (kruisee_lidar) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.472422] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:915:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.472457] (kruisee_lidar) StderrLine: {'line': b'  915 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.472491] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.472526] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.472560] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:915:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.472595] (kruisee_lidar) StderrLine: {'line': b'  915 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.472630] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.472664] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:915:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.472699] (kruisee_lidar) StderrLine: {'line': b'  915 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.472734] (kruisee_lidar) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.472768] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:915:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.472803] (kruisee_lidar) StderrLine: {'line': b'  915 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.472839] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.472873] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:864:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.472908] (kruisee_lidar) StderrLine: {'line': b'  864 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[8.472944] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.472994] (kruisee_lidar) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.473031] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:864:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.473071] (kruisee_lidar) StderrLine: {'line': b'  864 |         } else if constexpr (std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefWithInfoROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[8.473120] (kruisee_lidar) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.473157] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:864:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.473193] (kruisee_lidar) StderrLine: {'line': b'  864 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT[readability/braces]\n'}
[8.473228] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.473264] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:864:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.473300] (kruisee_lidar) StderrLine: {'line': b'  864 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT[readability/braces]\n'}
[8.473335] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.473371] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:916:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.473410] (kruisee_lidar) StderrLine: {'line': b'  916 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[8.473444] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.473479] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.473513] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:916:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.473548] (kruisee_lidar) StderrLine: {'line': b'  916 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[8.473583] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.473618] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:916:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.473653] (kruisee_lidar) StderrLine: {'line': b'  916 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.473688] (kruisee_lidar) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.473723] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:916:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.473759] (kruisee_lidar) StderrLine: {'line': b'  916 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.473795] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.473830] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:872:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.473865] (kruisee_lidar) StderrLine: {'line': b'  872 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrROSMessageCallback>||\n'}
[8.473900] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.473935] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.473970] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:872:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.474005] (kruisee_lidar) StderrLine: {'line': b'  872 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrROSMessageCallback>||\n'}
[8.474040] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.474074] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:872:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.474109] (kruisee_lidar) StderrLine: {'line': b'  872 |           std::is_same_v<T, UniquePtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.474144] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.474179] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:872:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.474214] (kruisee_lidar) StderrLine: {'line': b'  872 |           std::is_same_v<T, UniquePtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.474250] (kruisee_lidar) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.474287] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:917:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.474323] (kruisee_lidar) StderrLine: {'line': b'  917 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.474359] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.474393] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.474427] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:917:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.474461] (kruisee_lidar) StderrLine: {'line': b'  917 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.474498] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.474533] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:917:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.474568] (kruisee_lidar) StderrLine: {'line': b'  917 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.474603] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.474637] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:917:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.474674] (kruisee_lidar) StderrLine: {'line': b'  917 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.474708] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.474742] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:873:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.474778] (kruisee_lidar) StderrLine: {'line': b'  873 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrROSMessageCallback>)\n'}
[8.474813] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.474848] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.474881] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:873:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.474916] (kruisee_lidar) StderrLine: {'line': b'  873 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrROSMessageCallback>)\n'}
[8.474951] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.474985] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:873:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.475020] (kruisee_lidar) StderrLine: {'line': b'  873 |           std::is_same_v<T, SharedPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.475055] (kruisee_lidar) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.475089] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:873:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.475123] (kruisee_lidar) StderrLine: {'line': b'  873 |           std::is_same_v<T, SharedPtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.475158] (kruisee_lidar) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.475192] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:918:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.475230] (kruisee_lidar) StderrLine: {'line': b'  918 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageCallback>||\n'}
[8.475265] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.475299] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.475332] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:918:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.475368] (kruisee_lidar) StderrLine: {'line': b'  918 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrSerializedMessageCallback>||\n'}
[8.475402] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.475438] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:918:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.475475] (kruisee_lidar) StderrLine: {'line': b'  918 |           std::is_same_v<T, SharedPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.475509] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.475545] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:918:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.475581] (kruisee_lidar) StderrLine: {'line': b'  918 |           std::is_same_v<T, SharedPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.475615] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.475651] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:881:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.475686] (kruisee_lidar) StderrLine: {'line': b'  881 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoROSMessageCallback>||\n'}
[8.475720] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.475755] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.475790] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:881:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.475825] (kruisee_lidar) StderrLine: {'line': b'  881 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrWithInfoROSMessageCallback>||\n'}
[8.475860] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.475894] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:881:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.475932] (kruisee_lidar) StderrLine: {'line': b'  881 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.475970] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.476005] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:881:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.476041] (kruisee_lidar) StderrLine: {'line': b'  881 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.476076] (kruisee_lidar) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.476110] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:919:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.476145] (kruisee_lidar) StderrLine: {'line': b'  919 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageWithInfoCallback>)\n'}
[8.476180] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.476214] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.476249] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:919:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.476283] (kruisee_lidar) StderrLine: {'line': b'  919 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrSerializedMessageWithInfoCallback>)\n'}
[8.476318] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.476352] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:919:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.476387] (kruisee_lidar) StderrLine: {'line': b'  919 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.476421] (kruisee_lidar) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.476457] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:919:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.476491] (kruisee_lidar) StderrLine: {'line': b'  919 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.476526] (kruisee_lidar) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.476560] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:882:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.476597] (kruisee_lidar) StderrLine: {'line': b'  882 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoROSMessageCallback>)\n'}
[8.476631] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.476665] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.476701] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:882:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.476736] (kruisee_lidar) StderrLine: {'line': b'  882 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrWithInfoROSMessageCallback>)\n'}
[8.476771] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.476805] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:882:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.476842] (kruisee_lidar) StderrLine: {'line': b'  882 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.476876] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.476911] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:882:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.476946] (kruisee_lidar) StderrLine: {'line': b'  882 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.476999] (kruisee_lidar) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.477035] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:890:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.477071] (kruisee_lidar) StderrLine: {'line': b'  890 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrROSMessageCallback>||\n'}
[8.477105] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.477140] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.477174] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:890:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.477214] (kruisee_lidar) StderrLine: {'line': b'  890 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrROSMessageCallback>||\n'}
[8.477250] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.477285] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:890:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.477320] (kruisee_lidar) StderrLine: {'line': b'  890 |           std::is_same_v<T, SharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.477355] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.477390] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:890:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.477429] (kruisee_lidar) StderrLine: {'line': b'  890 |           std::is_same_v<T, SharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.477466] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.477501] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kconstexpr bool rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::use_take_shared_method() const\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.477537] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:938:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.477574] (kruisee_lidar) StderrLine: {'line': b'  938 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedConstPtrCallback>(callback_variant_) ||\n'}
[8.477610] (kruisee_lidar) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.477645] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:938:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.477680] (kruisee_lidar) StderrLine: {'line': b'  938 |       std::holds_alternative<SharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[8.477715] (kruisee_lidar) StderrLine: {'line': b'      |                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.477750] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:891:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.477789] (kruisee_lidar) StderrLine: {'line': b'  891 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrROSMessageCallback>)\n'}
[8.477823] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.477858] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.477892] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:891:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.477927] (kruisee_lidar) StderrLine: {'line': b'  891 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrROSMessageCallback>)\n'}
[8.477961] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.477996] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:891:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.478031] (kruisee_lidar) StderrLine: {'line': b'  891 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.478066] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.478102] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:891:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.478138] (kruisee_lidar) StderrLine: {'line': b'  891 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.478175] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.478209] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:899:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.478245] (kruisee_lidar) StderrLine: {'line': b'  899 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.478294] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.478334] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.478370] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:899:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.478406] (kruisee_lidar) StderrLine: {'line': b'  899 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrWithInfoROSMessageCallback>||\n'}
[8.478440] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.478474] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:899:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.478514] (kruisee_lidar) StderrLine: {'line': b'  899 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.478549] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.478583] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:899:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.478618] (kruisee_lidar) StderrLine: {'line': b'  899 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.478653] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.478687] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:939:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.478724] (kruisee_lidar) StderrLine: {'line': b'  939 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedConstPtrWithInfoCallback>(callback_variant_) ||\n'}
[8.478760] (kruisee_lidar) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.478795] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:939:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.478830] (kruisee_lidar) StderrLine: {'line': b'  939 |       std::holds_alternative<SharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[8.478865] (kruisee_lidar) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.478901] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:900:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.478946] (kruisee_lidar) StderrLine: {'line': b'  900 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>)\n'}
[8.478980] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.479013] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.479048] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:900:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.479086] (kruisee_lidar) StderrLine: {'line': b'  900 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrWithInfoROSMessageCallback>)\n'}
[8.479121] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.479155] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:900:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.479190] (kruisee_lidar) StderrLine: {'line': b'  900 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.479225] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.479259] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:900:78:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.479292] (kruisee_lidar) StderrLine: {'line': b'  900 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.479327] (kruisee_lidar) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.479363] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:910:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.479399] (kruisee_lidar) StderrLine: {'line': b'  910 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageCallback>||\n'}
[8.479433] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.479467] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.479501] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:910:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.479536] (kruisee_lidar) StderrLine: {'line': b'  910 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSerializedMessageCallback>||\n'}
[8.479569] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.479603] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:910:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.479640] (kruisee_lidar) StderrLine: {'line': b'  910 |           std::is_same_v<T, ConstRefSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.479674] (kruisee_lidar) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.479708] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:910:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.479745] (kruisee_lidar) StderrLine: {'line': b'  910 |           std::is_same_v<T, ConstRefSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.479780] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.479815] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:940:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.479850] (kruisee_lidar) StderrLine: {'line': b'  940 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<ConstRefSharedConstPtrCallback>(callback_variant_) ||\n'}
[8.479885] (kruisee_lidar) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.479920] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:940:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.479955] (kruisee_lidar) StderrLine: {'line': b'  940 |       std::holds_alternative<ConstRefSharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[8.479989] (kruisee_lidar) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.480024] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:911:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.480060] (kruisee_lidar) StderrLine: {'line': b'  911 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageWithInfoCallback>||\n'}
[8.480097] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.480131] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.480165] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:911:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.480199] (kruisee_lidar) StderrLine: {'line': b'  911 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSerializedMessageWithInfoCallback>||\n'}
[8.480234] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.480269] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:911:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.480304] (kruisee_lidar) StderrLine: {'line': b'  911 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.480341] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.480375] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:911:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.480411] (kruisee_lidar) StderrLine: {'line': b'  911 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.480446] (kruisee_lidar) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.480480] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:912:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.480517] (kruisee_lidar) StderrLine: {'line': b'  912 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageCallback>||\n'}
[8.480552] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.480588] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.480623] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:912:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.480658] (kruisee_lidar) StderrLine: {'line': b'  912 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrSerializedMessageCallback>||\n'}
[8.480693] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.480727] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:912:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.480762] (kruisee_lidar) StderrLine: {'line': b'  912 |           std::is_same_v<T, UniquePtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.480796] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.480831] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:912:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.480866] (kruisee_lidar) StderrLine: {'line': b'  912 |           std::is_same_v<T, UniquePtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.480899] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.480934] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:941:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.480981] (kruisee_lidar) StderrLine: {'line': b'  941 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<ConstRefSharedConstPtrWithInfoCallback>(callback_variant_);\n'}
[8.481016] (kruisee_lidar) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.481051] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:941:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.481087] (kruisee_lidar) StderrLine: {'line': b'  941 |       std::holds_alternative<ConstRefSharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_);\n'}
[8.481122] (kruisee_lidar) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.481156] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:913:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.481192] (kruisee_lidar) StderrLine: {'line': b'  913 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageWithInfoCallback>||\n'}
[8.481227] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.481263] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.481298] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:913:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.481333] (kruisee_lidar) StderrLine: {'line': b'  913 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K UniquePtrSerializedMessageWithInfoCallback>||\n'}
[8.481367] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.481402] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:913:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.481436] (kruisee_lidar) StderrLine: {'line': b'  913 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.481471] (kruisee_lidar) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.481506] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:913:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.481541] (kruisee_lidar) StderrLine: {'line': b'  913 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.481575] (kruisee_lidar) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.481611] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kconstexpr bool rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::is_serialized_message_callback() const\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.481646] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:949:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.481681] (kruisee_lidar) StderrLine: {'line': b'  949 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<ConstRefSerializedMessageCallback>(callback_variant_) ||\n'}
[8.481715] (kruisee_lidar) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.481749] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:949:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.481788] (kruisee_lidar) StderrLine: {'line': b'  949 |       std::holds_alternative<ConstRefSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[8.481823] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.481856] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:914:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.481896] (kruisee_lidar) StderrLine: {'line': b'  914 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageCallback>||\n'}
[8.481940] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.481974] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.482008] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:914:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.482042] (kruisee_lidar) StderrLine: {'line': b'  914 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrSerializedMessageCallback>||\n'}
[8.482077] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.482111] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:914:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.482146] (kruisee_lidar) StderrLine: {'line': b'  914 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.482182] (kruisee_lidar) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.482216] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:914:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.482251] (kruisee_lidar) StderrLine: {'line': b'  914 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.482286] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.482320] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:915:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.482357] (kruisee_lidar) StderrLine: {'line': b'  915 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.482391] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.482425] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.482462] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:915:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.482502] (kruisee_lidar) StderrLine: {'line': b'  915 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.482536] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.482571] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:915:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.482606] (kruisee_lidar) StderrLine: {'line': b'  915 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.482642] (kruisee_lidar) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.482677] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:915:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.482713] (kruisee_lidar) StderrLine: {'line': b'  915 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.482748] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.482782] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:950:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.482818] (kruisee_lidar) StderrLine: {'line': b'  950 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<UniquePtrSerializedMessageCallback>(callback_variant_) ||\n'}
[8.482852] (kruisee_lidar) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.482887] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:950:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.482922] (kruisee_lidar) StderrLine: {'line': b'  950 |       std::holds_alternative<UniquePtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[8.482972] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.483008] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:916:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.483046] (kruisee_lidar) StderrLine: {'line': b'  916 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[8.483081] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.483116] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.483151] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:916:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.483186] (kruisee_lidar) StderrLine: {'line': b'  916 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[8.483224] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.483259] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:916:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.483293] (kruisee_lidar) StderrLine: {'line': b'  916 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.483328] (kruisee_lidar) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.483362] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:916:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.483400] (kruisee_lidar) StderrLine: {'line': b'  916 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.483434] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.483470] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:917:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.483507] (kruisee_lidar) StderrLine: {'line': b'  917 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.483543] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.483579] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.483613] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:917:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.483649] (kruisee_lidar) StderrLine: {'line': b'  917 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[8.483684] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.483719] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:917:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.483754] (kruisee_lidar) StderrLine: {'line': b'  917 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.483789] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.483824] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:917:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.483859] (kruisee_lidar) StderrLine: {'line': b'  917 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.483893] (kruisee_lidar) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.483928] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:951:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.483965] (kruisee_lidar) StderrLine: {'line': b'  951 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedConstPtrSerializedMessageCallback>(callback_variant_) ||\n'}
[8.484000] (kruisee_lidar) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.484035] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:951:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.484079] (kruisee_lidar) StderrLine: {'line': b'  951 |       std::holds_alternative<SharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[8.484119] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.484154] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:918:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.484190] (kruisee_lidar) StderrLine: {'line': b'  918 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageCallback>||\n'}
[8.484229] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.484267] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.484302] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:918:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.484337] (kruisee_lidar) StderrLine: {'line': b'  918 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrSerializedMessageCallback>||\n'}
[8.484371] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.484405] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:918:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.484443] (kruisee_lidar) StderrLine: {'line': b'  918 |           std::is_same_v<T, SharedPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[8.484479] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.484514] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:918:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.484548] (kruisee_lidar) StderrLine: {'line': b'  918 |           std::is_same_v<T, SharedPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[8.484582] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[8.484618] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:919:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.484657] (kruisee_lidar) StderrLine: {'line': b'  919 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageWithInfoCallback>)\n'}
[8.484692] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.484727] (kruisee_lidar) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.484760] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:919:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.484796] (kruisee_lidar) StderrLine: {'line': b'  919 |           std::is_same_v<T\x1b[01;31m\x1b[K,\x1b[m\x1b[K SharedPtrSerializedMessageWithInfoCallback>)\n'}
[8.484832] (kruisee_lidar) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.484867] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:919:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.484903] (kruisee_lidar) StderrLine: {'line': b'  919 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[8.484938] (kruisee_lidar) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.484982] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:919:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.485018] (kruisee_lidar) StderrLine: {'line': b'  919 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[8.485053] (kruisee_lidar) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.485088] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:952:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.485123] (kruisee_lidar) StderrLine: {'line': b'  952 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<ConstRefSharedConstPtrSerializedMessageCallback>(callback_variant_) ||\n'}
[8.485157] (kruisee_lidar) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.485191] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:952:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.485226] (kruisee_lidar) StderrLine: {'line': b'  952 |       std::holds_alternative<ConstRefSharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[8.485270] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.485324] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:953:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.485370] (kruisee_lidar) StderrLine: {'line': b'  953 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedPtrSerializedMessageCallback>(callback_variant_);\n'}
[8.485411] (kruisee_lidar) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.485451] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kconstexpr bool rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::use_take_shared_method() const\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.485487] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:938:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.485524] (kruisee_lidar) StderrLine: {'line': b'  938 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedConstPtrCallback>(callback_variant_) ||\n'}
[8.485559] (kruisee_lidar) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.485602] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:953:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.485639] (kruisee_lidar) StderrLine: {'line': b'  953 |       std::holds_alternative<SharedPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_);\n'}
[8.485674] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.485708] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:938:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.485744] (kruisee_lidar) StderrLine: {'line': b'  938 |       std::holds_alternative<SharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[8.485779] (kruisee_lidar) StderrLine: {'line': b'      |                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.485814] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::register_callback_for_tracing()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.485852] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:960:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.485892] (kruisee_lidar) StderrLine: {'line': b'  960 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[8.485933] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.485969] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:960:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.486005] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:939:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.486039] (kruisee_lidar) StderrLine: {'line': b'  939 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedConstPtrWithInfoCallback>(callback_variant_) ||\n'}
[8.486074] (kruisee_lidar) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.486109] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:939:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.486147] (kruisee_lidar) StderrLine: {'line': b'  939 |       std::holds_alternative<SharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[8.486183] (kruisee_lidar) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.486234] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:940:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.486287] (kruisee_lidar) StderrLine: {'line': b'  940 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<ConstRefSharedConstPtrCallback>(callback_variant_) ||\n'}
[8.486339] (kruisee_lidar) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.486385] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:940:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.486425] (kruisee_lidar) StderrLine: {'line': b'  940 |       std::holds_alternative<ConstRefSharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[8.486461] (kruisee_lidar) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.486496] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:941:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.486532] (kruisee_lidar) StderrLine: {'line': b'  941 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<ConstRefSharedConstPtrWithInfoCallback>(callback_variant_);\n'}
[8.486567] (kruisee_lidar) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.486602] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:941:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.486638] (kruisee_lidar) StderrLine: {'line': b'  941 |       std::holds_alternative<ConstRefSharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_);\n'}
[8.486674] (kruisee_lidar) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.486710] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kconstexpr bool rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::is_serialized_message_callback() const\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.486745] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:949:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.486784] (kruisee_lidar) StderrLine: {'line': b'  949 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<ConstRefSerializedMessageCallback>(callback_variant_) ||\n'}
[8.486819] (kruisee_lidar) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.486854] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:949:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.486891] (kruisee_lidar) StderrLine: {'line': b'  949 |       std::holds_alternative<ConstRefSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[8.486927] (kruisee_lidar) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.486962] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:950:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.486999] (kruisee_lidar) StderrLine: {'line': b'  950 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<UniquePtrSerializedMessageCallback>(callback_variant_) ||\n'}
[8.487035] (kruisee_lidar) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.487070] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:950:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.487113] (kruisee_lidar) StderrLine: {'line': b'  950 |       std::holds_alternative<UniquePtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[8.487148] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.487183] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:951:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.487218] (kruisee_lidar) StderrLine: {'line': b'  951 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedConstPtrSerializedMessageCallback>(callback_variant_) ||\n'}
[8.487254] (kruisee_lidar) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.487290] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:951:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.487326] (kruisee_lidar) StderrLine: {'line': b'  951 |       std::holds_alternative<SharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[8.487361] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.487395] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:952:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.487431] (kruisee_lidar) StderrLine: {'line': b'  952 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<ConstRefSharedConstPtrSerializedMessageCallback>(callback_variant_) ||\n'}
[8.487466] (kruisee_lidar) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.487501] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:952:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.487546] (kruisee_lidar) StderrLine: {'line': b'  952 |       std::holds_alternative<ConstRefSharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[8.487589] (kruisee_lidar) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.487624] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:953:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.487659] (kruisee_lidar) StderrLine: {'line': b'  953 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedPtrSerializedMessageCallback>(callback_variant_);\n'}
[8.487694] (kruisee_lidar) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.487728] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:953:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.487763] (kruisee_lidar) StderrLine: {'line': b'  953 |       std::holds_alternative<SharedPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_);\n'}
[8.487799] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.487833] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::register_callback_for_tracing()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.487869] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:960:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.487906] (kruisee_lidar) StderrLine: {'line': b'  960 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[8.487941] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.487975] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:960:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[8.517899] (-) TimerEvent: {}
[8.561381] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:45\x1b[m\x1b[K,\n'}
[8.561532] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[8.561630] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[8.561687] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[8.561813] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[8.561851] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[8.561886] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[8.561922] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[8.561956] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.561990] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/include/node.h:11\x1b[m\x1b[K,\n'}
[8.562028] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/node.cc:9\x1b[m\x1b[K:\n'}
[8.562062] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_options.hpp:\x1b[m\x1b[K At global scope:\n'}
[8.562096] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_options.hpp:94:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_void_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_void\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.562133] (kruisee_lidar) StderrLine: {'line': b'   94 |     std::\x1b[01;31m\x1b[Kis_void_v\x1b[m\x1b[K<typename std::allocator_traits<Allocator>::value_type>,\n'}
[8.562167] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.562200] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[32m\x1b[Kis_void\x1b[m\x1b[K\n'}
[8.562248] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_options.hpp:94:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K(\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.562292] (kruisee_lidar) StderrLine: {'line': b'   94 |     std::is_void_v<typename std::allocator_traits<Allocator>::value_type\x1b[01;31m\x1b[K>\x1b[m\x1b[K,\n'}
[8.562327] (kruisee_lidar) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.562361] (kruisee_lidar) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K(\x1b[m\x1b[K\n'}
[8.562394] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_options.hpp:94:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.562428] (kruisee_lidar) StderrLine: {'line': b'   94 |     std::is_void_v<typename std::allocator_traits<Allocator>::value_type>\x1b[01;31m\x1b[K,\x1b[m\x1b[K\n'}
[8.562461] (kruisee_lidar) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.562494] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:45\x1b[m\x1b[K,\n'}
[8.562527] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[8.562560] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[8.562593] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[8.562625] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[8.562658] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[8.562690] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[8.562724] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[8.562757] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.562791] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/main.cc:9\x1b[m\x1b[K:\n'}
[8.562824] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_options.hpp:\x1b[m\x1b[K At global scope:\n'}
[8.562857] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_options.hpp:94:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_void_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_void\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.562891] (kruisee_lidar) StderrLine: {'line': b'   94 |     std::\x1b[01;31m\x1b[Kis_void_v\x1b[m\x1b[K<typename std::allocator_traits<Allocator>::value_type>,\n'}
[8.562926] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.562960] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[32m\x1b[Kis_void\x1b[m\x1b[K\n'}
[8.562993] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_options.hpp:94:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K(\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.563027] (kruisee_lidar) StderrLine: {'line': b'   94 |     std::is_void_v<typename std::allocator_traits<Allocator>::value_type\x1b[01;31m\x1b[K>\x1b[m\x1b[K,\n'}
[8.563061] (kruisee_lidar) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.563094] (kruisee_lidar) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K(\x1b[m\x1b[K\n'}
[8.563127] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_options.hpp:94:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.563160] (kruisee_lidar) StderrLine: {'line': b'   94 |     std::is_void_v<typename std::allocator_traits<Allocator>::value_type>\x1b[01;31m\x1b[K,\x1b[m\x1b[K\n'}
[8.563193] (kruisee_lidar) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.588197] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:42\x1b[m\x1b[K,\n'}
[8.588390] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[8.588440] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[8.588484] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[8.588521] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[8.588556] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[8.588591] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[8.588625] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[8.588659] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[8.588694] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[8.588731] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.588765] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/main.cc:9\x1b[m\x1b[K:\n'}
[8.588800] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher_options.hpp:69:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_void_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_void\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.588837] (kruisee_lidar) StderrLine: {'line': b'   69 |     std::\x1b[01;31m\x1b[Kis_void_v\x1b[m\x1b[K<typename std::allocator_traits<Allocator>::value_type>,\n'}
[8.588871] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.588910] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[32m\x1b[Kis_void\x1b[m\x1b[K\n'}
[8.588945] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:42\x1b[m\x1b[K,\n'}
[8.589000] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[8.589035] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[8.589076] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[8.589108] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[8.589141] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[8.589173] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[8.589205] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[8.589237] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[8.589268] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[8.589299] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.589333] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/include/node.h:11\x1b[m\x1b[K,\n'}
[8.589366] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/node.cc:9\x1b[m\x1b[K:\n'}
[8.589408] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher_options.hpp:69:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_void_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_void\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.589455] (kruisee_lidar) StderrLine: {'line': b'   69 |     std::\x1b[01;31m\x1b[Kis_void_v\x1b[m\x1b[K<typename std::allocator_traits<Allocator>::value_type>,\n'}
[8.589492] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.589526] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[32m\x1b[Kis_void\x1b[m\x1b[K\n'}
[8.589562] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher_options.hpp:69:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K(\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.589605] (kruisee_lidar) StderrLine: {'line': b'   69 |     std::is_void_v<typename std::allocator_traits<Allocator>::value_type\x1b[01;31m\x1b[K>\x1b[m\x1b[K,\n'}
[8.589640] (kruisee_lidar) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.589673] (kruisee_lidar) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K(\x1b[m\x1b[K\n'}
[8.589707] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher_options.hpp:69:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K(\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.589741] (kruisee_lidar) StderrLine: {'line': b'   69 |     std::is_void_v<typename std::allocator_traits<Allocator>::value_type\x1b[01;31m\x1b[K>\x1b[m\x1b[K,\n'}
[8.589775] (kruisee_lidar) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.589808] (kruisee_lidar) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K(\x1b[m\x1b[K\n'}
[8.589841] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher_options.hpp:69:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.589876] (kruisee_lidar) StderrLine: {'line': b'   69 |     std::is_void_v<typename std::allocator_traits<Allocator>::value_type>\x1b[01;31m\x1b[K,\x1b[m\x1b[K\n'}
[8.589910] (kruisee_lidar) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.589944] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher_options.hpp:69:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.589978] (kruisee_lidar) StderrLine: {'line': b'   69 |     std::is_void_v<typename std::allocator_traits<Allocator>::value_type>\x1b[01;31m\x1b[K,\x1b[m\x1b[K\n'}
[8.590012] (kruisee_lidar) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.599124] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[8.599267] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[8.599310] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[8.599347] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[8.599383] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[8.599419] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[8.599461] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[8.599501] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.599547] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/main.cc:9\x1b[m\x1b[K:\n'}
[8.599584] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:295:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.599623] (kruisee_lidar) StderrLine: {'line': b'  295 |     std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<TakeT, SubscribedType>,\n'}
[8.599659] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.599693] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.599789] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:293:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kparse error in template argument list\n'}
[8.599825] (kruisee_lidar) StderrLine: {'line': b'  293 |   std::\x1b[01;31m\x1b[Kenable_if_t<\x1b[m\x1b[K\n'}
[8.599859] (kruisee_lidar) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.599893] (kruisee_lidar) StderrLine: {'line': b'  294 | \x1b[01;31m\x1b[K    !rosidl_generator_traits::is_message<TakeT>::value &&\x1b[m\x1b[K\n'}
[8.599927] (kruisee_lidar) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.599960] (kruisee_lidar) StderrLine: {'line': b'  295 | \x1b[01;31m\x1b[K    std::is_same_v<TakeT, SubscribedType>\x1b[m\x1b[K,\n'}
[8.599994] (kruisee_lidar) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.600027] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:295:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.600064] (kruisee_lidar) StderrLine: {'line': b'  295 |     std::is_same_v<TakeT, SubscribedType>\x1b[01;31m\x1b[K,\x1b[m\x1b[K\n'}
[8.600097] (kruisee_lidar) StderrLine: {'line': b'      |                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.600130] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[8.600164] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[8.600196] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[8.600232] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[8.600265] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[8.600297] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[8.600331] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[8.600363] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.600396] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/include/node.h:11\x1b[m\x1b[K,\n'}
[8.600429] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/node.cc:9\x1b[m\x1b[K:\n'}
[8.600464] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:295:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.600499] (kruisee_lidar) StderrLine: {'line': b'  295 |     std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<TakeT, SubscribedType>,\n'}
[8.600532] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.600565] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[8.600598] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:293:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kparse error in template argument list\n'}
[8.600633] (kruisee_lidar) StderrLine: {'line': b'  293 |   std::\x1b[01;31m\x1b[Kenable_if_t<\x1b[m\x1b[K\n'}
[8.600666] (kruisee_lidar) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.600699] (kruisee_lidar) StderrLine: {'line': b'  294 | \x1b[01;31m\x1b[K    !rosidl_generator_traits::is_message<TakeT>::value &&\x1b[m\x1b[K\n'}
[8.600731] (kruisee_lidar) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.600763] (kruisee_lidar) StderrLine: {'line': b'  295 | \x1b[01;31m\x1b[K    std::is_same_v<TakeT, SubscribedType>\x1b[m\x1b[K,\n'}
[8.600796] (kruisee_lidar) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.600829] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:295:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[8.600862] (kruisee_lidar) StderrLine: {'line': b'  295 |     std::is_same_v<TakeT, SubscribedType>\x1b[01;31m\x1b[K,\x1b[m\x1b[K\n'}
[8.600897] (kruisee_lidar) StderrLine: {'line': b'      |                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.618017] (-) TimerEvent: {}
[8.718296] (-) TimerEvent: {}
[8.805535] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[8.805684] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[8.805727] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[8.805763] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[8.805798] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[8.805834] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[8.805867] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[8.805903] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[8.805937] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[8.805973] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.806006] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/main.cc:9\x1b[m\x1b[K:\n'}
[8.806047] (kruisee_lidar) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::AnySubscriptionCallback<rcl_interfaces::msg::ParameterEvent_<std::allocator<void> >, std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.806082] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:423:49:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::Subscription<rcl_interfaces::msg::ParameterEvent_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.806120] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_client.hpp:208:69:\x1b[m\x1b[K   required from here\n'}
[8.806154] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:971:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Kvariant_type\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::detail::AnySubscriptionCallbackHelper<rcl_interfaces::msg::ParameterEvent_<std::allocator<void> >, std::allocator<void>, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.806191] (kruisee_lidar) StderrLine: {'line': b'  971 |   \x1b[01;31m\x1b[Kget_variant\x1b[m\x1b[K()\n'}
[8.806224] (kruisee_lidar) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.806257] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:977:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Kvariant_type\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::detail::AnySubscriptionCallbackHelper<rcl_interfaces::msg::ParameterEvent_<std::allocator<void> >, std::allocator<void>, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.806293] (kruisee_lidar) StderrLine: {'line': b'  977 |   \x1b[01;31m\x1b[Kget_variant\x1b[m\x1b[K() const\n'}
[8.806324] (kruisee_lidar) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.806356] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[8.806387] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[8.806420] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[8.806452] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[8.806486] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[8.806522] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[8.806556] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[8.806591] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[8.806626] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[8.806660] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.806697] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/include/node.h:11\x1b[m\x1b[K,\n'}
[8.806733] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/node.cc:9\x1b[m\x1b[K:\n'}
[8.806768] (kruisee_lidar) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::AnySubscriptionCallback<rcl_interfaces::msg::ParameterEvent_<std::allocator<void> >, std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.806803] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:423:49:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::Subscription<rcl_interfaces::msg::ParameterEvent_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.806837] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_client.hpp:208:69:\x1b[m\x1b[K   required from here\n'}
[8.806871] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:971:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Kvariant_type\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::detail::AnySubscriptionCallbackHelper<rcl_interfaces::msg::ParameterEvent_<std::allocator<void> >, std::allocator<void>, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.806907] (kruisee_lidar) StderrLine: {'line': b'  971 |   \x1b[01;31m\x1b[Kget_variant\x1b[m\x1b[K()\n'}
[8.806940] (kruisee_lidar) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.806973] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:987:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Kvariant_type\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::detail::AnySubscriptionCallbackHelper<rcl_interfaces::msg::ParameterEvent_<std::allocator<void> >, std::allocator<void>, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.807009] (kruisee_lidar) StderrLine: {'line': b'  987 |   typename HelperT::variant_type \x1b[01;31m\x1b[Kcallback_variant_\x1b[m\x1b[K;\n'}
[8.807043] (kruisee_lidar) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.807077] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:977:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Kvariant_type\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::detail::AnySubscriptionCallbackHelper<rcl_interfaces::msg::ParameterEvent_<std::allocator<void> >, std::allocator<void>, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.807113] (kruisee_lidar) StderrLine: {'line': b'  977 |   \x1b[01;31m\x1b[Kget_variant\x1b[m\x1b[K() const\n'}
[8.807147] (kruisee_lidar) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.807180] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:987:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Kvariant_type\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::detail::AnySubscriptionCallbackHelper<rcl_interfaces::msg::ParameterEvent_<std::allocator<void> >, std::allocator<void>, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.807215] (kruisee_lidar) StderrLine: {'line': b'  987 |   typename HelperT::variant_type \x1b[01;31m\x1b[Kcallback_variant_\x1b[m\x1b[K;\n'}
[8.807249] (kruisee_lidar) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.818409] (-) TimerEvent: {}
[8.918718] (-) TimerEvent: {}
[8.935654] (kruisee_lidar) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::AnySubscriptionCallback<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.935815] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:423:49:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.935862] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/include/node.h:63:48:\x1b[m\x1b[K   required from here\n'}
[8.935898] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:971:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Kvariant_type\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::detail::AnySubscriptionCallbackHelper<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void>, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.935936] (kruisee_lidar) StderrLine: {'line': b'  971 |   \x1b[01;31m\x1b[Kget_variant\x1b[m\x1b[K()\n'}
[8.935970] (kruisee_lidar) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.936004] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:977:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Kvariant_type\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::detail::AnySubscriptionCallbackHelper<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void>, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.936042] (kruisee_lidar) StderrLine: {'line': b'  977 |   \x1b[01;31m\x1b[Kget_variant\x1b[m\x1b[K() const\n'}
[8.936076] (kruisee_lidar) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.936109] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:987:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Kvariant_type\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::detail::AnySubscriptionCallbackHelper<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void>, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.936146] (kruisee_lidar) StderrLine: {'line': b'  987 |   typename HelperT::variant_type \x1b[01;31m\x1b[Kcallback_variant_\x1b[m\x1b[K;\n'}
[8.936182] (kruisee_lidar) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.940262] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/node.cc:9\x1b[m\x1b[K:\n'}
[8.940401] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/include/node.h:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KNode::Node(const string&, bool)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.940449] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/include/node.h:72:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KNode::is_scan_\x1b[m\x1b[K\xe2\x80\x99 will be initialized after [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[8.940491] (kruisee_lidar) StderrLine: {'line': b'   72 |     bool \x1b[01;35m\x1b[Kis_scan_\x1b[m\x1b[K;\n'}
[8.940527] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.940563] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/include/node.h:65:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kbool Node::ctl_run_\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[8.940600] (kruisee_lidar) StderrLine: {'line': b'   65 |     bool \x1b[01;35m\x1b[Kctl_run_\x1b[m\x1b[K;\n'}
[8.940644] (kruisee_lidar) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.940679] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/node.cc:23:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  when initialized here [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[8.940716] (kruisee_lidar) StderrLine: {'line': b'   23 | \x1b[01;35m\x1b[KNode\x1b[m\x1b[K::Node(const std::string &frame_id, bool is_scan)\n'}
[8.940751] (kruisee_lidar) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[8.958201] (kruisee_lidar) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::AnySubscriptionCallback<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.958362] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:423:49:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.958407] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/include/node.h:63:48:\x1b[m\x1b[K   required from here\n'}
[8.958444] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:971:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Kvariant_type\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::detail::AnySubscriptionCallbackHelper<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void>, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.958481] (kruisee_lidar) StderrLine: {'line': b'  971 |   \x1b[01;31m\x1b[Kget_variant\x1b[m\x1b[K()\n'}
[8.958517] (kruisee_lidar) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.958551] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:977:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Kvariant_type\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::detail::AnySubscriptionCallbackHelper<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void>, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.958586] (kruisee_lidar) StderrLine: {'line': b'  977 |   \x1b[01;31m\x1b[Kget_variant\x1b[m\x1b[K() const\n'}
[8.958622] (kruisee_lidar) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.958655] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:987:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Kvariant_type\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::detail::AnySubscriptionCallbackHelper<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void>, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.958697] (kruisee_lidar) StderrLine: {'line': b'  987 |   typename HelperT::variant_type \x1b[01;31m\x1b[Kcallback_variant_\x1b[m\x1b[K;\n'}
[8.958732] (kruisee_lidar) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.018836] (-) TimerEvent: {}
[9.119162] (-) TimerEvent: {}
[9.219480] (-) TimerEvent: {}
[9.319763] (-) TimerEvent: {}
[9.420075] (-) TimerEvent: {}
[9.444166] (kruisee_lidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[9.444317] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[9.444363] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[9.444407] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[9.444442] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[9.444475] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[9.444514] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[9.444550] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[9.444592] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[9.444630] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[9.444664] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/include/node.h:11\x1b[m\x1b[K,\n'}
[9.444699] (kruisee_lidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/node.cc:9\x1b[m\x1b[K:\n'}
[9.444733] (kruisee_lidar) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set_deprecated(std::function<void(std::shared_ptr<_Yp>)>) [with SetT = std_msgs::msg::String_<std::allocator<void> >; MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.444772] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:391:21:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (Node::*(Node*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >)>; MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.444809] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; CallbackT = std::_Bind<void (Node::*(Node*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::String_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.444853] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; CallbackT = std::_Bind<void (Node::*(Node*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::String_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.444900] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; CallbackT = std::_Bind<void (Node::*(Node*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.444940] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; CallbackT = std::_Bind<void (Node::*(Node*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.445000] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/node.cc:70:79:\x1b[m\x1b[K   required from here\n'}
[9.445035] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:410:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::callback_variant_\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.445081] (kruisee_lidar) StderrLine: {'line': b'  410 |     \x1b[01;31m\x1b[Kcallback_variant_\x1b[m\x1b[K = callback;\n'}
[9.445117] (kruisee_lidar) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.465216] (kruisee_lidar) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/kruisee_lidar_node.dir/build.make:76: CMakeFiles/kruisee_lidar_node.dir/top/main.cc.o] Error 1\n'}
[9.465364] (kruisee_lidar) StderrLine: {'line': b'gmake[2]: *** Waiting for unfinished jobs....\n'}
[9.520177] (-) TimerEvent: {}
[9.610327] (kruisee_lidar) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kconstexpr bool rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::is_serialized_message_callback() const [with MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.610476] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:144:46:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::Subscription(rclcpp::node_interfaces::NodeBaseInterface*, const rosidl_message_type_support_t&, const string&, const rclcpp::QoS&, rclcpp::AnySubscriptionCallback<CallbackMessageT, AllocatorT>, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::SubscriptionTopicStatisticsSharedPtr) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>; SubscribedT = std_msgs::msg::String_<std::allocator<void> >; ROSMessageT = std_msgs::msg::String_<std::allocator<void> >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >; rosidl_message_type_support_t = rosidl_message_type_support_t; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >; rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::SubscriptionTopicStatisticsSharedPtr = std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<std_msgs::msg::String_<std::allocator<void> > > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.610604] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ext/new_allocator.h:162:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const rosidl_message_type_support_t&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::AnySubscriptionCallback<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >&, const rclcpp::SubscriptionOptionsWithAllocator<std::allocator<void> >&, const std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >&, const std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<std_msgs::msg::String_<std::allocator<void> > > >&}; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.610648] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/alloc_traits.h:516:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const rosidl_message_type_support_t&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::AnySubscriptionCallback<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >&, const rclcpp::SubscriptionOptionsWithAllocator<std::allocator<void> >&, const std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >&, const std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<std_msgs::msg::String_<std::allocator<void> > > >&}; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.610741] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:519:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const rosidl_message_type_support_t&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::AnySubscriptionCallback<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >&, const rclcpp::SubscriptionOptionsWithAllocator<std::allocator<void> >&, const std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >&, const std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<std_msgs::msg::String_<std::allocator<void> > > >&}; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; _Alloc = std::allocator<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.610785] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:650:16:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; _Alloc = std::allocator<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const rosidl_message_type_support_t&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::AnySubscriptionCallback<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >&, const rclcpp::SubscriptionOptionsWithAllocator<std::allocator<void> >&, const std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >&, const std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<std_msgs::msg::String_<std::allocator<void> > > >&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.610823] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:1342:14:\x1b[m\x1b[K   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n'}
[9.610857] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:110:3:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic std::shared_ptr<rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT> > rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::make_shared(Args&& ...) [with Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const rosidl_message_type_support_t&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::AnySubscriptionCallback<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >&, const rclcpp::SubscriptionOptionsWithAllocator<std::allocator<void> >&, const std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >&, const std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<std_msgs::msg::String_<std::allocator<void> > > >&}; MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>; SubscribedT = std_msgs::msg::String_<std::allocator<void> >; ROSMessageT = std_msgs::msg::String_<std::allocator<void> >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.610898] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:107:65:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; CallbackT = std::_Bind<void (Node::*(Node*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::String_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.610937] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; CallbackT = std::_Bind<void (Node::*(Node*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::String_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.610975] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; CallbackT = std::_Bind<void (Node::*(Node*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.611012] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; CallbackT = std::_Bind<void (Node::*(Node*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.611049] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/node.cc:70:79:\x1b[m\x1b[K   required from here\n'}
[9.611083] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:949:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::callback_variant_\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.611118] (kruisee_lidar) StderrLine: {'line': b'  949 |       std::holds_alternative<ConstRefSerializedMessageCallback>\x1b[01;31m\x1b[K(callback_variant_)\x1b[m\x1b[K ||\n'}
[9.611151] (kruisee_lidar) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.611184] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:950:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::callback_variant_\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.611219] (kruisee_lidar) StderrLine: {'line': b'  950 |       std::holds_alternative<UniquePtrSerializedMessageCallback>\x1b[01;31m\x1b[K(callback_variant_)\x1b[m\x1b[K ||\n'}
[9.611252] (kruisee_lidar) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.611284] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:951:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::callback_variant_\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.611317] (kruisee_lidar) StderrLine: {'line': b'  951 |       std::holds_alternative<SharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K(callback_variant_)\x1b[m\x1b[K ||\n'}
[9.611351] (kruisee_lidar) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.611383] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:952:79:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::callback_variant_\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.611416] (kruisee_lidar) StderrLine: {'line': b'  952 |       std::holds_alternative<ConstRefSharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K(callback_variant_)\x1b[m\x1b[K ||\n'}
[9.611448] (kruisee_lidar) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.611482] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:953:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::callback_variant_\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.611518] (kruisee_lidar) StderrLine: {'line': b'  953 |       std::holds_alternative<SharedPtrSerializedMessageCallback>\x1b[01;31m\x1b[K(callback_variant_)\x1b[m\x1b[K;\n'}
[9.611551] (kruisee_lidar) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.620249] (-) TimerEvent: {}
[9.671925] (kruisee_lidar) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kconstexpr bool rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::use_take_shared_method() const [with MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.672185] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/resolve_intra_process_buffer_type.hpp:40:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::IntraProcessBufferType rclcpp::detail::resolve_intra_process_buffer_type(rclcpp::IntraProcessBufferType, const rclcpp::AnySubscriptionCallback<CallbackMessageT, AllocatorT>&) [with CallbackMessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.672274] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:216:42:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::Subscription(rclcpp::node_interfaces::NodeBaseInterface*, const rosidl_message_type_support_t&, const string&, const rclcpp::QoS&, rclcpp::AnySubscriptionCallback<CallbackMessageT, AllocatorT>, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::SubscriptionTopicStatisticsSharedPtr) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>; SubscribedT = std_msgs::msg::String_<std::allocator<void> >; ROSMessageT = std_msgs::msg::String_<std::allocator<void> >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >; rosidl_message_type_support_t = rosidl_message_type_support_t; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >; rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::SubscriptionTopicStatisticsSharedPtr = std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<std_msgs::msg::String_<std::allocator<void> > > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.672354] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ext/new_allocator.h:162:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const rosidl_message_type_support_t&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::AnySubscriptionCallback<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >&, const rclcpp::SubscriptionOptionsWithAllocator<std::allocator<void> >&, const std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >&, const std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<std_msgs::msg::String_<std::allocator<void> > > >&}; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.672425] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/alloc_traits.h:516:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const rosidl_message_type_support_t&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::AnySubscriptionCallback<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >&, const rclcpp::SubscriptionOptionsWithAllocator<std::allocator<void> >&, const std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >&, const std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<std_msgs::msg::String_<std::allocator<void> > > >&}; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.672491] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:519:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const rosidl_message_type_support_t&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::AnySubscriptionCallback<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >&, const rclcpp::SubscriptionOptionsWithAllocator<std::allocator<void> >&, const std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >&, const std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<std_msgs::msg::String_<std::allocator<void> > > >&}; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; _Alloc = std::allocator<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.672562] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:650:16:\x1b[m\x1b[K   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n'}
[9.672625] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:110:3:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic std::shared_ptr<rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT> > rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::make_shared(Args&& ...) [with Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const rosidl_message_type_support_t&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::AnySubscriptionCallback<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >&, const rclcpp::SubscriptionOptionsWithAllocator<std::allocator<void> >&, const std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >&, const std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<std_msgs::msg::String_<std::allocator<void> > > >&}; MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>; SubscribedT = std_msgs::msg::String_<std::allocator<void> >; ROSMessageT = std_msgs::msg::String_<std::allocator<void> >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.672699] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:107:65:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; CallbackT = std::_Bind<void (Node::*(Node*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::String_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.672767] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; CallbackT = std::_Bind<void (Node::*(Node*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::String_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.672835] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; CallbackT = std::_Bind<void (Node::*(Node*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.672902] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; CallbackT = std::_Bind<void (Node::*(Node*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.672994] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws02_tools/src/kruisee_lidar/top/node.cc:70:79:\x1b[m\x1b[K   required from here\n'}
[9.673074] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:938:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::callback_variant_\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.673143] (kruisee_lidar) StderrLine: {'line': b'  938 |       std::holds_alternative<SharedConstPtrCallback>\x1b[01;31m\x1b[K(callback_variant_)\x1b[m\x1b[K ||\n'}
[9.673200] (kruisee_lidar) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.673255] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:939:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::callback_variant_\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.673311] (kruisee_lidar) StderrLine: {'line': b'  939 |       std::holds_alternative<SharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K(callback_variant_)\x1b[m\x1b[K ||\n'}
[9.673366] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.673419] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:940:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::callback_variant_\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.673477] (kruisee_lidar) StderrLine: {'line': b'  940 |       std::holds_alternative<ConstRefSharedConstPtrCallback>\x1b[01;31m\x1b[K(callback_variant_)\x1b[m\x1b[K ||\n'}
[9.673533] (kruisee_lidar) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.673591] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:941:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::callback_variant_\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.673644] (kruisee_lidar) StderrLine: {'line': b'  941 |       std::holds_alternative<ConstRefSharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K(callback_variant_)\x1b[m\x1b[K;\n'}
[9.673679] (kruisee_lidar) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.720394] (-) TimerEvent: {}
[9.820691] (-) TimerEvent: {}
[9.921001] (-) TimerEvent: {}
[9.931880] (kruisee_lidar) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::dispatch(std::shared_ptr<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, const rclcpp::MessageInfo&) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = std_msgs::msg::String_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.932039] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:343:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::handle_message(std::shared_ptr<void>&, const rclcpp::MessageInfo&) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>; SubscribedT = std_msgs::msg::String_<std::allocator<void> >; ROSMessageT = std_msgs::msg::String_<std::allocator<void> >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.932143] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:325:3:\x1b[m\x1b[K   required from here\n'}
[9.932191] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:497:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::callback_variant_\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.932240] (kruisee_lidar) StderrLine: {'line': b'  497 |     if (\x1b[01;31m\x1b[Kcallback_variant_\x1b[m\x1b[K.index() == 0) {\n'}
[9.932279] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.932314] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:498:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::callback_variant_\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.932350] (kruisee_lidar) StderrLine: {'line': b'  498 |       if (std::get<0>(\x1b[01;31m\x1b[Kcallback_variant_\x1b[m\x1b[K) == nullptr) {\n'}
[9.932386] (kruisee_lidar) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.932419] (kruisee_lidar) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::dispatch(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.932456] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:358:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::handle_serialized_message(const std::shared_ptr<rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>; SubscribedT = std_msgs::msg::String_<std::allocator<void> >; ROSMessageT = std_msgs::msg::String_<std::allocator<void> >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.932504] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:353:3:\x1b[m\x1b[K   required from here\n'}
[9.932551] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:597:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::callback_variant_\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.932604] (kruisee_lidar) StderrLine: {'line': b'  597 |     if (\x1b[01;31m\x1b[Kcallback_variant_\x1b[m\x1b[K.index() == 0) {\n'}
[9.932639] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.932673] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:598:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::callback_variant_\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.932709] (kruisee_lidar) StderrLine: {'line': b'  598 |       if (std::get<0>(\x1b[01;31m\x1b[Kcallback_variant_\x1b[m\x1b[K) == nullptr) {\n'}
[9.932743] (kruisee_lidar) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.940488] (kruisee_lidar) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::dispatch_intra_process(std::shared_ptr<const typename rclcpp::TypeAdapter<MessageT>::custom_type>, const rclcpp::MessageInfo&) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::custom_type = std_msgs::msg::String_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.940662] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/subscription_intra_process.hpp:166:43:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename std::enable_if<(! std::is_same<T, rcutils_uint8_array_s>::value), void>::type rclcpp::experimental::SubscriptionIntraProcess<MessageT, SubscribedType, SubscribedTypeAlloc, SubscribedTypeDeleter, ROSMessageType, Alloc>::execute_impl(std::shared_ptr<void>&) [with T = std_msgs::msg::String_<std::allocator<void> >; MessageT = std_msgs::msg::String_<std::allocator<void> >; SubscribedType = std_msgs::msg::String_<std::allocator<void> >; SubscribedTypeAlloc = std::allocator<std_msgs::msg::String_<std::allocator<void> > >; SubscribedTypeDeleter = std::default_delete<std_msgs::msg::String_<std::allocator<void> > >; ROSMessageType = std_msgs::msg::String_<std::allocator<void> >; Alloc = std::allocator<void>; typename std::enable_if<(! std::is_same<T, rcutils_uint8_array_s>::value), void>::type = void]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.940711] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/subscription_intra_process.hpp:137:33:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::experimental::SubscriptionIntraProcess<MessageT, SubscribedType, SubscribedTypeAlloc, SubscribedTypeDeleter, ROSMessageType, Alloc>::execute(std::shared_ptr<void>&) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; SubscribedType = std_msgs::msg::String_<std::allocator<void> >; SubscribedTypeAlloc = std::allocator<std_msgs::msg::String_<std::allocator<void> > >; SubscribedTypeDeleter = std::default_delete<std_msgs::msg::String_<std::allocator<void> > >; ROSMessageType = std_msgs::msg::String_<std::allocator<void> >; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.940761] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/subscription_intra_process.hpp:135:8:\x1b[m\x1b[K   required from here\n'}
[9.940799] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:676:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::callback_variant_\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.940840] (kruisee_lidar) StderrLine: {'line': b'  676 |     if (\x1b[01;31m\x1b[Kcallback_variant_\x1b[m\x1b[K.index() == 0) {\n'}
[9.940876] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.940911] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:677:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::callback_variant_\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.940951] (kruisee_lidar) StderrLine: {'line': b'  677 |       if (std::get<0>(\x1b[01;31m\x1b[Kcallback_variant_\x1b[m\x1b[K) == nullptr) {\n'}
[9.940999] (kruisee_lidar) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.941048] (kruisee_lidar) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::dispatch_intra_process(std::unique_ptr<typename rclcpp::TypeAdapter<MessageT>::custom_type, typename rclcpp::detail::MessageDeleterHelper<typename rclcpp::TypeAdapter<MessageT>::custom_type, AllocatorT>::Deleter>, const rclcpp::MessageInfo&) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::detail::MessageDeleterHelper<typename rclcpp::TypeAdapter<MessageT>::custom_type, AllocatorT>::Deleter = std::default_delete<std_msgs::msg::String_<std::allocator<void> > >; typename rclcpp::TypeAdapter<MessageT>::custom_type = std_msgs::msg::String_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.941092] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/subscription_intra_process.hpp:169:43:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename std::enable_if<(! std::is_same<T, rcutils_uint8_array_s>::value), void>::type rclcpp::experimental::SubscriptionIntraProcess<MessageT, SubscribedType, SubscribedTypeAlloc, SubscribedTypeDeleter, ROSMessageType, Alloc>::execute_impl(std::shared_ptr<void>&) [with T = std_msgs::msg::String_<std::allocator<void> >; MessageT = std_msgs::msg::String_<std::allocator<void> >; SubscribedType = std_msgs::msg::String_<std::allocator<void> >; SubscribedTypeAlloc = std::allocator<std_msgs::msg::String_<std::allocator<void> > >; SubscribedTypeDeleter = std::default_delete<std_msgs::msg::String_<std::allocator<void> > >; ROSMessageType = std_msgs::msg::String_<std::allocator<void> >; Alloc = std::allocator<void>; typename std::enable_if<(! std::is_same<T, rcutils_uint8_array_s>::value), void>::type = void]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.941133] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/subscription_intra_process.hpp:137:33:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::experimental::SubscriptionIntraProcess<MessageT, SubscribedType, SubscribedTypeAlloc, SubscribedTypeDeleter, ROSMessageType, Alloc>::execute(std::shared_ptr<void>&) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; SubscribedType = std_msgs::msg::String_<std::allocator<void> >; SubscribedTypeAlloc = std::allocator<std_msgs::msg::String_<std::allocator<void> > >; SubscribedTypeDeleter = std::default_delete<std_msgs::msg::String_<std::allocator<void> > >; ROSMessageType = std_msgs::msg::String_<std::allocator<void> >; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.941171] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/subscription_intra_process.hpp:135:8:\x1b[m\x1b[K   required from here\n'}
[9.941209] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:806:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::callback_variant_\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.941254] (kruisee_lidar) StderrLine: {'line': b'  806 |     if (\x1b[01;31m\x1b[Kcallback_variant_\x1b[m\x1b[K.index() == 0) {\n'}
[9.941292] (kruisee_lidar) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.941330] (kruisee_lidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:807:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::callback_variant_\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.941364] (kruisee_lidar) StderrLine: {'line': b'  807 |       if (std::get<0>(\x1b[01;31m\x1b[Kcallback_variant_\x1b[m\x1b[K) == nullptr) {\n'}
[9.941400] (kruisee_lidar) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[10.021099] (-) TimerEvent: {}
[10.121385] (-) TimerEvent: {}
[10.221694] (-) TimerEvent: {}
[10.321973] (-) TimerEvent: {}
[10.381461] (kruisee_lidar) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/kruisee_lidar_node.dir/build.make:90: CMakeFiles/kruisee_lidar_node.dir/top/node.cc.o] Error 1\n'}
[10.381750] (kruisee_lidar) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:154: CMakeFiles/kruisee_lidar_node.dir/all] Error 2\n'}
[10.381813] (kruisee_lidar) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[10.384238] (kruisee_lidar) CommandEnded: {'returncode': 2}
[10.404743] (kruisee_lidar) JobEnded: {'identifier': 'kruisee_lidar', 'rc': 2}
[10.623607] (-) TimerEvent: {}
[10.623737] (-) EventReactorShutdown: {}
